// This file is @generated. Please do not edit.

#[derive(Copy, Clone, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub enum EntityKind {
    AreaEffectCloud,
    ArmorStand,
    Arrow,
    Bat,
    Bee,
    Blaze,
    Boat,
    Cat,
    CaveSpider,
    Chicken,
    Cod,
    Cow,
    Creeper,
    Dolphin,
    Donkey,
    DragonFireball,
    Drowned,
    ElderGuardian,
    EndCrystal,
    EnderDragon,
    Enderman,
    Endermite,
    Evoker,
    EvokerFangs,
    ExperienceOrb,
    EyeOfEnder,
    FallingBlock,
    FireworkRocket,
    Fox,
    Ghast,
    Giant,
    Guardian,
    Hoglin,
    Horse,
    Husk,
    Illusioner,
    IronGolem,
    Item,
    ItemFrame,
    Fireball,
    LeashKnot,
    LightningBolt,
    Llama,
    LlamaSpit,
    MagmaCube,
    Minecart,
    ChestMinecart,
    CommandBlockMinecart,
    FurnaceMinecart,
    HopperMinecart,
    SpawnerMinecart,
    TntMinecart,
    Mule,
    Mooshroom,
    Ocelot,
    Painting,
    Panda,
    Parrot,
    Phantom,
    Pig,
    Piglin,
    PiglinBrute,
    Pillager,
    PolarBear,
    Tnt,
    Pufferfish,
    Rabbit,
    Ravager,
    Salmon,
    Sheep,
    Shulker,
    ShulkerBullet,
    Silverfish,
    Skeleton,
    SkeletonHorse,
    Slime,
    SmallFireball,
    SnowGolem,
    Snowball,
    SpectralArrow,
    Spider,
    Squid,
    Stray,
    Strider,
    Egg,
    EnderPearl,
    ExperienceBottle,
    Potion,
    Trident,
    TraderLlama,
    TropicalFish,
    Turtle,
    Vex,
    Villager,
    Vindicator,
    WanderingTrader,
    Witch,
    Wither,
    WitherSkeleton,
    WitherSkull,
    Wolf,
    Zoglin,
    Zombie,
    ZombieHorse,
    ZombieVillager,
    ZombifiedPiglin,
    Player,
    FishingBobber,
}

#[allow(warnings)]
#[allow(clippy::all)]
impl EntityKind {
    /// Returns the `id` property of this `EntityKind`.
    pub fn id(&self) -> u32 {
        match self {
            EntityKind::AreaEffectCloud => 0,
            EntityKind::ArmorStand => 1,
            EntityKind::Arrow => 2,
            EntityKind::Bat => 3,
            EntityKind::Bee => 4,
            EntityKind::Blaze => 5,
            EntityKind::Boat => 6,
            EntityKind::Cat => 7,
            EntityKind::CaveSpider => 8,
            EntityKind::Chicken => 9,
            EntityKind::Cod => 10,
            EntityKind::Cow => 11,
            EntityKind::Creeper => 12,
            EntityKind::Dolphin => 13,
            EntityKind::Donkey => 14,
            EntityKind::DragonFireball => 15,
            EntityKind::Drowned => 16,
            EntityKind::ElderGuardian => 17,
            EntityKind::EndCrystal => 18,
            EntityKind::EnderDragon => 19,
            EntityKind::Enderman => 20,
            EntityKind::Endermite => 21,
            EntityKind::Evoker => 22,
            EntityKind::EvokerFangs => 23,
            EntityKind::ExperienceOrb => 24,
            EntityKind::EyeOfEnder => 25,
            EntityKind::FallingBlock => 26,
            EntityKind::FireworkRocket => 27,
            EntityKind::Fox => 28,
            EntityKind::Ghast => 29,
            EntityKind::Giant => 30,
            EntityKind::Guardian => 31,
            EntityKind::Hoglin => 32,
            EntityKind::Horse => 33,
            EntityKind::Husk => 34,
            EntityKind::Illusioner => 35,
            EntityKind::IronGolem => 36,
            EntityKind::Item => 37,
            EntityKind::ItemFrame => 38,
            EntityKind::Fireball => 39,
            EntityKind::LeashKnot => 40,
            EntityKind::LightningBolt => 41,
            EntityKind::Llama => 42,
            EntityKind::LlamaSpit => 43,
            EntityKind::MagmaCube => 44,
            EntityKind::Minecart => 45,
            EntityKind::ChestMinecart => 46,
            EntityKind::CommandBlockMinecart => 47,
            EntityKind::FurnaceMinecart => 48,
            EntityKind::HopperMinecart => 49,
            EntityKind::SpawnerMinecart => 50,
            EntityKind::TntMinecart => 51,
            EntityKind::Mule => 52,
            EntityKind::Mooshroom => 53,
            EntityKind::Ocelot => 54,
            EntityKind::Painting => 55,
            EntityKind::Panda => 56,
            EntityKind::Parrot => 57,
            EntityKind::Phantom => 58,
            EntityKind::Pig => 59,
            EntityKind::Piglin => 60,
            EntityKind::PiglinBrute => 61,
            EntityKind::Pillager => 62,
            EntityKind::PolarBear => 63,
            EntityKind::Tnt => 64,
            EntityKind::Pufferfish => 65,
            EntityKind::Rabbit => 66,
            EntityKind::Ravager => 67,
            EntityKind::Salmon => 68,
            EntityKind::Sheep => 69,
            EntityKind::Shulker => 70,
            EntityKind::ShulkerBullet => 71,
            EntityKind::Silverfish => 72,
            EntityKind::Skeleton => 73,
            EntityKind::SkeletonHorse => 74,
            EntityKind::Slime => 75,
            EntityKind::SmallFireball => 76,
            EntityKind::SnowGolem => 77,
            EntityKind::Snowball => 78,
            EntityKind::SpectralArrow => 79,
            EntityKind::Spider => 80,
            EntityKind::Squid => 81,
            EntityKind::Stray => 82,
            EntityKind::Strider => 83,
            EntityKind::Egg => 84,
            EntityKind::EnderPearl => 85,
            EntityKind::ExperienceBottle => 86,
            EntityKind::Potion => 87,
            EntityKind::Trident => 88,
            EntityKind::TraderLlama => 89,
            EntityKind::TropicalFish => 90,
            EntityKind::Turtle => 91,
            EntityKind::Vex => 92,
            EntityKind::Villager => 93,
            EntityKind::Vindicator => 94,
            EntityKind::WanderingTrader => 95,
            EntityKind::Witch => 96,
            EntityKind::Wither => 97,
            EntityKind::WitherSkeleton => 98,
            EntityKind::WitherSkull => 99,
            EntityKind::Wolf => 100,
            EntityKind::Zoglin => 101,
            EntityKind::Zombie => 102,
            EntityKind::ZombieHorse => 103,
            EntityKind::ZombieVillager => 104,
            EntityKind::ZombifiedPiglin => 105,
            EntityKind::Player => 106,
            EntityKind::FishingBobber => 107,
        }
    }

    /// Gets a `EntityKind` by its `id`.
    pub fn from_id(id: u32) -> Option<Self> {
        match id {
            0 => Some(EntityKind::AreaEffectCloud),
            1 => Some(EntityKind::ArmorStand),
            2 => Some(EntityKind::Arrow),
            3 => Some(EntityKind::Bat),
            4 => Some(EntityKind::Bee),
            5 => Some(EntityKind::Blaze),
            6 => Some(EntityKind::Boat),
            7 => Some(EntityKind::Cat),
            8 => Some(EntityKind::CaveSpider),
            9 => Some(EntityKind::Chicken),
            10 => Some(EntityKind::Cod),
            11 => Some(EntityKind::Cow),
            12 => Some(EntityKind::Creeper),
            13 => Some(EntityKind::Dolphin),
            14 => Some(EntityKind::Donkey),
            15 => Some(EntityKind::DragonFireball),
            16 => Some(EntityKind::Drowned),
            17 => Some(EntityKind::ElderGuardian),
            18 => Some(EntityKind::EndCrystal),
            19 => Some(EntityKind::EnderDragon),
            20 => Some(EntityKind::Enderman),
            21 => Some(EntityKind::Endermite),
            22 => Some(EntityKind::Evoker),
            23 => Some(EntityKind::EvokerFangs),
            24 => Some(EntityKind::ExperienceOrb),
            25 => Some(EntityKind::EyeOfEnder),
            26 => Some(EntityKind::FallingBlock),
            27 => Some(EntityKind::FireworkRocket),
            28 => Some(EntityKind::Fox),
            29 => Some(EntityKind::Ghast),
            30 => Some(EntityKind::Giant),
            31 => Some(EntityKind::Guardian),
            32 => Some(EntityKind::Hoglin),
            33 => Some(EntityKind::Horse),
            34 => Some(EntityKind::Husk),
            35 => Some(EntityKind::Illusioner),
            36 => Some(EntityKind::IronGolem),
            37 => Some(EntityKind::Item),
            38 => Some(EntityKind::ItemFrame),
            39 => Some(EntityKind::Fireball),
            40 => Some(EntityKind::LeashKnot),
            41 => Some(EntityKind::LightningBolt),
            42 => Some(EntityKind::Llama),
            43 => Some(EntityKind::LlamaSpit),
            44 => Some(EntityKind::MagmaCube),
            45 => Some(EntityKind::Minecart),
            46 => Some(EntityKind::ChestMinecart),
            47 => Some(EntityKind::CommandBlockMinecart),
            48 => Some(EntityKind::FurnaceMinecart),
            49 => Some(EntityKind::HopperMinecart),
            50 => Some(EntityKind::SpawnerMinecart),
            51 => Some(EntityKind::TntMinecart),
            52 => Some(EntityKind::Mule),
            53 => Some(EntityKind::Mooshroom),
            54 => Some(EntityKind::Ocelot),
            55 => Some(EntityKind::Painting),
            56 => Some(EntityKind::Panda),
            57 => Some(EntityKind::Parrot),
            58 => Some(EntityKind::Phantom),
            59 => Some(EntityKind::Pig),
            60 => Some(EntityKind::Piglin),
            61 => Some(EntityKind::PiglinBrute),
            62 => Some(EntityKind::Pillager),
            63 => Some(EntityKind::PolarBear),
            64 => Some(EntityKind::Tnt),
            65 => Some(EntityKind::Pufferfish),
            66 => Some(EntityKind::Rabbit),
            67 => Some(EntityKind::Ravager),
            68 => Some(EntityKind::Salmon),
            69 => Some(EntityKind::Sheep),
            70 => Some(EntityKind::Shulker),
            71 => Some(EntityKind::ShulkerBullet),
            72 => Some(EntityKind::Silverfish),
            73 => Some(EntityKind::Skeleton),
            74 => Some(EntityKind::SkeletonHorse),
            75 => Some(EntityKind::Slime),
            76 => Some(EntityKind::SmallFireball),
            77 => Some(EntityKind::SnowGolem),
            78 => Some(EntityKind::Snowball),
            79 => Some(EntityKind::SpectralArrow),
            80 => Some(EntityKind::Spider),
            81 => Some(EntityKind::Squid),
            82 => Some(EntityKind::Stray),
            83 => Some(EntityKind::Strider),
            84 => Some(EntityKind::Egg),
            85 => Some(EntityKind::EnderPearl),
            86 => Some(EntityKind::ExperienceBottle),
            87 => Some(EntityKind::Potion),
            88 => Some(EntityKind::Trident),
            89 => Some(EntityKind::TraderLlama),
            90 => Some(EntityKind::TropicalFish),
            91 => Some(EntityKind::Turtle),
            92 => Some(EntityKind::Vex),
            93 => Some(EntityKind::Villager),
            94 => Some(EntityKind::Vindicator),
            95 => Some(EntityKind::WanderingTrader),
            96 => Some(EntityKind::Witch),
            97 => Some(EntityKind::Wither),
            98 => Some(EntityKind::WitherSkeleton),
            99 => Some(EntityKind::WitherSkull),
            100 => Some(EntityKind::Wolf),
            101 => Some(EntityKind::Zoglin),
            102 => Some(EntityKind::Zombie),
            103 => Some(EntityKind::ZombieHorse),
            104 => Some(EntityKind::ZombieVillager),
            105 => Some(EntityKind::ZombifiedPiglin),
            106 => Some(EntityKind::Player),
            107 => Some(EntityKind::FishingBobber),
            _ => None,
        }
    }
}
#[allow(warnings)]
#[allow(clippy::all)]
impl EntityKind {
    /// Returns the `internal_id` property of this `EntityKind`.
    pub fn internal_id(&self) -> u32 {
        match self {
            EntityKind::AreaEffectCloud => 0,
            EntityKind::ArmorStand => 1,
            EntityKind::Arrow => 2,
            EntityKind::Bat => 3,
            EntityKind::Bee => 4,
            EntityKind::Blaze => 5,
            EntityKind::Boat => 6,
            EntityKind::Cat => 7,
            EntityKind::CaveSpider => 8,
            EntityKind::Chicken => 9,
            EntityKind::Cod => 10,
            EntityKind::Cow => 11,
            EntityKind::Creeper => 12,
            EntityKind::Dolphin => 13,
            EntityKind::Donkey => 14,
            EntityKind::DragonFireball => 15,
            EntityKind::Drowned => 16,
            EntityKind::ElderGuardian => 17,
            EntityKind::EndCrystal => 18,
            EntityKind::EnderDragon => 19,
            EntityKind::Enderman => 20,
            EntityKind::Endermite => 21,
            EntityKind::Evoker => 22,
            EntityKind::EvokerFangs => 23,
            EntityKind::ExperienceOrb => 24,
            EntityKind::EyeOfEnder => 25,
            EntityKind::FallingBlock => 26,
            EntityKind::FireworkRocket => 27,
            EntityKind::Fox => 28,
            EntityKind::Ghast => 29,
            EntityKind::Giant => 30,
            EntityKind::Guardian => 31,
            EntityKind::Hoglin => 32,
            EntityKind::Horse => 33,
            EntityKind::Husk => 34,
            EntityKind::Illusioner => 35,
            EntityKind::IronGolem => 36,
            EntityKind::Item => 37,
            EntityKind::ItemFrame => 38,
            EntityKind::Fireball => 39,
            EntityKind::LeashKnot => 40,
            EntityKind::LightningBolt => 41,
            EntityKind::Llama => 42,
            EntityKind::LlamaSpit => 43,
            EntityKind::MagmaCube => 44,
            EntityKind::Minecart => 45,
            EntityKind::ChestMinecart => 46,
            EntityKind::CommandBlockMinecart => 47,
            EntityKind::FurnaceMinecart => 48,
            EntityKind::HopperMinecart => 49,
            EntityKind::SpawnerMinecart => 50,
            EntityKind::TntMinecart => 51,
            EntityKind::Mule => 52,
            EntityKind::Mooshroom => 53,
            EntityKind::Ocelot => 54,
            EntityKind::Painting => 55,
            EntityKind::Panda => 56,
            EntityKind::Parrot => 57,
            EntityKind::Phantom => 58,
            EntityKind::Pig => 59,
            EntityKind::Piglin => 60,
            EntityKind::PiglinBrute => 61,
            EntityKind::Pillager => 62,
            EntityKind::PolarBear => 63,
            EntityKind::Tnt => 64,
            EntityKind::Pufferfish => 65,
            EntityKind::Rabbit => 66,
            EntityKind::Ravager => 67,
            EntityKind::Salmon => 68,
            EntityKind::Sheep => 69,
            EntityKind::Shulker => 70,
            EntityKind::ShulkerBullet => 71,
            EntityKind::Silverfish => 72,
            EntityKind::Skeleton => 73,
            EntityKind::SkeletonHorse => 74,
            EntityKind::Slime => 75,
            EntityKind::SmallFireball => 76,
            EntityKind::SnowGolem => 77,
            EntityKind::Snowball => 78,
            EntityKind::SpectralArrow => 79,
            EntityKind::Spider => 80,
            EntityKind::Squid => 81,
            EntityKind::Stray => 82,
            EntityKind::Strider => 83,
            EntityKind::Egg => 84,
            EntityKind::EnderPearl => 85,
            EntityKind::ExperienceBottle => 86,
            EntityKind::Potion => 87,
            EntityKind::Trident => 88,
            EntityKind::TraderLlama => 89,
            EntityKind::TropicalFish => 90,
            EntityKind::Turtle => 91,
            EntityKind::Vex => 92,
            EntityKind::Villager => 93,
            EntityKind::Vindicator => 94,
            EntityKind::WanderingTrader => 95,
            EntityKind::Witch => 96,
            EntityKind::Wither => 97,
            EntityKind::WitherSkeleton => 98,
            EntityKind::WitherSkull => 99,
            EntityKind::Wolf => 100,
            EntityKind::Zoglin => 101,
            EntityKind::Zombie => 102,
            EntityKind::ZombieHorse => 103,
            EntityKind::ZombieVillager => 104,
            EntityKind::ZombifiedPiglin => 105,
            EntityKind::Player => 106,
            EntityKind::FishingBobber => 107,
        }
    }

    /// Gets a `EntityKind` by its `internal_id`.
    pub fn from_internal_id(internal_id: u32) -> Option<Self> {
        match internal_id {
            0 => Some(EntityKind::AreaEffectCloud),
            1 => Some(EntityKind::ArmorStand),
            2 => Some(EntityKind::Arrow),
            3 => Some(EntityKind::Bat),
            4 => Some(EntityKind::Bee),
            5 => Some(EntityKind::Blaze),
            6 => Some(EntityKind::Boat),
            7 => Some(EntityKind::Cat),
            8 => Some(EntityKind::CaveSpider),
            9 => Some(EntityKind::Chicken),
            10 => Some(EntityKind::Cod),
            11 => Some(EntityKind::Cow),
            12 => Some(EntityKind::Creeper),
            13 => Some(EntityKind::Dolphin),
            14 => Some(EntityKind::Donkey),
            15 => Some(EntityKind::DragonFireball),
            16 => Some(EntityKind::Drowned),
            17 => Some(EntityKind::ElderGuardian),
            18 => Some(EntityKind::EndCrystal),
            19 => Some(EntityKind::EnderDragon),
            20 => Some(EntityKind::Enderman),
            21 => Some(EntityKind::Endermite),
            22 => Some(EntityKind::Evoker),
            23 => Some(EntityKind::EvokerFangs),
            24 => Some(EntityKind::ExperienceOrb),
            25 => Some(EntityKind::EyeOfEnder),
            26 => Some(EntityKind::FallingBlock),
            27 => Some(EntityKind::FireworkRocket),
            28 => Some(EntityKind::Fox),
            29 => Some(EntityKind::Ghast),
            30 => Some(EntityKind::Giant),
            31 => Some(EntityKind::Guardian),
            32 => Some(EntityKind::Hoglin),
            33 => Some(EntityKind::Horse),
            34 => Some(EntityKind::Husk),
            35 => Some(EntityKind::Illusioner),
            36 => Some(EntityKind::IronGolem),
            37 => Some(EntityKind::Item),
            38 => Some(EntityKind::ItemFrame),
            39 => Some(EntityKind::Fireball),
            40 => Some(EntityKind::LeashKnot),
            41 => Some(EntityKind::LightningBolt),
            42 => Some(EntityKind::Llama),
            43 => Some(EntityKind::LlamaSpit),
            44 => Some(EntityKind::MagmaCube),
            45 => Some(EntityKind::Minecart),
            46 => Some(EntityKind::ChestMinecart),
            47 => Some(EntityKind::CommandBlockMinecart),
            48 => Some(EntityKind::FurnaceMinecart),
            49 => Some(EntityKind::HopperMinecart),
            50 => Some(EntityKind::SpawnerMinecart),
            51 => Some(EntityKind::TntMinecart),
            52 => Some(EntityKind::Mule),
            53 => Some(EntityKind::Mooshroom),
            54 => Some(EntityKind::Ocelot),
            55 => Some(EntityKind::Painting),
            56 => Some(EntityKind::Panda),
            57 => Some(EntityKind::Parrot),
            58 => Some(EntityKind::Phantom),
            59 => Some(EntityKind::Pig),
            60 => Some(EntityKind::Piglin),
            61 => Some(EntityKind::PiglinBrute),
            62 => Some(EntityKind::Pillager),
            63 => Some(EntityKind::PolarBear),
            64 => Some(EntityKind::Tnt),
            65 => Some(EntityKind::Pufferfish),
            66 => Some(EntityKind::Rabbit),
            67 => Some(EntityKind::Ravager),
            68 => Some(EntityKind::Salmon),
            69 => Some(EntityKind::Sheep),
            70 => Some(EntityKind::Shulker),
            71 => Some(EntityKind::ShulkerBullet),
            72 => Some(EntityKind::Silverfish),
            73 => Some(EntityKind::Skeleton),
            74 => Some(EntityKind::SkeletonHorse),
            75 => Some(EntityKind::Slime),
            76 => Some(EntityKind::SmallFireball),
            77 => Some(EntityKind::SnowGolem),
            78 => Some(EntityKind::Snowball),
            79 => Some(EntityKind::SpectralArrow),
            80 => Some(EntityKind::Spider),
            81 => Some(EntityKind::Squid),
            82 => Some(EntityKind::Stray),
            83 => Some(EntityKind::Strider),
            84 => Some(EntityKind::Egg),
            85 => Some(EntityKind::EnderPearl),
            86 => Some(EntityKind::ExperienceBottle),
            87 => Some(EntityKind::Potion),
            88 => Some(EntityKind::Trident),
            89 => Some(EntityKind::TraderLlama),
            90 => Some(EntityKind::TropicalFish),
            91 => Some(EntityKind::Turtle),
            92 => Some(EntityKind::Vex),
            93 => Some(EntityKind::Villager),
            94 => Some(EntityKind::Vindicator),
            95 => Some(EntityKind::WanderingTrader),
            96 => Some(EntityKind::Witch),
            97 => Some(EntityKind::Wither),
            98 => Some(EntityKind::WitherSkeleton),
            99 => Some(EntityKind::WitherSkull),
            100 => Some(EntityKind::Wolf),
            101 => Some(EntityKind::Zoglin),
            102 => Some(EntityKind::Zombie),
            103 => Some(EntityKind::ZombieHorse),
            104 => Some(EntityKind::ZombieVillager),
            105 => Some(EntityKind::ZombifiedPiglin),
            106 => Some(EntityKind::Player),
            107 => Some(EntityKind::FishingBobber),
            _ => None,
        }
    }
}
#[allow(warnings)]
#[allow(clippy::all)]
impl EntityKind {
    /// Returns the `name` property of this `EntityKind`.
    pub fn name(&self) -> &'static str {
        match self {
            EntityKind::AreaEffectCloud => "area_effect_cloud",
            EntityKind::ArmorStand => "armor_stand",
            EntityKind::Arrow => "arrow",
            EntityKind::Bat => "bat",
            EntityKind::Bee => "bee",
            EntityKind::Blaze => "blaze",
            EntityKind::Boat => "boat",
            EntityKind::Cat => "cat",
            EntityKind::CaveSpider => "cave_spider",
            EntityKind::Chicken => "chicken",
            EntityKind::Cod => "cod",
            EntityKind::Cow => "cow",
            EntityKind::Creeper => "creeper",
            EntityKind::Dolphin => "dolphin",
            EntityKind::Donkey => "donkey",
            EntityKind::DragonFireball => "dragon_fireball",
            EntityKind::Drowned => "drowned",
            EntityKind::ElderGuardian => "elder_guardian",
            EntityKind::EndCrystal => "end_crystal",
            EntityKind::EnderDragon => "ender_dragon",
            EntityKind::Enderman => "enderman",
            EntityKind::Endermite => "endermite",
            EntityKind::Evoker => "evoker",
            EntityKind::EvokerFangs => "evoker_fangs",
            EntityKind::ExperienceOrb => "experience_orb",
            EntityKind::EyeOfEnder => "eye_of_ender",
            EntityKind::FallingBlock => "falling_block",
            EntityKind::FireworkRocket => "firework_rocket",
            EntityKind::Fox => "fox",
            EntityKind::Ghast => "ghast",
            EntityKind::Giant => "giant",
            EntityKind::Guardian => "guardian",
            EntityKind::Hoglin => "hoglin",
            EntityKind::Horse => "horse",
            EntityKind::Husk => "husk",
            EntityKind::Illusioner => "illusioner",
            EntityKind::IronGolem => "iron_golem",
            EntityKind::Item => "item",
            EntityKind::ItemFrame => "item_frame",
            EntityKind::Fireball => "fireball",
            EntityKind::LeashKnot => "leash_knot",
            EntityKind::LightningBolt => "lightning_bolt",
            EntityKind::Llama => "llama",
            EntityKind::LlamaSpit => "llama_spit",
            EntityKind::MagmaCube => "magma_cube",
            EntityKind::Minecart => "minecart",
            EntityKind::ChestMinecart => "chest_minecart",
            EntityKind::CommandBlockMinecart => "command_block_minecart",
            EntityKind::FurnaceMinecart => "furnace_minecart",
            EntityKind::HopperMinecart => "hopper_minecart",
            EntityKind::SpawnerMinecart => "spawner_minecart",
            EntityKind::TntMinecart => "tnt_minecart",
            EntityKind::Mule => "mule",
            EntityKind::Mooshroom => "mooshroom",
            EntityKind::Ocelot => "ocelot",
            EntityKind::Painting => "painting",
            EntityKind::Panda => "panda",
            EntityKind::Parrot => "parrot",
            EntityKind::Phantom => "phantom",
            EntityKind::Pig => "pig",
            EntityKind::Piglin => "piglin",
            EntityKind::PiglinBrute => "piglin_brute",
            EntityKind::Pillager => "pillager",
            EntityKind::PolarBear => "polar_bear",
            EntityKind::Tnt => "tnt",
            EntityKind::Pufferfish => "pufferfish",
            EntityKind::Rabbit => "rabbit",
            EntityKind::Ravager => "ravager",
            EntityKind::Salmon => "salmon",
            EntityKind::Sheep => "sheep",
            EntityKind::Shulker => "shulker",
            EntityKind::ShulkerBullet => "shulker_bullet",
            EntityKind::Silverfish => "silverfish",
            EntityKind::Skeleton => "skeleton",
            EntityKind::SkeletonHorse => "skeleton_horse",
            EntityKind::Slime => "slime",
            EntityKind::SmallFireball => "small_fireball",
            EntityKind::SnowGolem => "snow_golem",
            EntityKind::Snowball => "snowball",
            EntityKind::SpectralArrow => "spectral_arrow",
            EntityKind::Spider => "spider",
            EntityKind::Squid => "squid",
            EntityKind::Stray => "stray",
            EntityKind::Strider => "strider",
            EntityKind::Egg => "egg",
            EntityKind::EnderPearl => "ender_pearl",
            EntityKind::ExperienceBottle => "experience_bottle",
            EntityKind::Potion => "potion",
            EntityKind::Trident => "trident",
            EntityKind::TraderLlama => "trader_llama",
            EntityKind::TropicalFish => "tropical_fish",
            EntityKind::Turtle => "turtle",
            EntityKind::Vex => "vex",
            EntityKind::Villager => "villager",
            EntityKind::Vindicator => "vindicator",
            EntityKind::WanderingTrader => "wandering_trader",
            EntityKind::Witch => "witch",
            EntityKind::Wither => "wither",
            EntityKind::WitherSkeleton => "wither_skeleton",
            EntityKind::WitherSkull => "wither_skull",
            EntityKind::Wolf => "wolf",
            EntityKind::Zoglin => "zoglin",
            EntityKind::Zombie => "zombie",
            EntityKind::ZombieHorse => "zombie_horse",
            EntityKind::ZombieVillager => "zombie_villager",
            EntityKind::ZombifiedPiglin => "zombified_piglin",
            EntityKind::Player => "player",
            EntityKind::FishingBobber => "fishing_bobber",
        }
    }

    /// Gets a `EntityKind` by its `name`.
    pub fn from_name(name: &str) -> Option<Self> {
        match name {
            "area_effect_cloud" => Some(EntityKind::AreaEffectCloud),
            "armor_stand" => Some(EntityKind::ArmorStand),
            "arrow" => Some(EntityKind::Arrow),
            "bat" => Some(EntityKind::Bat),
            "bee" => Some(EntityKind::Bee),
            "blaze" => Some(EntityKind::Blaze),
            "boat" => Some(EntityKind::Boat),
            "cat" => Some(EntityKind::Cat),
            "cave_spider" => Some(EntityKind::CaveSpider),
            "chicken" => Some(EntityKind::Chicken),
            "cod" => Some(EntityKind::Cod),
            "cow" => Some(EntityKind::Cow),
            "creeper" => Some(EntityKind::Creeper),
            "dolphin" => Some(EntityKind::Dolphin),
            "donkey" => Some(EntityKind::Donkey),
            "dragon_fireball" => Some(EntityKind::DragonFireball),
            "drowned" => Some(EntityKind::Drowned),
            "elder_guardian" => Some(EntityKind::ElderGuardian),
            "end_crystal" => Some(EntityKind::EndCrystal),
            "ender_dragon" => Some(EntityKind::EnderDragon),
            "enderman" => Some(EntityKind::Enderman),
            "endermite" => Some(EntityKind::Endermite),
            "evoker" => Some(EntityKind::Evoker),
            "evoker_fangs" => Some(EntityKind::EvokerFangs),
            "experience_orb" => Some(EntityKind::ExperienceOrb),
            "eye_of_ender" => Some(EntityKind::EyeOfEnder),
            "falling_block" => Some(EntityKind::FallingBlock),
            "firework_rocket" => Some(EntityKind::FireworkRocket),
            "fox" => Some(EntityKind::Fox),
            "ghast" => Some(EntityKind::Ghast),
            "giant" => Some(EntityKind::Giant),
            "guardian" => Some(EntityKind::Guardian),
            "hoglin" => Some(EntityKind::Hoglin),
            "horse" => Some(EntityKind::Horse),
            "husk" => Some(EntityKind::Husk),
            "illusioner" => Some(EntityKind::Illusioner),
            "iron_golem" => Some(EntityKind::IronGolem),
            "item" => Some(EntityKind::Item),
            "item_frame" => Some(EntityKind::ItemFrame),
            "fireball" => Some(EntityKind::Fireball),
            "leash_knot" => Some(EntityKind::LeashKnot),
            "lightning_bolt" => Some(EntityKind::LightningBolt),
            "llama" => Some(EntityKind::Llama),
            "llama_spit" => Some(EntityKind::LlamaSpit),
            "magma_cube" => Some(EntityKind::MagmaCube),
            "minecart" => Some(EntityKind::Minecart),
            "chest_minecart" => Some(EntityKind::ChestMinecart),
            "command_block_minecart" => Some(EntityKind::CommandBlockMinecart),
            "furnace_minecart" => Some(EntityKind::FurnaceMinecart),
            "hopper_minecart" => Some(EntityKind::HopperMinecart),
            "spawner_minecart" => Some(EntityKind::SpawnerMinecart),
            "tnt_minecart" => Some(EntityKind::TntMinecart),
            "mule" => Some(EntityKind::Mule),
            "mooshroom" => Some(EntityKind::Mooshroom),
            "ocelot" => Some(EntityKind::Ocelot),
            "painting" => Some(EntityKind::Painting),
            "panda" => Some(EntityKind::Panda),
            "parrot" => Some(EntityKind::Parrot),
            "phantom" => Some(EntityKind::Phantom),
            "pig" => Some(EntityKind::Pig),
            "piglin" => Some(EntityKind::Piglin),
            "piglin_brute" => Some(EntityKind::PiglinBrute),
            "pillager" => Some(EntityKind::Pillager),
            "polar_bear" => Some(EntityKind::PolarBear),
            "tnt" => Some(EntityKind::Tnt),
            "pufferfish" => Some(EntityKind::Pufferfish),
            "rabbit" => Some(EntityKind::Rabbit),
            "ravager" => Some(EntityKind::Ravager),
            "salmon" => Some(EntityKind::Salmon),
            "sheep" => Some(EntityKind::Sheep),
            "shulker" => Some(EntityKind::Shulker),
            "shulker_bullet" => Some(EntityKind::ShulkerBullet),
            "silverfish" => Some(EntityKind::Silverfish),
            "skeleton" => Some(EntityKind::Skeleton),
            "skeleton_horse" => Some(EntityKind::SkeletonHorse),
            "slime" => Some(EntityKind::Slime),
            "small_fireball" => Some(EntityKind::SmallFireball),
            "snow_golem" => Some(EntityKind::SnowGolem),
            "snowball" => Some(EntityKind::Snowball),
            "spectral_arrow" => Some(EntityKind::SpectralArrow),
            "spider" => Some(EntityKind::Spider),
            "squid" => Some(EntityKind::Squid),
            "stray" => Some(EntityKind::Stray),
            "strider" => Some(EntityKind::Strider),
            "egg" => Some(EntityKind::Egg),
            "ender_pearl" => Some(EntityKind::EnderPearl),
            "experience_bottle" => Some(EntityKind::ExperienceBottle),
            "potion" => Some(EntityKind::Potion),
            "trident" => Some(EntityKind::Trident),
            "trader_llama" => Some(EntityKind::TraderLlama),
            "tropical_fish" => Some(EntityKind::TropicalFish),
            "turtle" => Some(EntityKind::Turtle),
            "vex" => Some(EntityKind::Vex),
            "villager" => Some(EntityKind::Villager),
            "vindicator" => Some(EntityKind::Vindicator),
            "wandering_trader" => Some(EntityKind::WanderingTrader),
            "witch" => Some(EntityKind::Witch),
            "wither" => Some(EntityKind::Wither),
            "wither_skeleton" => Some(EntityKind::WitherSkeleton),
            "wither_skull" => Some(EntityKind::WitherSkull),
            "wolf" => Some(EntityKind::Wolf),
            "zoglin" => Some(EntityKind::Zoglin),
            "zombie" => Some(EntityKind::Zombie),
            "zombie_horse" => Some(EntityKind::ZombieHorse),
            "zombie_villager" => Some(EntityKind::ZombieVillager),
            "zombified_piglin" => Some(EntityKind::ZombifiedPiglin),
            "player" => Some(EntityKind::Player),
            "fishing_bobber" => Some(EntityKind::FishingBobber),
            _ => None,
        }
    }
}
#[allow(warnings)]
#[allow(clippy::all)]
impl EntityKind {
    /// Returns the `display_name` property of this `EntityKind`.
    pub fn display_name(&self) -> &'static str {
        match self {
            EntityKind::AreaEffectCloud => "Area Effect Cloud",
            EntityKind::ArmorStand => "Armor Stand",
            EntityKind::Arrow => "Arrow",
            EntityKind::Bat => "Bat",
            EntityKind::Bee => "Bee",
            EntityKind::Blaze => "Blaze",
            EntityKind::Boat => "Boat",
            EntityKind::Cat => "Cat",
            EntityKind::CaveSpider => "Cave Spider",
            EntityKind::Chicken => "Chicken",
            EntityKind::Cod => "Cod",
            EntityKind::Cow => "Cow",
            EntityKind::Creeper => "Creeper",
            EntityKind::Dolphin => "Dolphin",
            EntityKind::Donkey => "Donkey",
            EntityKind::DragonFireball => "Dragon Fireball",
            EntityKind::Drowned => "Drowned",
            EntityKind::ElderGuardian => "Elder Guardian",
            EntityKind::EndCrystal => "End Crystal",
            EntityKind::EnderDragon => "Ender Dragon",
            EntityKind::Enderman => "Enderman",
            EntityKind::Endermite => "Endermite",
            EntityKind::Evoker => "Evoker",
            EntityKind::EvokerFangs => "Evoker Fangs",
            EntityKind::ExperienceOrb => "Experience Orb",
            EntityKind::EyeOfEnder => "Eye of Ender",
            EntityKind::FallingBlock => "Falling Block",
            EntityKind::FireworkRocket => "Firework Rocket",
            EntityKind::Fox => "Fox",
            EntityKind::Ghast => "Ghast",
            EntityKind::Giant => "Giant",
            EntityKind::Guardian => "Guardian",
            EntityKind::Hoglin => "Hoglin",
            EntityKind::Horse => "Horse",
            EntityKind::Husk => "Husk",
            EntityKind::Illusioner => "Illusioner",
            EntityKind::IronGolem => "Iron Golem",
            EntityKind::Item => "Item",
            EntityKind::ItemFrame => "Item Frame",
            EntityKind::Fireball => "Fireball",
            EntityKind::LeashKnot => "Leash Knot",
            EntityKind::LightningBolt => "Lightning Bolt",
            EntityKind::Llama => "Llama",
            EntityKind::LlamaSpit => "Llama Spit",
            EntityKind::MagmaCube => "Magma Cube",
            EntityKind::Minecart => "Minecart",
            EntityKind::ChestMinecart => "Minecart with Chest",
            EntityKind::CommandBlockMinecart => "Minecart with Command Block",
            EntityKind::FurnaceMinecart => "Minecart with Furnace",
            EntityKind::HopperMinecart => "Minecart with Hopper",
            EntityKind::SpawnerMinecart => "Minecart with Spawner",
            EntityKind::TntMinecart => "Minecart with TNT",
            EntityKind::Mule => "Mule",
            EntityKind::Mooshroom => "Mooshroom",
            EntityKind::Ocelot => "Ocelot",
            EntityKind::Painting => "Painting",
            EntityKind::Panda => "Panda",
            EntityKind::Parrot => "Parrot",
            EntityKind::Phantom => "Phantom",
            EntityKind::Pig => "Pig",
            EntityKind::Piglin => "Piglin",
            EntityKind::PiglinBrute => "Piglin Brute",
            EntityKind::Pillager => "Pillager",
            EntityKind::PolarBear => "Polar Bear",
            EntityKind::Tnt => "Primed TNT",
            EntityKind::Pufferfish => "Pufferfish",
            EntityKind::Rabbit => "Rabbit",
            EntityKind::Ravager => "Ravager",
            EntityKind::Salmon => "Salmon",
            EntityKind::Sheep => "Sheep",
            EntityKind::Shulker => "Shulker",
            EntityKind::ShulkerBullet => "Shulker Bullet",
            EntityKind::Silverfish => "Silverfish",
            EntityKind::Skeleton => "Skeleton",
            EntityKind::SkeletonHorse => "Skeleton Horse",
            EntityKind::Slime => "Slime",
            EntityKind::SmallFireball => "Small Fireball",
            EntityKind::SnowGolem => "Snow Golem",
            EntityKind::Snowball => "Snowball",
            EntityKind::SpectralArrow => "Spectral Arrow",
            EntityKind::Spider => "Spider",
            EntityKind::Squid => "Squid",
            EntityKind::Stray => "Stray",
            EntityKind::Strider => "Strider",
            EntityKind::Egg => "Thrown Egg",
            EntityKind::EnderPearl => "Thrown Ender Pearl",
            EntityKind::ExperienceBottle => "Thrown Bottle o' Enchanting",
            EntityKind::Potion => "Potion",
            EntityKind::Trident => "Trident",
            EntityKind::TraderLlama => "Trader Llama",
            EntityKind::TropicalFish => "Tropical Fish",
            EntityKind::Turtle => "Turtle",
            EntityKind::Vex => "Vex",
            EntityKind::Villager => "Villager",
            EntityKind::Vindicator => "Vindicator",
            EntityKind::WanderingTrader => "Wandering Trader",
            EntityKind::Witch => "Witch",
            EntityKind::Wither => "Wither",
            EntityKind::WitherSkeleton => "Wither Skeleton",
            EntityKind::WitherSkull => "Wither Skull",
            EntityKind::Wolf => "Wolf",
            EntityKind::Zoglin => "Zoglin",
            EntityKind::Zombie => "Zombie",
            EntityKind::ZombieHorse => "Zombie Horse",
            EntityKind::ZombieVillager => "Zombie Villager",
            EntityKind::ZombifiedPiglin => "Zombified Piglin",
            EntityKind::Player => "Player",
            EntityKind::FishingBobber => "Fishing Bobber",
        }
    }

    /// Gets a `EntityKind` by its `display_name`.
    pub fn from_display_name(display_name: &str) -> Option<Self> {
        match display_name {
            "Area Effect Cloud" => Some(EntityKind::AreaEffectCloud),
            "Armor Stand" => Some(EntityKind::ArmorStand),
            "Arrow" => Some(EntityKind::Arrow),
            "Bat" => Some(EntityKind::Bat),
            "Bee" => Some(EntityKind::Bee),
            "Blaze" => Some(EntityKind::Blaze),
            "Boat" => Some(EntityKind::Boat),
            "Cat" => Some(EntityKind::Cat),
            "Cave Spider" => Some(EntityKind::CaveSpider),
            "Chicken" => Some(EntityKind::Chicken),
            "Cod" => Some(EntityKind::Cod),
            "Cow" => Some(EntityKind::Cow),
            "Creeper" => Some(EntityKind::Creeper),
            "Dolphin" => Some(EntityKind::Dolphin),
            "Donkey" => Some(EntityKind::Donkey),
            "Dragon Fireball" => Some(EntityKind::DragonFireball),
            "Drowned" => Some(EntityKind::Drowned),
            "Elder Guardian" => Some(EntityKind::ElderGuardian),
            "End Crystal" => Some(EntityKind::EndCrystal),
            "Ender Dragon" => Some(EntityKind::EnderDragon),
            "Enderman" => Some(EntityKind::Enderman),
            "Endermite" => Some(EntityKind::Endermite),
            "Evoker" => Some(EntityKind::Evoker),
            "Evoker Fangs" => Some(EntityKind::EvokerFangs),
            "Experience Orb" => Some(EntityKind::ExperienceOrb),
            "Eye of Ender" => Some(EntityKind::EyeOfEnder),
            "Falling Block" => Some(EntityKind::FallingBlock),
            "Firework Rocket" => Some(EntityKind::FireworkRocket),
            "Fox" => Some(EntityKind::Fox),
            "Ghast" => Some(EntityKind::Ghast),
            "Giant" => Some(EntityKind::Giant),
            "Guardian" => Some(EntityKind::Guardian),
            "Hoglin" => Some(EntityKind::Hoglin),
            "Horse" => Some(EntityKind::Horse),
            "Husk" => Some(EntityKind::Husk),
            "Illusioner" => Some(EntityKind::Illusioner),
            "Iron Golem" => Some(EntityKind::IronGolem),
            "Item" => Some(EntityKind::Item),
            "Item Frame" => Some(EntityKind::ItemFrame),
            "Fireball" => Some(EntityKind::Fireball),
            "Leash Knot" => Some(EntityKind::LeashKnot),
            "Lightning Bolt" => Some(EntityKind::LightningBolt),
            "Llama" => Some(EntityKind::Llama),
            "Llama Spit" => Some(EntityKind::LlamaSpit),
            "Magma Cube" => Some(EntityKind::MagmaCube),
            "Minecart" => Some(EntityKind::Minecart),
            "Minecart with Chest" => Some(EntityKind::ChestMinecart),
            "Minecart with Command Block" => Some(EntityKind::CommandBlockMinecart),
            "Minecart with Furnace" => Some(EntityKind::FurnaceMinecart),
            "Minecart with Hopper" => Some(EntityKind::HopperMinecart),
            "Minecart with Spawner" => Some(EntityKind::SpawnerMinecart),
            "Minecart with TNT" => Some(EntityKind::TntMinecart),
            "Mule" => Some(EntityKind::Mule),
            "Mooshroom" => Some(EntityKind::Mooshroom),
            "Ocelot" => Some(EntityKind::Ocelot),
            "Painting" => Some(EntityKind::Painting),
            "Panda" => Some(EntityKind::Panda),
            "Parrot" => Some(EntityKind::Parrot),
            "Phantom" => Some(EntityKind::Phantom),
            "Pig" => Some(EntityKind::Pig),
            "Piglin" => Some(EntityKind::Piglin),
            "Piglin Brute" => Some(EntityKind::PiglinBrute),
            "Pillager" => Some(EntityKind::Pillager),
            "Polar Bear" => Some(EntityKind::PolarBear),
            "Primed TNT" => Some(EntityKind::Tnt),
            "Pufferfish" => Some(EntityKind::Pufferfish),
            "Rabbit" => Some(EntityKind::Rabbit),
            "Ravager" => Some(EntityKind::Ravager),
            "Salmon" => Some(EntityKind::Salmon),
            "Sheep" => Some(EntityKind::Sheep),
            "Shulker" => Some(EntityKind::Shulker),
            "Shulker Bullet" => Some(EntityKind::ShulkerBullet),
            "Silverfish" => Some(EntityKind::Silverfish),
            "Skeleton" => Some(EntityKind::Skeleton),
            "Skeleton Horse" => Some(EntityKind::SkeletonHorse),
            "Slime" => Some(EntityKind::Slime),
            "Small Fireball" => Some(EntityKind::SmallFireball),
            "Snow Golem" => Some(EntityKind::SnowGolem),
            "Snowball" => Some(EntityKind::Snowball),
            "Spectral Arrow" => Some(EntityKind::SpectralArrow),
            "Spider" => Some(EntityKind::Spider),
            "Squid" => Some(EntityKind::Squid),
            "Stray" => Some(EntityKind::Stray),
            "Strider" => Some(EntityKind::Strider),
            "Thrown Egg" => Some(EntityKind::Egg),
            "Thrown Ender Pearl" => Some(EntityKind::EnderPearl),
            "Thrown Bottle o' Enchanting" => Some(EntityKind::ExperienceBottle),
            "Potion" => Some(EntityKind::Potion),
            "Trident" => Some(EntityKind::Trident),
            "Trader Llama" => Some(EntityKind::TraderLlama),
            "Tropical Fish" => Some(EntityKind::TropicalFish),
            "Turtle" => Some(EntityKind::Turtle),
            "Vex" => Some(EntityKind::Vex),
            "Villager" => Some(EntityKind::Villager),
            "Vindicator" => Some(EntityKind::Vindicator),
            "Wandering Trader" => Some(EntityKind::WanderingTrader),
            "Witch" => Some(EntityKind::Witch),
            "Wither" => Some(EntityKind::Wither),
            "Wither Skeleton" => Some(EntityKind::WitherSkeleton),
            "Wither Skull" => Some(EntityKind::WitherSkull),
            "Wolf" => Some(EntityKind::Wolf),
            "Zoglin" => Some(EntityKind::Zoglin),
            "Zombie" => Some(EntityKind::Zombie),
            "Zombie Horse" => Some(EntityKind::ZombieHorse),
            "Zombie Villager" => Some(EntityKind::ZombieVillager),
            "Zombified Piglin" => Some(EntityKind::ZombifiedPiglin),
            "Player" => Some(EntityKind::Player),
            "Fishing Bobber" => Some(EntityKind::FishingBobber),
            _ => None,
        }
    }
}
#[allow(warnings)]
#[allow(clippy::all)]
impl EntityKind {
    /// Returns the `bounding_box` property of this `EntityKind`.
    pub fn bounding_box(&self) -> vek::Aabb<f64> {
        match self {
            EntityKind::AreaEffectCloud => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(6 as f64, 0.5 as f64, 6 as f64),
            },
            EntityKind::ArmorStand => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 1.975 as f64, 0.5 as f64),
            },
            EntityKind::Arrow => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.5 as f64, 0.5 as f64),
            },
            EntityKind::Bat => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.9 as f64, 0.5 as f64),
            },
            EntityKind::Bee => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.7 as f64, 0.6 as f64, 0.7 as f64),
            },
            EntityKind::Blaze => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.8 as f64, 0.6 as f64),
            },
            EntityKind::Boat => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.375 as f64, 0.5625 as f64, 1.375 as f64),
            },
            EntityKind::Cat => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 0.7 as f64, 0.6 as f64),
            },
            EntityKind::CaveSpider => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.7 as f64, 0.5 as f64, 0.7 as f64),
            },
            EntityKind::Chicken => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.4 as f64, 0.7 as f64, 0.4 as f64),
            },
            EntityKind::Cod => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.3 as f64, 0.5 as f64),
            },
            EntityKind::Cow => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 1.4 as f64, 0.9 as f64),
            },
            EntityKind::Creeper => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.7 as f64, 0.6 as f64),
            },
            EntityKind::Dolphin => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 0.6 as f64, 0.9 as f64),
            },
            EntityKind::Donkey => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.39648 as f64, 1.5 as f64, 1.39648 as f64),
            },
            EntityKind::DragonFireball => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1 as f64, 1 as f64, 1 as f64),
            },
            EntityKind::Drowned => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::ElderGuardian => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.9975 as f64, 1.9975 as f64, 1.9975 as f64),
            },
            EntityKind::EndCrystal => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(2 as f64, 2 as f64, 2 as f64),
            },
            EntityKind::EnderDragon => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(16 as f64, 8 as f64, 16 as f64),
            },
            EntityKind::Enderman => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 2.9 as f64, 0.6 as f64),
            },
            EntityKind::Endermite => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.4 as f64, 0.3 as f64, 0.4 as f64),
            },
            EntityKind::Evoker => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::EvokerFangs => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.8 as f64, 0.5 as f64),
            },
            EntityKind::ExperienceOrb => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.5 as f64, 0.5 as f64),
            },
            EntityKind::EyeOfEnder => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::FallingBlock => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.98 as f64, 0.98 as f64),
            },
            EntityKind::FireworkRocket => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::Fox => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 0.7 as f64, 0.6 as f64),
            },
            EntityKind::Ghast => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(4 as f64, 4 as f64, 4 as f64),
            },
            EntityKind::Giant => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(3.6 as f64, 12 as f64, 3.6 as f64),
            },
            EntityKind::Guardian => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.85 as f64, 0.85 as f64, 0.85 as f64),
            },
            EntityKind::Hoglin => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.39648 as f64, 1.4 as f64, 1.39648 as f64),
            },
            EntityKind::Horse => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.39648 as f64, 1.6 as f64, 1.39648 as f64),
            },
            EntityKind::Husk => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::Illusioner => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::IronGolem => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.4 as f64, 2.7 as f64, 1.4 as f64),
            },
            EntityKind::Item => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::ItemFrame => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.5 as f64, 0.5 as f64),
            },
            EntityKind::Fireball => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1 as f64, 1 as f64, 1 as f64),
            },
            EntityKind::LeashKnot => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.5 as f64, 0.5 as f64),
            },
            EntityKind::LightningBolt => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0 as f64, 0 as f64, 0 as f64),
            },
            EntityKind::Llama => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 1.87 as f64, 0.9 as f64),
            },
            EntityKind::LlamaSpit => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::MagmaCube => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(2.04 as f64, 2.04 as f64, 2.04 as f64),
            },
            EntityKind::Minecart => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.7 as f64, 0.98 as f64),
            },
            EntityKind::ChestMinecart => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.7 as f64, 0.98 as f64),
            },
            EntityKind::CommandBlockMinecart => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.7 as f64, 0.98 as f64),
            },
            EntityKind::FurnaceMinecart => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.7 as f64, 0.98 as f64),
            },
            EntityKind::HopperMinecart => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.7 as f64, 0.98 as f64),
            },
            EntityKind::SpawnerMinecart => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.7 as f64, 0.98 as f64),
            },
            EntityKind::TntMinecart => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.7 as f64, 0.98 as f64),
            },
            EntityKind::Mule => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.39648 as f64, 1.6 as f64, 1.39648 as f64),
            },
            EntityKind::Mooshroom => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 1.4 as f64, 0.9 as f64),
            },
            EntityKind::Ocelot => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 0.7 as f64, 0.6 as f64),
            },
            EntityKind::Painting => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.5 as f64, 0.5 as f64),
            },
            EntityKind::Panda => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.3 as f64, 1.25 as f64, 1.3 as f64),
            },
            EntityKind::Parrot => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.9 as f64, 0.5 as f64),
            },
            EntityKind::Phantom => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 0.5 as f64, 0.9 as f64),
            },
            EntityKind::Pig => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 0.9 as f64, 0.9 as f64),
            },
            EntityKind::Piglin => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::PiglinBrute => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::Pillager => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::PolarBear => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.4 as f64, 1.4 as f64, 1.4 as f64),
            },
            EntityKind::Tnt => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.98 as f64, 0.98 as f64, 0.98 as f64),
            },
            EntityKind::Pufferfish => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.7 as f64, 0.7 as f64, 0.7 as f64),
            },
            EntityKind::Rabbit => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.4 as f64, 0.5 as f64, 0.4 as f64),
            },
            EntityKind::Ravager => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.95 as f64, 2.2 as f64, 1.95 as f64),
            },
            EntityKind::Salmon => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.7 as f64, 0.4 as f64, 0.7 as f64),
            },
            EntityKind::Sheep => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 1.3 as f64, 0.9 as f64),
            },
            EntityKind::Shulker => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1 as f64, 1 as f64, 1 as f64),
            },
            EntityKind::ShulkerBullet => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.3125 as f64, 0.3125 as f64, 0.3125 as f64),
            },
            EntityKind::Silverfish => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.4 as f64, 0.3 as f64, 0.4 as f64),
            },
            EntityKind::Skeleton => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.99 as f64, 0.6 as f64),
            },
            EntityKind::SkeletonHorse => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.39648 as f64, 1.6 as f64, 1.39648 as f64),
            },
            EntityKind::Slime => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(2.04 as f64, 2.04 as f64, 2.04 as f64),
            },
            EntityKind::SmallFireball => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.3125 as f64, 0.3125 as f64, 0.3125 as f64),
            },
            EntityKind::SnowGolem => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.7 as f64, 1.9 as f64, 0.7 as f64),
            },
            EntityKind::Snowball => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::SpectralArrow => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.5 as f64, 0.5 as f64),
            },
            EntityKind::Spider => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.4 as f64, 0.9 as f64, 1.4 as f64),
            },
            EntityKind::Squid => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.8 as f64, 0.8 as f64, 0.8 as f64),
            },
            EntityKind::Stray => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.99 as f64, 0.6 as f64),
            },
            EntityKind::Strider => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 1.7 as f64, 0.9 as f64),
            },
            EntityKind::Egg => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::EnderPearl => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::ExperienceBottle => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::Potion => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
            EntityKind::Trident => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.5 as f64, 0.5 as f64),
            },
            EntityKind::TraderLlama => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 1.87 as f64, 0.9 as f64),
            },
            EntityKind::TropicalFish => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.5 as f64, 0.4 as f64, 0.5 as f64),
            },
            EntityKind::Turtle => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.2 as f64, 0.4 as f64, 1.2 as f64),
            },
            EntityKind::Vex => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.4 as f64, 0.8 as f64, 0.4 as f64),
            },
            EntityKind::Villager => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::Vindicator => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::WanderingTrader => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::Witch => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::Wither => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.9 as f64, 3.5 as f64, 0.9 as f64),
            },
            EntityKind::WitherSkeleton => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.7 as f64, 2.4 as f64, 0.7 as f64),
            },
            EntityKind::WitherSkull => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.3125 as f64, 0.3125 as f64, 0.3125 as f64),
            },
            EntityKind::Wolf => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 0.85 as f64, 0.6 as f64),
            },
            EntityKind::Zoglin => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.39648 as f64, 1.4 as f64, 1.39648 as f64),
            },
            EntityKind::Zombie => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::ZombieHorse => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(1.39648 as f64, 1.6 as f64, 1.39648 as f64),
            },
            EntityKind::ZombieVillager => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::ZombifiedPiglin => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.95 as f64, 0.6 as f64),
            },
            EntityKind::Player => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.6 as f64, 1.8 as f64, 0.6 as f64),
            },
            EntityKind::FishingBobber => vek::Aabb {
                min: vek::Vec3::zero(),
                max: vek::Vec3::new(0.25 as f64, 0.25 as f64, 0.25 as f64),
            },
        }
    }
}
