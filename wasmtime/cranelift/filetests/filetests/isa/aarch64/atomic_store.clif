test compile precise-output
target aarch64

function %atomic_store_i64(i64, i64) {
block0(v0: i64, v1: i64):
  atomic_store.i64 v0, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlr x0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i32(i32, i64) {
block0(v0: i32, v1: i64):
  atomic_store.i32 v0, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlr w0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i16(i16, i64) {
block0(v0: i16, v1: i64):
  atomic_store.i16 v0, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlrh w0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i8(i8, i64) {
block0(v0: i8, v1: i64):
  atomic_store.i8 v0, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlrb w0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i64_i32(i64, i64) {
block0(v0: i64, v1: i64):
  v2 = ireduce.i32 v0
  atomic_store.i32 v2, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlr w0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i64_i16(i64, i64) {
block0(v0: i64, v1: i64):
  v2 = ireduce.i16 v0
  atomic_store.i16 v2, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlrh w0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i64_i8(i64, i64) {
block0(v0: i64, v1: i64):
  v2 = ireduce.i8 v0
  atomic_store.i8 v2, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlrb w0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i32_i16(i32, i64) {
block0(v0: i32, v1: i64):
  v2 = ireduce.i16 v0
  atomic_store.i16 v2, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlrh w0, [x1]
;   Inst 1:   ret
; }}

function %atomic_store_i32_i8(i32, i64) {
block0(v0: i32, v1: i64):
  v2 = ireduce.i8 v0
  atomic_store.i8 v2, v1
  return
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (instruction range: 0 .. 2)
;   Inst 0:   stlrb w0, [x1]
;   Inst 1:   ret
; }}

