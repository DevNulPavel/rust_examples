[package]
name = "wasmer-cli"
version = "2.2.1"
description = "Wasmer CLI"
categories = ["wasm", "command-line-interface"]
keywords = ["wasm", "webassembly", "cli"]
authors = ["Wasmer Engineering Team <engineering@wasmer.io>"]
repository = "https://github.com/wasmerio/wasmer"
license = "MIT"
readme = "README.md"
edition = "2018"
default-run = "wasmer"
build = "build.rs"

[[bin]]
name = "wasmer"
path = "src/bin/wasmer.rs"
doc = false

[[bin]]
name = "wasmer-headless"
path = "src/bin/wasmer_headless.rs"
doc = false
required-features = ["headless"]

[dependencies]
wasmer = { version = "=2.2.1", path = "../api", default-features = false }
wasmer-compiler = { version = "=2.2.1", path = "../compiler" }
wasmer-compiler-cranelift = { version = "=2.2.1", path = "../compiler-cranelift", optional = true }
wasmer-compiler-singlepass = { version = "=2.2.1", path = "../compiler-singlepass", optional = true }
wasmer-compiler-llvm = { version = "=2.2.1", path = "../compiler-llvm", optional = true }
wasmer-emscripten = { version = "=2.2.1", path = "../emscripten", optional = true }
wasmer-engine = { version = "=2.2.1", path = "../engine" }
wasmer-engine-universal = { version = "=2.2.1", path = "../engine-universal", optional = true }
wasmer-engine-dylib = { version = "=2.2.1", path = "../engine-dylib", optional = true }
wasmer-engine-staticlib = { version = "=2.2.1", path = "../engine-staticlib", optional = true }
wasmer-vm = { version = "=2.2.1", path = "../vm" }
wasmer-wasi = { version = "=2.2.1", path = "../wasi", optional = true }
wasmer-wasi-experimental-io-devices = { version = "=2.2.1", path = "../wasi-experimental-io-devices", optional = true }
wasmer-wast = { version = "=2.2.1", path = "../../tests/lib/wast", optional = true }
wasmer-cache = { version = "=2.2.1", path = "../cache", optional = true }
wasmer-types = { version = "=2.2.1", path = "../types" }
wasmer-vfs  = { version = "=2.2.1", path = "../vfs", default-features = false, features = ["host-fs"] }
atty = "0.2"
colored = "2.0"
anyhow = "1.0"
structopt = { version = "0.3", features = ["suggestions"] }
# For the function names autosuggestion
distance = "0.4"
# For the inspect subcommand
bytesize = "1.0"
cfg-if = "1.0"
# For debug feature
fern = { version = "0.6", features = ["colored"], optional = true }
log = { version = "0.4", optional = true }
tempfile = "3"

[target.'cfg(target_os = "linux")'.dependencies]
unix_mode = "0.1.3"

[features]
# Don't add the compiler features in default, please add them on the Makefile
# since we might want to autoconfigure them depending on the availability on the host.
default = [
    "wat",
    "wast",
    "universal",
    "dylib",
    "staticlib",
    "cache",
    "wasi",
    "emscripten",
    "experimental-io-devices",
]
engine = []
universal = [
    "wasmer-engine-universal",
    "engine",
]
dylib = [
    "wasmer-engine-dylib",
    "engine",
]
staticlib = [
    "wasmer-engine-staticlib",
    "engine",
]
cache = ["wasmer-cache"]
cache-blake3-pure = ["wasmer-cache/blake3-pure"]
wast = ["wasmer-wast"]
wasi = ["wasmer-wasi"]
emscripten = ["wasmer-emscripten"]
wat = ["wasmer/wat"]
compiler = [
    "wasmer-compiler/translator",
    "wasmer-engine-universal/compiler",
    "wasmer-engine-dylib/compiler",
    "wasmer-engine-staticlib/compiler",
]
experimental-io-devices = [
    "wasmer-wasi-experimental-io-devices",
    "wasi"
]
singlepass = [
    "wasmer-compiler-singlepass",
    "compiler",
]
cranelift = [
    "wasmer-compiler-cranelift",
    "compiler",
]
llvm = [
    "wasmer-compiler-llvm",
    "compiler",
]
debug = ["fern", "log", "wasmer-wasi/logging"]
disable-all-logging = ["wasmer-wasi/disable-all-logging"]
headless = []
headless-minimal = ["headless", "disable-all-logging", "wasi", "dylib", "universal"]

# Deprecated features.
jit = ["universal"]
native = ["dylib"] 
