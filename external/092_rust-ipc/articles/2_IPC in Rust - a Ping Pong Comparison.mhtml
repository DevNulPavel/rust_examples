From: <Saved by Blink>
Snapshot-Content-Location: https://3tilley.github.io/posts/simple-ipc-ping-pong/
Subject: IPC in Rust - a Ping Pong Comparison
Date: Mon, 4 Nov 2024 10:00:05 +0300
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR----"


------MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR----
Content-Type: text/html
Content-ID: <frame-B5E23E8C976B4CB60458EA5DCE0E57A7@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://3tilley.github.io/posts/simple-ipc-ping-pong/

<!DOCTYPE html><html lang=3D"en" dir=3D"auto"><head><meta http-equiv=3D"Con=
tent-Type" content=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" =
type=3D"text/css" href=3D"cid:css-2d4db325-c8a1-46f2-bb77-732a4c389569@mhtm=
l.blink" />
   =20
     <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1,=
 shrink-to-fit=3Dno">
<meta name=3D"robots" content=3D"index, follow">
<title>IPC in Rust - a Ping Pong Comparison</title>


<meta name=3D"keywords" content=3D"rust, python">



<meta name=3D"description" content=3D"">





<link rel=3D"canonical" href=3D"https://3tilley.github.io/posts/simple-ipc-=
ping-pong/">


<link rel=3D"stylesheet" href=3D"https://3tilley.github.io/css/includes/scr=
oll-bar.css">
<link rel=3D"stylesheet" href=3D"https://3tilley.github.io/css/styles.css">
<link rel=3D"stylesheet" href=3D"https://3tilley.github.io/css/override.css=
">






<link rel=3D"alternate" type=3D"application/atom+xml" title=3D"RSS" href=3D=
"https://3tilley.github.io/atom.xml">












   =20
</head>
<body class=3D"" id=3D"top">
   =20
   =20


<header class=3D"header">
    <nav class=3D"nav">
        <div class=3D"logo">
            <a href=3D"https://3tilley.github.io/" accesskey=3D"h" title=3D=
"TheTraitModern (Alt + H)">
                TheTraitModern
            </a>
            <div class=3D"logo-switches">
                <button id=3D"theme-toggle" accesskey=3D"t" title=3D"(Alt +=
 T)">
                    <svg id=3D"moon" xmlns=3D"http://www.w3.org/2000/svg" w=
idth=3D"24" height=3D"18" viewBox=3D"0 0 24 24" fill=3D"none" stroke=3D"cur=
rentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=3D"r=
ound">
                        <path d=3D"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21=
 12.79z"></path>
                    </svg>
                    <svg id=3D"sun" xmlns=3D"http://www.w3.org/2000/svg" wi=
dth=3D"24" height=3D"18" viewBox=3D"0 0 24 24" fill=3D"none" stroke=3D"curr=
entColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=3D"ro=
und">
                        <circle cx=3D"12" cy=3D"12" r=3D"5"></circle>
                        <line x1=3D"12" y1=3D"1" x2=3D"12" y2=3D"3"></line>
                        <line x1=3D"12" y1=3D"21" x2=3D"12" y2=3D"23"></lin=
e>
                        <line x1=3D"4.22" y1=3D"4.22" x2=3D"5.64" y2=3D"5.6=
4"></line>
                        <line x1=3D"18.36" y1=3D"18.36" x2=3D"19.78" y2=3D"=
19.78"></line>
                        <line x1=3D"1" y1=3D"12" x2=3D"3" y2=3D"12"></line>
                        <line x1=3D"21" y1=3D"12" x2=3D"23" y2=3D"12"></lin=
e>
                        <line x1=3D"4.22" y1=3D"19.78" x2=3D"5.64" y2=3D"18=
.36"></line>
                        <line x1=3D"18.36" y1=3D"5.64" x2=3D"19.78" y2=3D"4=
.22"></line>
                    </svg>
                </button>
                <ul class=3D"lang-switch">
                    <li></li>
                </ul>
            </div>
        </div>
       =20
        <ul id=3D"menu">
           =20
           =20
           =20
            <li>
                <a href=3D"https://3tilley.github.io//archive" title=3D"Arc=
hive">
                    <span>Archive</span>
                   =20
                </a>
            </li>
           =20
           =20
           =20
            <li>
                <a href=3D"https://3tilley.github.io//tags" title=3D"Tags">
                    <span>Tags</span>
                   =20
                </a>
            </li>
           =20
           =20
           =20
            <li>
                <a href=3D"https://getzola.org/" title=3D"Zola">
                    <span>Zola</span>
                   =20
                    <svg fill=3D"none" shape-rendering=3D"geometricPrecisio=
n" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-linejoin=3D"roun=
d" stroke-width=3D"2.5" viewBox=3D"0 0 24 24" height=3D"12" width=3D"12">
                        <path d=3D"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2=
 2 0 012-2h6"></path>
                        <path d=3D"M15 3h6v6"></path>
                        <path d=3D"M10 14L21 3"></path>
                    </svg>
                   =20
                </a>
            </li>
           =20
        </ul>
       =20
    </nav>
</header>

   =20
    <main class=3D"main">
       =20
<article class=3D"post-single">
  <header class=3D"post-header">
      <div class=3D"breadcrumbs">
          <a href=3D"https://3tilley.github.io/">Home</a>&nbsp;=C2=BB&nbsp;
          <a href=3D"https://3tilley.github.io/posts/">Posts</a>&nbsp;=C2=
=BB&nbsp;
          <a href=3D"https://3tilley.github.io/posts/simple-ipc-ping-pong/"=
>IPC in Rust - a Ping Pong Comparison</a>
      </div>
      <h1 class=3D"post-title">IPC in Rust - a Ping Pong Comparison</h1>
     =20
     =20
      <div class=3D"post-meta">
     =20












<span title=3D"2024-06-12 00:00:00 +0000">2024-06-12</span>&nbsp;=C2=B7&nbs=
p;20 min&nbsp;=C2=B7&nbsp;

     =20
          &nbsp;|&nbsp;<a href=3D"https://github.com/3tilley/3tilley.github=
.io/tree/master/content/posts/2024-06-12-simple-IPC-Ping-Pong.md" rel=3D"no=
opener noreferrer" target=3D"_blank">Suggest Changes</a>

     =20
      </div>
     =20
  </header>

 =20
 =20

<div class=3D"toc">
    <details open=3D"">
        <summary accesskey=3D"c" title=3D"(Alt + C)">
            <span class=3D"details">Table of Contents</span>
        </summary>

        <div class=3D"inner">
            <ul>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#the-problem" aria-label=3D"The Problem">The Problem</a>
                   =20
                    <ul>
                   =20
                        <li>
                            <a href=3D"https://3tilley.github.io/posts/simp=
le-ipc-ping-pong/#a-note-on-timing" aria-label=3D"A Note on Timing">A Note =
on Timing</a>
                           =20
                        </li>
                   =20
                    </ul>
                   =20
                </li>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#benchmarking" aria-label=3D"Benchmarking">Benchmarking</a>
                   =20
                </li>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#approach-1-pipes" aria-label=3D"Approach 1 - Pipes">Approach 1 - =
Pipes</a>
                   =20
                </li>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#approach-2-tcp" aria-label=3D"Approach 2 - TCP">Approach 2 - TCP<=
/a>
                   =20
                </li>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#approach-3-udp" aria-label=3D"Approach 3 - UDP">Approach 3 - UDP<=
/a>
                   =20
                </li>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#approach-4-shared-memory" aria-label=3D"Approach 4 - Shared Memor=
y">Approach 4 - Shared Memory</a>
                   =20
                </li>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#results" aria-label=3D"Results">Results</a>
                   =20
                    <ul>
                   =20
                        <li>
                            <a href=3D"https://3tilley.github.io/posts/simp=
le-ipc-ping-pong/#system-calls" aria-label=3D"System calls">System calls</a=
>
                           =20
                        </li>
                   =20
                    </ul>
                   =20
                </li>
               =20
                <li>
                    <a href=3D"https://3tilley.github.io/posts/simple-ipc-p=
ing-pong/#conclusion" aria-label=3D"Conclusion">Conclusion</a>
                   =20
                </li>
               =20
            </ul>
        </div>
    </details>
</div>


 =20

 =20
  <div class=3D"post-content">
      <p>I wanted to explore different ways of communicating between differ=
ent processes executing on the same machine, and doing so as fast as possib=
le. We're focussing on high speed inter-process communication (IPC), but so=
me of these approaches can be extended across a network. We'll do this expl=
oration in Rust.</p>
<p>A reminder that since these are independent processes, most approaches y=
ou'd take within-process are unavailable to us. Rather than communicating b=
etween threads, or between asynchronous routines, these are techniques to s=
hared data between different programs. They might not even both be written =
in Rust.</p>
<p>The code will mostly be snippets, but the full source is available <a hr=
ef=3D"https://github.com/3tilley/rust-experiments/tree/master/ipc">here</a>=
, with benchmark results at the end.</p>
<h1 id=3D"the-problem">The Problem
</h1>
<p>We want to send a message ("ping") from one process to another, and when=
 it's received reply with an acknowledgement ("pong"). This cycle gives us =
an opportunity to time how long it takes to round trip between two processe=
s. Timing is complicated, and there is a note on it below but we'll run lot=
s of cycles, and calculate average time from there.</p>
<p>We'll set up all the experiments as similarly as possible, with a produc=
er process sending a ping, and a consumer processes replying with a pong. P=
erformance profiling can lead one down a deep rabbit hole, but hopefully th=
is experiment is simple enough that we'll be able to largely isolate the ef=
fect of the communication. Though I don't doubt keen-eyed readers will high=
light optimisations missed, or operations outside the communication that ar=
e not as computationally-free as I've assumed.</p>
<p>Note that we're focussing on low-latency here, not high-throughput. With=
in High-Performance Computing they are related, but are focussed on differe=
nt goals. As an example to illustrate the difference, imagine a piece of so=
ftware that performs linear algebra tasks by outsourcing those computations=
 to the GPU. For some problem sets (like training Neural Networks) the time=
 taken to complete the training will be significantly faster on the GPU - t=
he calculations performed per second (or throughput) will be much higher. H=
owever there is a cost to marshalling and shipping the data onto the GPU in=
 the first place, and it will never be quicker to multiply two small matric=
es together like that.</p>
<h2 id=3D"a-note-on-timing">A Note on Timing
</h2>
<p>We tend to assume that computers keep precise, and synchronised clocks. =
And compared to humans, they largely do. However when trying to measure ver=
y quick operations, there are limits to this. For starters, I'm working on =
a PC with a 4GHz processor. In order to measure something in single cycles,=
 that means I need a clock capable of 0.25ns time resolution - or the time =
taken for light to travel roughly 10cm. Electrical signals move significant=
ly slower than this, so for a clock outside the processor, even the time ta=
ken to sample the timer will dwarf the time taken to perform a few cycles o=
f calculation.</p>
<p>Consider the clock attached to the coin battery on your motherboard. Thi=
s allows the system to be disconnected from the mains, plugged back in and =
still know the current time. This is known as a Real Time Clock (RTC). Thes=
e mostly run at 32.768&nbsp;kHz (2^15 Hz), only giving them a theoretical r=
esolution of 30 =C2=B5s - or about a hundred thousand clock cycles. What's =
more they are often configured to produce time at a resolution much lower t=
han that - clearly that clock isn't going to cut it.</p>
<p>The traditional solution is to use a Time Stamp Counter or TSC. This is =
a processor register that keeps ticking up at the rate of the processor clo=
ck speed - so should offer sufficient resolution for our needs. Traditional=
ly the x86 instruction RDTSC is used to read its value. However given the n=
ature of modern CPUs with varying clockspeeds, hyperthreading, deep pipelin=
es, and the fear of cache/timing attacks, it's more complicated than this. =
On Windows the Microsoft suggestion is to use the <code>QueryPerformanceCou=
nter</code> function, and on Linux <code>clock_gettime(CLOCK_MONOTONIC)</co=
de> - but note these are both system calls (more on those later). Their res=
olution is also hardware dependent, if you have a newer device (within 10 y=
ears) this may be an <a href=3D"https://en.wikipedia.org/wiki/High_Precisio=
n_Event_Timer">HPET</a> , or it could be a modern incarnation of the TSC. E=
ither way these benchmarks are going to yield different results on differen=
t hardware and different operating systems, even if the code ran similarly.=
</p>
<p><strong>Post takeaway</strong> - timing short-duration events is difficu=
lt. If in doubt, run enough iterations of your event such that the total co=
mpleted time is in milliseconds, and then whatever timing source your bench=
marking suite relies on should lead to an accurate result.</p>
<p>To learn about the pain of synchronising multiple clocks like this on a =
network, read or listen this incredible in-depth piece from Jane Street: ht=
tps://signalsandthreads.com/clock-synchronization/</p>
<h1 id=3D"benchmarking">Benchmarking
</h1>
<p>This was an opportunity for me to try out <a href=3D"https://github.com/=
nvzqz/divan">Divan</a> for benchmarking. It's a <strong>comfy bench</strong=
>marking tool, with the goal of being more ergonomic than <a href=3D"https:=
//github.com/bheisler/criterion.rs">Criterion</a>.</p>
<p>I'll save offering judgment yet as I haven't used it a whole lot, but it=
 seems to do what I need it to do. For each approach we will:</p>
<ol>
<li>Create the consumer process, and wait for it to become available</li>
<li>Prepare data and open connections in both processes, and wait for them =
to complete</li>
<li>Start timing</li>
<li>Run the ping / pong cycle a number of times</li>
<li>Stop timer</li>
<li>Get an average time per operation</li>
</ol>
<p>Fortunately <code>divan</code> gives the tools for that, and allows us t=
o annotate the benches with how many operations were executed, and then pro=
duce averages based on that (with some caveats). An example benchmark is he=
re:</p>
<pre data-lang=3D"rust" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-rust "><code class=3D"language-rust" data-lang=3D"rust"><s=
pan>#[</span><span style=3D"color:#bf616a;">divan</span><span>::</span><spa=
n style=3D"color:#bf616a;">bench</span><span>] =20
</span><span style=3D"color:#b48ead;">fn </span><span style=3D"color:#8fa1b=
3;">stdin_stdout</span><span>(</span><span style=3D"color:#bf616a;">bencher=
</span><span>: Bencher) { =20
</span><span>    </span><span style=3D"color:#b48ead;">let</span><span> n =
=3D </span><span style=3D"color:#d08770;">1000</span><span>; =20
</span><span>    </span><span style=3D"color:#b48ead;">let mut</span><span>=
 pipe_runner =3D ipc::pipes::PipeRunner::new(</span><span style=3D"color:#d=
08770;">false</span><span>); =20
</span><span>    </span><span style=3D"color:#b48ead;">let mut</span><span>=
 return_buffer =3D pipe_runner.</span><span style=3D"color:#96b5b4;">prepar=
e</span><span>(); =20
</span><span>    bencher =20
</span><span>        .</span><span style=3D"color:#96b5b4;">counter</span><=
span>(divan::counter::ItemsCount::new(n)) =20
</span><span>        .</span><span style=3D"color:#96b5b4;">bench_local</sp=
an><span>(</span><span style=3D"color:#b48ead;">move </span><span>|| { =20
</span><span>            pipe_runner.</span><span style=3D"color:#96b5b4;">=
run_inner</span><span>(n, &amp;</span><span style=3D"color:#b48ead;">mut</s=
pan><span> return_buffer) =20
</span><span>        }); =20
</span><span>}
</span></code><button class=3D"copy-code">copy</button></pre>
<h1 id=3D"approach-1-pipes">Approach 1 - Pipes
</h1>
<p>This is the first thing that comes to mind to connect processes on the s=
ame machine. Like <code>cat | grep</code> we'll just connect <code>stdout</=
code> of the producer to <code>stdin</code> of the consumer, and vice-versa=
. This will work on Windows, Linux, and presumably MacOS.</p>
<p>The consumer process reads five bytes into an array from <code>stdin</co=
de>, checks if they're equal to <code>ping</code> followed by a newline, an=
d then responds appropriately. It'll also respond to <code>pong</code>.</p>
<pre data-lang=3D"rust" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-rust "><code class=3D"language-rust" data-lang=3D"rust"><s=
pan style=3D"color:#b48ead;">use </span><span>std::io::{stdin, stdout, Read=
, Write}; =20
</span><span> =20
</span><span style=3D"color:#b48ead;">fn </span><span style=3D"color:#8fa1b=
3;">main</span><span>() { =20
</span><span>    </span><span style=3D"color:#b48ead;">let mut</span><span>=
 arr =3D [</span><span style=3D"color:#d08770;">0</span><span style=3D"colo=
r:#b48ead;">u8</span><span>, </span><span style=3D"color:#d08770;">0</span>=
<span>, </span><span style=3D"color:#d08770;">0</span><span>, </span><span =
style=3D"color:#d08770;">0</span><span>, </span><span style=3D"color:#d0877=
0;">0</span><span>]; =20
</span><span>    </span><span style=3D"color:#b48ead;">loop </span><span>{ =
=20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 read_result =3D </span><span style=3D"color:#96b5b4;">stdin</span><span>()=
.</span><span style=3D"color:#96b5b4;">read_exact</span><span>(&amp;</span>=
<span style=3D"color:#b48ead;">mut</span><span> arr); =20
</span><span>        </span><span style=3D"color:#b48ead;">if</span><span> =
read_result.</span><span style=3D"color:#96b5b4;">is_ok</span><span>() { =
=20
</span><span>            </span><span style=3D"color:#b48ead;">let</span><s=
pan> output =3D </span><span style=3D"color:#b48ead;">match </span><span>&a=
mp;arr { =20
</span><span>                </span><span style=3D"color:#b48ead;">b</span>=
<span>"</span><span style=3D"color:#a3be8c;">ping</span><span style=3D"colo=
r:#96b5b4;">\n</span><span>" =3D&gt; </span><span style=3D"color:#b48ead;">=
b</span><span>"</span><span style=3D"color:#a3be8c;">pong</span><span style=
=3D"color:#96b5b4;">\n</span><span>", =20
</span><span>                </span><span style=3D"color:#b48ead;">b</span>=
<span>"</span><span style=3D"color:#a3be8c;">pong</span><span style=3D"colo=
r:#96b5b4;">\n</span><span>" =3D&gt; </span><span style=3D"color:#b48ead;">=
b</span><span>"</span><span style=3D"color:#a3be8c;">ping</span><span style=
=3D"color:#96b5b4;">\n</span><span>", =20
</span><span>                _ =3D&gt; </span><span style=3D"color:#b48ead;=
">b</span><span>"</span><span style=3D"color:#a3be8c;">Error</span><span>",=
 =20
</span><span>            }; =20
</span><span>            </span><span style=3D"color:#96b5b4;">stdout</span=
><span>().</span><span style=3D"color:#96b5b4;">write</span><span>(output).=
</span><span style=3D"color:#96b5b4;">unwrap</span><span>(); =20
</span><span>        } =20
</span><span>    } =20
</span><span>}
</span></code><button class=3D"copy-code">copy</button></pre>
<p>The producer process is a little more complex as it has to create and ha=
ndle consumer first, but pushes out a <code>ping</code> , waits for a respo=
nse, and then panics if it's not <code>pong</code>.</p>
<pre data-lang=3D"rust" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-rust "><code class=3D"language-rust" data-lang=3D"rust"><s=
pan style=3D"color:#b48ead;">pub fn </span><span style=3D"color:#8fa1b3;">r=
un_inner</span><span>(&amp;</span><span style=3D"color:#b48ead;">mut </span=
><span style=3D"color:#bf616a;">self</span><span>, </span><span style=3D"co=
lor:#bf616a;">n</span><span>: </span><span style=3D"color:#b48ead;">usize</=
span><span>, </span><span style=3D"color:#b48ead;">mut </span><span style=
=3D"color:#bf616a;">return_value</span><span>: &amp;</span><span style=3D"c=
olor:#b48ead;">mut</span><span> [</span><span style=3D"color:#b48ead;">u8</=
span><span>; 5]) { =20
</span><span>    </span><span style=3D"color:#b48ead;">if let </span><span>=
Some(</span><span style=3D"color:#b48ead;">ref mut</span><span> pipes_input=
) =3D </span><span style=3D"color:#bf616a;">self</span><span>.pipe_proc.std=
in { =20
</span><span>        </span><span style=3D"color:#b48ead;">if let </span><s=
pan>Some(</span><span style=3D"color:#b48ead;">ref mut</span><span> pipes_o=
utput) =3D </span><span style=3D"color:#bf616a;">self</span><span>.pipe_pro=
c.stdout { =20
</span><span>            </span><span style=3D"color:#b48ead;">for </span><=
span>_ in </span><span style=3D"color:#d08770;">0</span><span>..n { =20
</span><span>                pipes_input.</span><span style=3D"color:#96b5b=
4;">write</span><span>(</span><span style=3D"color:#b48ead;">b</span><span>=
"</span><span style=3D"color:#a3be8c;">ping</span><span style=3D"color:#96b=
5b4;">\n</span><span>").</span><span style=3D"color:#96b5b4;">unwrap</span>=
<span>(); =20
</span><span>                pipes_output.</span><span style=3D"color:#96b5=
b4;">read_exact</span><span>(return_value).</span><span style=3D"color:#96b=
5b4;">unwrap</span><span>(); =20
</span><span>                </span><span style=3D"color:#b48ead;">if</span=
><span> return_value !=3D </span><span style=3D"color:#b48ead;">b</span><sp=
an>"</span><span style=3D"color:#a3be8c;">pong</span><span style=3D"color:#=
96b5b4;">\n</span><span>" { =20
</span><span>                    panic!("</span><span style=3D"color:#a3be8=
c;">Unexpected response</span><span>") =20
</span><span>                } =20
</span><span>            } =20
</span><span>        } =20
</span><span>    } =20
</span><span>}
</span></code><button class=3D"copy-code">copy</button></pre>
<p>Aside from some fiddly <code>ref mut</code> treatment for the pipes, thi=
s was pretty easy to write. With more complex data structures it might be a=
nnoying as some decision would have to be made on a delimiter between messa=
ges that wasn't just newlines, but it feels fairly extendable as well.</p>
<h1 id=3D"approach-2-tcp">Approach 2 - TCP
</h1>
<p>A natural approach would be to try a client and server connected via HTT=
P. This felt dangerously like benchmarking HTTP servers though, so instead =
I just went straight to TCP.</p>
<pre data-lang=3D"rust" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-rust "><code class=3D"language-rust" data-lang=3D"rust"><s=
pan>...
</span><span style=3D"color:#65737e;">// Producer
</span><span style=3D"color:#b48ead;">impl </span><span>TcpRunner { =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">new</span><span>(</span><span style=3D"color:#bf61=
6a;">start_child</span><span>: </span><span style=3D"color:#b48ead;">bool</=
span><span>, </span><span style=3D"color:#bf616a;">tcp_nodelay</span><span>=
: </span><span style=3D"color:#b48ead;">bool</span><span>) -&gt; TcpRunner =
{ =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 listener =3D TcpListener::bind("</span><span style=3D"color:#a3be8c;">127.=
0.0.1:0</span><span>").</span><span style=3D"color:#96b5b4;">unwrap</span><=
span>(); =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 port =3D listener.</span><span style=3D"color:#96b5b4;">local_addr</span><=
span>().</span><span style=3D"color:#96b5b4;">unwrap</span><span>().</span>=
<span style=3D"color:#96b5b4;">port</span><span>(); =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 exe =3D </span><span style=3D"color:#b48ead;">crate</span><span>::executab=
le_path("</span><span style=3D"color:#a3be8c;">tcp_consumer</span><span>");=
 =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 child_proc =3D </span><span style=3D"color:#b48ead;">if</span><span> start=
_child { =20
</span><span>            Some(Command::new(exe).</span><span style=3D"color=
:#96b5b4;">args</span><span>(&amp;[port.</span><span style=3D"color:#96b5b4=
;">to_string</span><span>(), tcp_nodelay.</span><span style=3D"color:#96b5b=
4;">to_string</span><span>()]).</span><span style=3D"color:#96b5b4;">spawn<=
/span><span>().</span><span style=3D"color:#96b5b4;">unwrap</span><span>())=
 =20
</span><span>        } </span><span style=3D"color:#b48ead;">else </span><s=
pan>{ =20
</span><span>            None =20
</span><span>        }; =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 stream =3D TcpStreamWrapper::from_listener(listener, tcp_nodelay); =20
</span><span>        </span><span style=3D"color:#b48ead;">Self </span><spa=
n>{ child_proc, wrapper: stream, tcp_nodelay } =20
</span><span>    } =20
</span><span> =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">run</span><span>(&amp;</span><span style=3D"color:=
#b48ead;">mut </span><span style=3D"color:#bf616a;">self</span><span>, </sp=
an><span style=3D"color:#bf616a;">n</span><span>: </span><span style=3D"col=
or:#b48ead;">usize</span><span>, </span><span style=3D"color:#bf616a;">prin=
t</span><span>: </span><span style=3D"color:#b48ead;">bool</span><span>) { =
=20
</span><span>        </span><span style=3D"color:#65737e;">// TODO: Decide =
whether this can be done without copying from the socket =20
</span><span>        </span><span style=3D"color:#b48ead;">let mut</span><s=
pan> buf =3D [</span><span style=3D"color:#d08770;">0</span><span style=3D"=
color:#b48ead;">u8</span><span>; </span><span style=3D"color:#d08770;">4</s=
pan><span>]; =20
</span><span>        </span><span style=3D"color:#b48ead;">for </span><span=
>_ in </span><span style=3D"color:#d08770;">0</span><span>..n { =20
</span><span>            </span><span style=3D"color:#bf616a;">self</span><=
span>.wrapper.stream.</span><span style=3D"color:#96b5b4;">write</span><spa=
n>(</span><span style=3D"color:#b48ead;">b</span><span>"</span><span style=
=3D"color:#a3be8c;">ping</span><span>").</span><span style=3D"color:#96b5b4=
;">unwrap</span><span>(); =20
</span><span>            </span><span style=3D"color:#bf616a;">self</span><=
span>.wrapper.stream.</span><span style=3D"color:#96b5b4;">read_exact</span=
><span>(&amp;</span><span style=3D"color:#b48ead;">mut</span><span> buf).</=
span><span style=3D"color:#96b5b4;">unwrap</span><span>(); =20
</span><span>            </span><span style=3D"color:#b48ead;">if </span><s=
pan>!buf.</span><span style=3D"color:#96b5b4;">eq</span><span>(</span><span=
 style=3D"color:#b48ead;">b</span><span>"</span><span style=3D"color:#a3be8=
c;">pong</span><span>") { =20
</span><span>                panic!("</span><span style=3D"color:#a3be8c;">=
Sent ping didn't get pong</span><span>") =20
</span><span>            } =20
</span><span>        } =20
</span><span>    } =20
</span><span>}
</span><span>
</span><span>...
</span><span>
</span><span style=3D"color:#65737e;">// pipes_consumer.rs
</span><span style=3D"color:#65737e;">// Consumer
</span><span style=3D"color:#b48ead;">fn </span><span style=3D"color:#8fa1b=
3;">main</span><span>() { =20
</span><span>    </span><span style=3D"color:#b48ead;">let</span><span> arg=
s: Vec&lt;String&gt; =3D std::env::args().</span><span style=3D"color:#96b5=
b4;">collect</span><span>(); =20
</span><span>    </span><span style=3D"color:#b48ead;">let</span><span> por=
t =3D </span><span style=3D"color:#b48ead;">u16</span><span>::from_str(&amp=
;args[</span><span style=3D"color:#d08770;">1</span><span>]).</span><span s=
tyle=3D"color:#96b5b4;">unwrap</span><span>(); =20
</span><span>    </span><span style=3D"color:#b48ead;">let</span><span> nod=
elay =3D </span><span style=3D"color:#b48ead;">bool</span><span>::from_str(=
&amp;args[</span><span style=3D"color:#d08770;">2</span><span>]).</span><sp=
an style=3D"color:#96b5b4;">unwrap</span><span>(); =20
</span><span>    </span><span style=3D"color:#b48ead;">let mut</span><span>=
 wrapper =3D ipc::tcp::TcpStreamWrapper::from_port(port, nodelay); =20
</span><span>    </span><span style=3D"color:#b48ead;">let mut</span><span>=
 buf =3D [</span><span style=3D"color:#d08770;">0</span><span style=3D"colo=
r:#b48ead;">u8</span><span>; </span><span style=3D"color:#d08770;">4</span>=
<span>]; =20
</span><span>    </span><span style=3D"color:#b48ead;">while let </span><sp=
an>Ok(_) =3D wrapper.stream.</span><span style=3D"color:#96b5b4;">read</spa=
n><span>(&amp;</span><span style=3D"color:#b48ead;">mut</span><span> buf) {=
 =20
</span><span>        </span><span style=3D"color:#b48ead;">if</span><span> =
buf.</span><span style=3D"color:#96b5b4;">eq</span><span>(</span><span styl=
e=3D"color:#b48ead;">b</span><span>"</span><span style=3D"color:#a3be8c;">p=
ing</span><span>") { =20
</span><span>            wrapper.stream.</span><span style=3D"color:#96b5b4=
;">write</span><span>(</span><span style=3D"color:#b48ead;">b</span><span>"=
</span><span style=3D"color:#a3be8c;">pong</span><span>").</span><span styl=
e=3D"color:#96b5b4;">unwrap</span><span>(); =20
</span><span>        } </span><span style=3D"color:#b48ead;">else </span><s=
pan>{ =20
</span><span>            panic!("</span><span style=3D"color:#a3be8c;">Rece=
ived unknown value {:?}</span><span>", buf) =20
</span><span>        } =20
</span><span>    } =20
</span><span>}
</span></code><button class=3D"copy-code">copy</button></pre>
<p>All in all, this was fairly simple. Currently ping is written to the soc=
ket, copied off, and then checked. Pong is then written back. There is a co=
mment in the code highlighting this, but it's not clear to me whether the s=
ocket can be read without copying it to a local buffer. Given it's only 5 b=
ytes, and a system call would be required either way, this is likely neglig=
ible.</p>
<p>The only other item of interest is that we can set TCP_NODELAY, which di=
sables <a href=3D"https://stackoverflow.com/questions/3761276/when-should-i=
-use-tcp-nodelay-and-when-tcp-cork">Nagle's algorithm</a>. Generally TCP wa=
its briefly to build a packet large enough to be worth sending. Given that =
we are looking for fast transmission, it makes sense to disable this. Bench=
marks with and without this setting are given. Spoiler - it didn't seem to =
change anything.</p>
<p>Implementation wise, it was slightly more complex than the previous case=
. A port to connect to had to be passed to the consumer, a connection estab=
lished, but not too difficult. I felt comfortable writing this code, and I =
also liked that it could be split across a network if needed. For complex u=
secases I'd probably miss some HTTP niceties, but for firing packets back a=
nd forth this felt flexible and maintainable.</p>
<h1 id=3D"approach-3-udp">Approach 3 - UDP
</h1>
<p>Naturally, the next approach was to try UDP. UDP is traditionally used i=
n these contexts for a "fire and forget" mechanism. Unlike TCP the protocol=
 doesn't offer a way of recovering lost or out of order packets. This can b=
e an advantage, because it keeps the connection from getting too "chatty" b=
ut if consistency is important those layers need to be implemented manually=
 - either in or out of band. We'll sidestep this discussion because we're r=
unning both processes on the same machine and using the loopback adapter, b=
ut note that it's still possible to lose packets this way. If the socket bu=
ffer is filled with more data than can be read off of it in the reading loo=
p, it will be unapologetically dropped. Perhaps a demonstration for another=
 post.</p>
<p>I'll just show the producer as the consumer is fairly similar.</p>
<pre data-lang=3D"rust" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-rust "><code class=3D"language-rust" data-lang=3D"rust"><s=
pan style=3D"color:#b48ead;">pub struct </span><span>UdpRunner { =20
</span><span>    </span><span style=3D"color:#bf616a;">child_proc</span><sp=
an>: Option&lt;Child&gt;, =20
</span><span>    </span><span style=3D"color:#bf616a;">wrapper</span><span>=
: UdpStreamWrapper, =20
</span><span>    </span><span style=3D"color:#bf616a;">their_port</span><sp=
an>: </span><span style=3D"color:#b48ead;">u16</span><span>, =20
</span><span>} =20
</span><span> =20
</span><span style=3D"color:#b48ead;">impl </span><span>UdpRunner { =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">new</span><span>(</span><span style=3D"color:#bf61=
6a;">start_child</span><span>: </span><span style=3D"color:#b48ead;">bool</=
span><span>) -&gt; UdpRunner { =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 wrapper =3D UdpStreamWrapper::new(); =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 their_port =3D portpicker::pick_unused_port().</span><span style=3D"color:=
#96b5b4;">unwrap</span><span>(); =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 exe =3D </span><span style=3D"color:#b48ead;">crate</span><span>::executab=
le_path("</span><span style=3D"color:#a3be8c;">udp_consumer</span><span>");=
 =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 child_proc =3D </span><span style=3D"color:#b48ead;">if</span><span> start=
_child { =20
</span><span>            Some( =20
</span><span>                Command::new(exe) =20
</span><span>                    .</span><span style=3D"color:#96b5b4;">arg=
s</span><span>(&amp;[wrapper.our_port.</span><span style=3D"color:#96b5b4;"=
>to_string</span><span>(), their_port.</span><span style=3D"color:#96b5b4;"=
>to_string</span><span>()]) =20
</span><span>                    .</span><span style=3D"color:#96b5b4;">spa=
wn</span><span>() =20
</span><span>                    .</span><span style=3D"color:#96b5b4;">unw=
rap</span><span>(), =20
</span><span>            ) =20
</span><span>        } </span><span style=3D"color:#b48ead;">else </span><s=
pan>{ =20
</span><span>            None =20
</span><span>        }; =20
</span><span>        </span><span style=3D"color:#65737e;">// Awkward sleep=
 to make sure the child proc is ready =20
</span><span>        </span><span style=3D"color:#96b5b4;">sleep</span><spa=
n>(Duration::from_millis(</span><span style=3D"color:#d08770;">100</span><s=
pan>)); =20
</span><span>        wrapper =20
</span><span>            .socket =20
</span><span>            .</span><span style=3D"color:#96b5b4;">connect</sp=
an><span>(format!("</span><span style=3D"color:#a3be8c;">127.0.0.1:</span><=
span style=3D"color:#d08770;">{}</span><span>", their_port)) =20
</span><span>            .</span><span style=3D"color:#96b5b4;">expect</spa=
n><span>("</span><span style=3D"color:#a3be8c;">Child process can't connect=
</span><span>"); =20
</span><span>        </span><span style=3D"color:#b48ead;">Self </span><spa=
n>{ =20
</span><span>            child_proc, =20
</span><span>            wrapper, =20
</span><span>            their_port, =20
</span><span>        } =20
</span><span>    } =20
</span><span> =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">run</span><span>(&amp;</span><span style=3D"color:=
#b48ead;">mut </span><span style=3D"color:#bf616a;">self</span><span>, </sp=
an><span style=3D"color:#bf616a;">n</span><span>: </span><span style=3D"col=
or:#b48ead;">usize</span><span>, </span><span style=3D"color:#bf616a;">prin=
t</span><span>: </span><span style=3D"color:#b48ead;">bool</span><span>) { =
=20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 start =3D Instant::now(); =20
</span><span>        </span><span style=3D"color:#b48ead;">let mut</span><s=
pan> buf =3D [</span><span style=3D"color:#d08770;">0</span><span style=3D"=
color:#b48ead;">u8</span><span>; </span><span style=3D"color:#d08770;">4</s=
pan><span>]; =20
</span><span>        </span><span style=3D"color:#b48ead;">for </span><span=
>_ in </span><span style=3D"color:#d08770;">0</span><span>..n { =20
</span><span>            </span><span style=3D"color:#bf616a;">self</span><=
span>.wrapper.socket.</span><span style=3D"color:#96b5b4;">send</span><span=
>(</span><span style=3D"color:#b48ead;">b</span><span>"</span><span style=
=3D"color:#a3be8c;">ping</span><span>").</span><span style=3D"color:#96b5b4=
;">unwrap</span><span>(); =20
</span><span>            </span><span style=3D"color:#bf616a;">self</span><=
span>.wrapper.socket.</span><span style=3D"color:#96b5b4;">recv</span><span=
>(&amp;</span><span style=3D"color:#b48ead;">mut</span><span> buf).</span><=
span style=3D"color:#96b5b4;">unwrap</span><span>(); =20
</span><span>            </span><span style=3D"color:#b48ead;">if </span><s=
pan>!buf.</span><span style=3D"color:#96b5b4;">eq</span><span>(</span><span=
 style=3D"color:#b48ead;">b</span><span>"</span><span style=3D"color:#a3be8=
c;">pong</span><span>") { =20
</span><span>                panic!("</span><span style=3D"color:#a3be8c;">=
Sent ping didn't get pong</span><span>") =20
</span><span>            } =20
</span><span>        } =20
</span><span>    } =20
</span><span>}
</span></code><button class=3D"copy-code">copy</button></pre>
<p>Overall this worked ok, but it was significantly more fiddly for a few r=
easons:</p>
<ol>
<li>As UDP is a broadcast protocol, it doesn't care whether anyone is liste=
ning. This means we have to spin up the consumer, connect to the producer, =
and confirm that they are connected. This could be done out of band, but I'=
ve just hacked it by sleeping for a period that seems long enough for the c=
onsumer to wake up and be prepared to receive instructions</li>
<li>The API was similar to the TCP API, but meant different things. Specifi=
cally the <code>connect</code> method doesn't guarantee any connection has =
been made, just that the program had bound itself to a remote address that =
may or may not subsequently fail, or just pump data into the ether. It take=
s an array of address like the TCP connect method, but it has no meaningful=
 way of deciding whether an address is useful or not (as it doesn't get a h=
andshake) so just takes the first one and binds to it. All of this is in th=
e <a href=3D"https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method=
.connect">documentation</a> but it's not ergonomic. Maybe <code>bind</code>=
 would be a better name, although that does have a specific meaning that ma=
y not be appropriate</li>
</ol>
<p>These UDP downsides are well known, and it's used where they don't matte=
r as much, or the asynchronous nature is useful. It's also possible to atta=
ch multiple listeners, which isn't possible with TCP. One can see where thi=
s might be useful, and why UDP is ubiquitous in usecases like online gaming=
.</p>
<h1 id=3D"approach-4-shared-memory">Approach 4 - Shared Memory
</h1>
<p>Shared memory is a known rapid way of sharing data between processes. On=
e process allocates a block of memory, and passes that handle to another pr=
ocess. Each process is then free to read from or write to that block of mem=
ory independently. If your first instinct is to fear synchronisation and ra=
ce conditions, you'd be absolutely correct. What's worse is that out of the=
 box, Rust doesn't help us here, despite usually being very helpful with th=
at kind of thing. We're on our own, and it's going to be <code>unsafe</code=
>.</p>
<p>First of all we'll write the code that will execute in both the producer=
 and consumer to create (or take) a handle to some shared memory, and then =
lay that out as the producer lock, the consumer lock, and a four byte buffe=
r for us to exchange data.</p>
<pre data-lang=3D"rust" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-rust "><code class=3D"language-rust" data-lang=3D"rust"><s=
pan style=3D"color:#65737e;">// Shared memory layout
</span><span style=3D"color:#65737e;">//|    0    |    1    |    2    |    =
3    |    4    |    5    |    6    |    7    |
</span><span style=3D"color:#65737e;">//|   producer lock   |   consumer lo=
ck   |      data buffer (ping or pong)       |
</span><span style=3D"color:#b48ead;">pub struct </span><span>ShmemWrapper =
{ =20
</span><span>    </span><span style=3D"color:#b48ead;">pub </span><span sty=
le=3D"color:#bf616a;">shmem</span><span>: Shmem, =20
</span><span>    </span><span style=3D"color:#b48ead;">pub </span><span sty=
le=3D"color:#bf616a;">owner</span><span>: </span><span style=3D"color:#b48e=
ad;">bool</span><span>, =20
</span><span>    </span><span style=3D"color:#b48ead;">pub </span><span sty=
le=3D"color:#bf616a;">our_event</span><span>: Box&lt;dyn EventImpl&gt;, =20
</span><span>    </span><span style=3D"color:#b48ead;">pub </span><span sty=
le=3D"color:#bf616a;">their_event</span><span>: Box&lt;dyn EventImpl&gt;, =
=20
</span><span>    </span><span style=3D"color:#b48ead;">pub </span><span sty=
le=3D"color:#bf616a;">data_start</span><span>: </span><span style=3D"color:=
#b48ead;">usize</span><span>, =20
</span><span>} =20
</span><span> =20
</span><span style=3D"color:#b48ead;">impl </span><span>ShmemWrapper { =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">new</span><span>(</span><span style=3D"color:#bf61=
6a;">handle</span><span>: Option&lt;String&gt;) -&gt; ShmemWrapper { =20
</span><span>        </span><span style=3D"color:#b48ead;">let</span><span>=
 owner =3D handle.</span><span style=3D"color:#96b5b4;">is_none</span><span=
>(); =20
</span><span>        </span><span style=3D"color:#65737e;">// If we've been=
 given a memory handle, attach it, if not, create one =20
</span><span>        </span><span style=3D"color:#b48ead;">let mut</span><s=
pan> shmem =3D </span><span style=3D"color:#b48ead;">match</span><span> han=
dle { =20
</span><span>            None =3D&gt; </span><span style=3D"color:#96b5b4;"=
>shmem_conf</span><span>().</span><span style=3D"color:#96b5b4;">create</sp=
an><span>().</span><span style=3D"color:#96b5b4;">unwrap</span><span>(), =
=20
</span><span>            Some(h) =3D&gt; </span><span style=3D"color:#96b5b=
4;">shmem_conf</span><span>() =20
</span><span>                .</span><span style=3D"color:#96b5b4;">os_id</=
span><span>(&amp;h) =20
</span><span>                .</span><span style=3D"color:#96b5b4;">open</s=
pan><span>() =20
</span><span>                .</span><span style=3D"color:#96b5b4;">expect<=
/span><span>(&amp;format!("</span><span style=3D"color:#a3be8c;">Unable to =
open the shared memory at </span><span style=3D"color:#d08770;">{}</span><s=
pan>", h)), =20
</span><span>        }; =20
</span><span>        </span><span style=3D"color:#b48ead;">let mut</span><s=
pan> bytes =3D </span><span style=3D"color:#b48ead;">unsafe </span><span>{ =
shmem.</span><span style=3D"color:#96b5b4;">as_slice_mut</span><span>() }; =
=20
</span><span>        </span><span style=3D"color:#65737e;">// The two event=
s are locks - one for each side. Each side activates the lock while it's =
=20
</span><span>        </span><span style=3D"color:#65737e;">// writing, and =
then unlocks when the data can be read
</span><span>        </span><span style=3D"color:#b48ead;">let </span><span=
>((our_event, lock_bytes_ours), (their_event, lock_bytes_theirs)) =3D </spa=
n><span style=3D"color:#b48ead;">unsafe </span><span>{ =20
</span><span>            </span><span style=3D"color:#b48ead;">if</span><sp=
an> owner { =20
</span><span>                ( =20
</span><span>                    BusyEvent::new(bytes.</span><span style=3D=
"color:#96b5b4;">get_mut</span><span>(</span><span style=3D"color:#d08770;"=
>0</span><span>).</span><span style=3D"color:#96b5b4;">unwrap</span><span>(=
), </span><span style=3D"color:#d08770;">true</span><span>).</span><span st=
yle=3D"color:#96b5b4;">unwrap</span><span>(), =20
</span><span>                    BusyEvent::new(bytes.</span><span style=3D=
"color:#96b5b4;">get_mut</span><span>(</span><span style=3D"color:#d08770;"=
>2</span><span>).</span><span style=3D"color:#96b5b4;">unwrap</span><span>(=
), </span><span style=3D"color:#d08770;">true</span><span>).</span><span st=
yle=3D"color:#96b5b4;">unwrap</span><span>(), =20
</span><span>                ) =20
</span><span>            } </span><span style=3D"color:#b48ead;">else </spa=
n><span>{ =20
</span><span>                (
</span><span>	                </span><span style=3D"color:#65737e;">// If w=
e're not the owner, the events have been created already =20
</span><span>                    BusyEvent::from_existing(bytes.</span><spa=
n style=3D"color:#96b5b4;">get_mut</span><span>(</span><span style=3D"color=
:#d08770;">2</span><span>).</span><span style=3D"color:#96b5b4;">unwrap</sp=
an><span>()).</span><span style=3D"color:#96b5b4;">unwrap</span><span>(), =
=20
</span><span>                    BusyEvent::from_existing(bytes.</span><spa=
n style=3D"color:#96b5b4;">get_mut</span><span>(</span><span style=3D"color=
:#d08770;">0</span><span>).</span><span style=3D"color:#96b5b4;">unwrap</sp=
an><span>()).</span><span style=3D"color:#96b5b4;">unwrap</span><span>(), =
=20
</span><span>                ) =20
</span><span>            } =20
</span><span>        }; =20
</span><span>        </span><span style=3D"color:#65737e;">// Confirm that =
we've correctly indexed two bytes for each lock =20
</span><span>        assert!(lock_bytes_ours &lt;=3D </span><span style=3D"=
color:#d08770;">2</span><span>); =20
</span><span>        assert!(lock_bytes_theirs &lt;=3D </span><span style=
=3D"color:#d08770;">2</span><span>); =20
</span><span>        </span><span style=3D"color:#b48ead;">if</span><span> =
owner { =20
</span><span>            our_event.</span><span style=3D"color:#96b5b4;">se=
t</span><span>(EventState::Clear).</span><span style=3D"color:#96b5b4;">unw=
rap</span><span>(); =20
</span><span>            their_event.</span><span style=3D"color:#96b5b4;">=
set</span><span>(EventState::Clear).</span><span style=3D"color:#96b5b4;">u=
nwrap</span><span>(); =20
</span><span>        } =20
</span><span>        ShmemWrapper { =20
</span><span>            shmem, =20
</span><span>            owner, =20
</span><span>            our_event, =20
</span><span>            their_event, =20
</span><span>            data_start: </span><span style=3D"color:#d08770;">=
4</span><span>, =20
</span><span>        } =20
</span><span>    } =20
</span><span> =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">signal_start</span><span>(&amp;</span><span style=
=3D"color:#b48ead;">mut </span><span style=3D"color:#bf616a;">self</span><s=
pan>) { =20
</span><span>        </span><span style=3D"color:#bf616a;">self</span><span=
>.our_event.</span><span style=3D"color:#96b5b4;">set</span><span>(EventSta=
te::Clear).</span><span style=3D"color:#96b5b4;">unwrap</span><span>() =20
</span><span>    } =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">signal_finished</span><span>(&amp;</span><span sty=
le=3D"color:#b48ead;">mut </span><span style=3D"color:#bf616a;">self</span>=
<span>) { =20
</span><span>        </span><span style=3D"color:#bf616a;">self</span><span=
>.our_event.</span><span style=3D"color:#96b5b4;">set</span><span>(EventSta=
te::Signaled).</span><span style=3D"color:#96b5b4;">unwrap</span><span>() =
=20
</span><span>    } =20
</span><span> =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">write</span><span>(&amp;</span><span style=3D"colo=
r:#b48ead;">mut </span><span style=3D"color:#bf616a;">self</span><span>, </=
span><span style=3D"color:#bf616a;">data</span><span>: &amp;[</span><span s=
tyle=3D"color:#b48ead;">u8</span><span>; 4]) { =20
</span><span>        </span><span style=3D"color:#b48ead;">let mut</span><s=
pan> bytes =3D </span><span style=3D"color:#b48ead;">unsafe </span><span>{ =
</span><span style=3D"color:#bf616a;">self</span><span>.shmem.</span><span =
style=3D"color:#96b5b4;">as_slice_mut</span><span>() }; =20
</span><span> =20
</span><span>        </span><span style=3D"color:#b48ead;">for</span><span>=
 i in </span><span style=3D"color:#d08770;">0</span><span>..data.</span><sp=
an style=3D"color:#96b5b4;">len</span><span>() { =20
</span><span>            bytes[i + </span><span style=3D"color:#bf616a;">se=
lf</span><span>.data_start] =3D data[i]; =20
</span><span>        } =20
</span><span>    } =20
</span><span> =20
</span><span>    </span><span style=3D"color:#b48ead;">pub fn </span><span =
style=3D"color:#8fa1b3;">read</span><span>(&amp;</span><span style=3D"color=
:#bf616a;">self</span><span>) -&gt; &amp;[</span><span style=3D"color:#b48e=
ad;">u8</span><span>] { =20
</span><span>        </span><span style=3D"color:#b48ead;">unsafe </span><s=
pan>{ &amp;</span><span style=3D"color:#bf616a;">self</span><span>.shmem.</=
span><span style=3D"color:#96b5b4;">as_slice</span><span>()[</span><span st=
yle=3D"color:#bf616a;">self</span><span>.data_start..</span><span style=3D"=
color:#bf616a;">self</span><span>.data_start + </span><span style=3D"color:=
#d08770;">4</span><span>] } =20
</span><span>    } =20
</span><span>}
</span></code><button class=3D"copy-code">copy</button></pre>
<p>With these structures in place, we simply lock, write, unlock, and then =
read when we're allowed to.</p>
<pre data-lang=3D"rust" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-rust "><code class=3D"language-rust" data-lang=3D"rust"><s=
pan style=3D"color:#b48ead;">pub fn </span><span style=3D"color:#8fa1b3;">r=
un</span><span>(&amp;</span><span style=3D"color:#b48ead;">mut </span><span=
 style=3D"color:#bf616a;">self</span><span>, </span><span style=3D"color:#b=
f616a;">n</span><span>: </span><span style=3D"color:#b48ead;">usize</span><=
span>, </span><span style=3D"color:#bf616a;">print</span><span>: </span><sp=
an style=3D"color:#b48ead;">bool</span><span>) {=20
</span><span>	</span><span style=3D"color:#b48ead;">for </span><span>_ in <=
/span><span style=3D"color:#d08770;">0</span><span>..n { =20
</span><span>	    </span><span style=3D"color:#65737e;">// Activate our loc=
k in preparation for writing =20
</span><span>	    </span><span style=3D"color:#bf616a;">self</span><span>.w=
rapper.</span><span style=3D"color:#96b5b4;">signal_start</span><span>(); =
=20
</span><span>	    </span><span style=3D"color:#bf616a;">self</span><span>.w=
rapper.</span><span style=3D"color:#96b5b4;">write</span><span>(</span><spa=
n style=3D"color:#b48ead;">b</span><span>"</span><span style=3D"color:#a3be=
8c;">ping</span><span>"); =20
</span><span>	    </span><span style=3D"color:#65737e;">// Unlock after wri=
ting =20
</span><span>	    </span><span style=3D"color:#bf616a;">self</span><span>.w=
rapper.</span><span style=3D"color:#96b5b4;">signal_finished</span><span>()=
; =20
</span><span>	        </span><span style=3D"color:#65737e;">// Wait for the=
ir lock to be released so we can read =20
</span><span>	    </span><span style=3D"color:#b48ead;">if </span><span sty=
le=3D"color:#bf616a;">self</span><span>.wrapper.their_event.</span><span st=
yle=3D"color:#96b5b4;">wait</span><span>(Timeout::Infinite).</span><span st=
yle=3D"color:#96b5b4;">is_ok</span><span>() { =20
</span><span>	        </span><span style=3D"color:#b48ead;">let str </span>=
<span>=3D </span><span style=3D"color:#bf616a;">self</span><span>.wrapper.<=
/span><span style=3D"color:#96b5b4;">read</span><span>(); =20
</span><span>	        </span><span style=3D"color:#b48ead;">if str </span><=
span>!=3D </span><span style=3D"color:#b48ead;">b</span><span>"</span><span=
 style=3D"color:#a3be8c;">pong</span><span>" { =20
</span><span>	            panic!("</span><span style=3D"color:#a3be8c;">Sen=
t ping didn't get pong</span><span>") =20
</span><span>	        } =20
</span><span>	    } =20
</span><span>	}=20
</span><span>}
</span></code><button class=3D"copy-code">copy</button></pre>
<p>This code was horrible to write, and took some time to get right. I'm al=
most certain there are still bugs in there. It was complicated because:</p>
<ul>
<li>We have to do all of our own synchronisation without much help. In some=
 situations, you can imagine using a queue or messaging system to communica=
te out of band between the processes, letting them know when it's safe to r=
ead or write. Given our messages are so small though, this would kill all t=
he performance we've gone to the effort of achieving</li>
<li>It's very low level. We have to marshal the bytes ourselves, and use a =
lot of unsafe to do so. This also exposes us to changes in the layout of st=
ructs that would lead to hard-to-find bugs</li>
<li>I came across several bugs. On the Windows implementation of the most f=
eatureful crate there is a minimum page size <a href=3D"https://github.com/=
elast0ny/shared_memory/issues/107">bug</a> when allocating memory pages</li=
>
<li>It's not clear whether underlying memory can be easily resized. For our=
 purposes this isn't a problem given we only have 8 bytes, but you can imag=
ine this would quite quickly become an issue</li>
</ul>
<p>To be honest, unless I was absolutely sure I needed all of the shared me=
mory performance, I wouldn't want to use code like this in Production. Othe=
r languages have shared memory frameworks to make things like this easier, =
but I wasn't able to find anything in Rust when I looked.</p>
<h1 id=3D"results">Results
</h1>
<p>I've added results for Windows and Linux, but take these with a signific=
ant grain of salt as they are different machines. It's probably fair to com=
pare them within platform though.</p>
<table><thead><tr><th>Platform</th><th>Approach</th><th>Time per Operation =
(=C2=B5s)</th><th>Ops per Second</th><th>Time Comparison to Shared Memory</=
th></tr></thead><tbody>
<tr><td>Linux</td><td>1 - stdin_stdout</td><td>4.802</td><td>208k</td><td>2=
7.7x</td></tr>
<tr><td>Linux</td><td>2 - tcp_nodelay</td><td>10.930</td><td>92k</td><td>63=
.1x</td></tr>
<tr><td>Linux</td><td>2 - tcp_yesdelay</td><td>11.190</td><td>89k</td><td>6=
4.6x</td></tr>
<tr><td>Linux</td><td>3 - udp</td><td>9.120</td><td>110k</td><td>52.6x</td>=
</tr>
<tr><td>Linux</td><td>4 - shared_memory</td><td>0.173</td><td>5770k</td><td=
>1.0x</td></tr>
<tr><td></td><td></td><td></td><td></td><td></td></tr>
<tr><td>Windows</td><td>1 - stdin_stdout</td><td>28.450</td><td>35k</td><td=
>150.2x</td></tr>
<tr><td>Windows</td><td>2 - tcp_nodelay</td><td>39.390</td><td>25k</td><td>=
208.0x</td></tr>
<tr><td>Windows</td><td>2 - tcp_yesdelay</td><td>39.360</td><td>25k</td><td=
>207.8x</td></tr>
<tr><td>Windows</td><td>3 - udp</td><td>41.700</td><td>24k</td><td>220.2x</=
td></tr>
<tr><td>Windows</td><td>4 - shared_memory</td><td>0.189</td><td>5280k</td><=
td>1.0x</td></tr>
</tbody></table>
<p><img src=3D"https://3tilley.github.io/posts/ipc-results-graph.png" alt=
=3D"results"></p>
<p>The time per operation is similar for most of the approaches, apart from=
 using shared memory. With shared memory we can perform a ping-pong in unde=
r 200ns, or around 1000 processor cycles. I have to admit, I still found th=
is a little disappointing. Moving a few bytes around should be faster than =
that, but I'm going to resist digging too deep yet. Preparing an environmen=
t with core-pinning and the correct thread priority is tricky, and given we=
 have to do this with two concurrently running processes, it's even more di=
fficult. Consider too that with hyper-threaded cores, should these processe=
s run on different physical cores, or different logical cores? Do I have to=
 disable Spectre/Meltdown type mitigations? Which memory cache level can we=
 share? Having sunk a lot of hours similar situations before, I'm going to =
leave the log unflipped for now.</p>
<h2 id=3D"system-calls">System calls
</h2>
<p>But why are all the other methods so slow - and not only that, but so si=
milarly slow? Well Linux gives us the easiest tool to see what's happening =
<a href=3D"https://man7.org/linux/man-pages/man1/strace.1.html">strace</a>.=
 <code>strace</code> allows us to run a command and see what system calls a=
re made by that command. We can test this with the tcp runner, with 10 cycl=
es of ping-pong. It generates a large amount of results, especially since I=
'm running this through <code>cargo</code>, but we can trim it down and see=
 that in the heart of the execution there are system calls. Given I've only=
 attached this to the producer process, and we can see that there are two s=
ystems calls per cycle (a read and a write), so for the whole cycle we requ=
ire four system calls.</p>
<pre data-lang=3D"bash" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-bash "><code class=3D"language-bash" data-lang=3D"bash"><s=
pan style=3D"color:#bf616a;">$</span><span> strace</span><span style=3D"col=
or:#bf616a;"> -r</span><span> cargo run</span><span style=3D"color:#bf616a;=
"> --release</span><span> -- -n 10 -m tcp
</span><span style=3D"color:#bf616a;">...
</span><span>    </span><span style=3D"color:#bf616a;">0.000694</span><span=
> accept4(3, {sa_family=3DAF_INET, sin_port=3Dhtons(33404), sin_addr=3Dinet=
_addr("</span><span style=3D"color:#a3be8c;">127.0.0.1</span><span>")}, </s=
pan><span style=3D"color:#b48ead;">[</span><span>128 =3D&gt; 16</span><span=
 style=3D"color:#b48ead;">]</span><span>, SOCK_CLOEXEC) =3D </span><span st=
yle=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000939</span><spa=
n> setsockopt(4, SOL_TCP, TCP_NODELAY, </span><span style=3D"color:#b48ead;=
">[</span><span>1</span><span style=3D"color:#b48ead;">]</span><span>, 4) =
=3D </span><span style=3D"color:#bf616a;">0
</span><span>     </span><span style=3D"color:#bf616a;">0.000866</span><spa=
n> close(3)                  =3D </span><span style=3D"color:#bf616a;">0
</span><span>     </span><span style=3D"color:#bf616a;">0.006059</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000495</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000125</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000143</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000040</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000131</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000113</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000130</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000133</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000136</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000112</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000130</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000112</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000129</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000112</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000129</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000634</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000169</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000286</span><spa=
n> sendto(4, "</span><span style=3D"color:#a3be8c;">ping</span><span>", 4, =
MSG_NOSIGNAL, NULL, 0) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000227</span><spa=
n> recvfrom(4, "</span><span style=3D"color:#a3be8c;">pong</span><span>", 4=
, 0, NULL, NULL) =3D </span><span style=3D"color:#bf616a;">4
</span><span>     </span><span style=3D"color:#bf616a;">0.000174</span><spa=
n> write(1, "</span><span style=3D"color:#a3be8c;">10 cycles completed in 3=
ms 669us</span><span>"..., 4010 cycles completed in 3ms 669us 247ns=20
</span><span>) =3D </span><span style=3D"color:#bf616a;">40
</span><span>     </span><span style=3D"color:#bf616a;">0.000166</span><spa=
n> write(1, "</span><span style=3D"color:#a3be8c;">2725.5383 per second\n</=
span><span>", 212725.5383 per second
</span><span>
</span><span style=3D"color:#bf616a;">...
</span><span>
</span></code><button class=3D"copy-code">copy</button></pre>
<p>How expensive are system calls? Well I've used <code>strace -r</code> to=
 show times per call, but given previous discussions about how calling a ti=
mer can affect times (it adds at least one syscall per line) I won't take t=
hose numbers as ironclad. Especially <code>strace</code> is pausing and unp=
ausing the process. Roughly roughly speaking though we're looking at least =
a few microseconds per read or write. Four of those, and you can see why tc=
p struggles to do better than 10=C2=B5s per operation. This is similar for =
all of the other approaches.</p>
<p>System calls on Linux are complex, and there are various mitigations, bu=
t having to wipe registers, validate, drop down into the kernel ring, get t=
he output, and then undo those steps takes time. So if you really care abou=
t microseconds, try and avoid them in your hot loops.</p>
<p>For the shared memory approach we can see that after the mmap to create =
the block of shared memory, there are no calls in our loop, so we don't pay=
 that cost.</p>
<pre data-lang=3D"bash" style=3D"background-color:#2b303b;color:#c0c5ce;" c=
lass=3D"language-bash "><code class=3D"language-bash" data-lang=3D"bash"><s=
pan style=3D"color:#bf616a;">$</span><span> strace</span><span style=3D"col=
or:#bf616a;"> -r</span><span>  ./target/release/ipc</span><span style=3D"co=
lor:#bf616a;"> -n</span><span> 10</span><span style=3D"color:#bf616a;"> -m<=
/span><span> shmem
</span><span style=3D"color:#bf616a;">...
</span><span>    </span><span style=3D"color:#bf616a;">0.000215</span><span=
> mmap(NULL, 8, PROT_READ|</span><span style=3D"color:#bf616a;">PROT_WRITE,=
</span><span> MAP_SHARED, 3, 0) =3D </span><span style=3D"color:#bf616a;">0=
x7f81dac8b000
</span><span>     </span><span style=3D"color:#bf616a;">0.000091</span><spa=
n> mmap(NULL, 36864, PROT_READ|</span><span style=3D"color:#bf616a;">PROT_W=
RITE,</span><span> MAP_PRIVATE|</span><span style=3D"color:#bf616a;">MAP_AN=
ONYMOUS</span><span>|</span><span style=3D"color:#bf616a;">MAP_STACK, -1</s=
pan><span>, 0) =3D </span><span style=3D"color:#bf616a;">0x7f81dac46000
</span><span>     </span><span style=3D"color:#bf616a;">0.000051</span><spa=
n> rt_sigprocmask(SIG_BLOCK, </span><span style=3D"color:#bf616a;">~</span>=
<span style=3D"color:#b48ead;">[]</span><span>, </span><span style=3D"color=
:#b48ead;">[]</span><span>, 8) =3D </span><span style=3D"color:#bf616a;">0
</span><span>     </span><span style=3D"color:#bf616a;">0.000140</span><spa=
n> clone3({flags=3DCLONE_VM|CLONE_VFORK, exit_signal=3DSIGCHLD, stack=3D0x7=
f81dac46000, stack_size=3D0x9000}, 88) =3D </span><span style=3D"color:#bf6=
16a;">70905
</span><span>     </span><span style=3D"color:#bf616a;">0.000653</span><spa=
n> munmap(0x7f81dac46000, 36864) =3D </span><span style=3D"color:#bf616a;">=
0
</span><span>     </span><span style=3D"color:#bf616a;">0.000066</span><spa=
n> rt_sigprocmask(SIG_SETMASK, </span><span style=3D"color:#b48ead;">[]</sp=
an><span>, NULL, 8) =3D </span><span style=3D"color:#bf616a;">0
</span><span>     </span><span style=3D"color:#bf616a;">0.000058</span><spa=
n> clock_nanosleep(CLOCK_REALTIME, 0, {tv_sec=3D1, tv_nsec=3D0}, 0x7ffe52d2=
9560) =3D </span><span style=3D"color:#bf616a;">0
</span><span>     </span><span style=3D"color:#bf616a;">1.576578</span><spa=
n> write(1, "</span><span style=3D"color:#a3be8c;">10 cycles completed in 5=
21us 91n</span><span>"..., 3510 cycles completed in 521us 91ns
</span><span style=3D"color:#bf616a;">...
</span></code><button class=3D"copy-code">copy</button></pre>
<h1 id=3D"conclusion">Conclusion
</h1>
<p>I was surprised at how similarly most things performed. I did a cursory =
investigation into Linux-specific approaches like dbus and Unix Domain Sock=
ets, but they seemed to be in the same ballpark as the non-shared memory ap=
proaches. The only other thing to try would be memory-mapped files, but I t=
hought I'd save that for when I wanted to try something similar with larger=
 blocks of data.</p>
<p>If I had to do this in Production, for the majority of workloads I'd pro=
bably still use an HTTP / TCP connection. It's portable, reliable on messag=
e failure, and I could split it across machines if needs be. However for th=
e cases where latency really matters, the maintenance overhead of using sha=
red memory is worth it.</p>
<p>For anyone who wants a deeper dive, or to offer critiques and improvemen=
ts, the code is available <a href=3D"https://github.com/3tilley/rust-experi=
ments/tree/master/ipc">here</a>.</p>

  </div>
 =20

  <footer class=3D"post-footer">
     =20
      <ul class=3D"post-tags">
         =20
         =20
          <li><a href=3D"https://3tilley.github.io/tags/rust/">Rust</a></li=
>
         =20
         =20
          <li><a href=3D"https://3tilley.github.io/tags/low-latency/">Low-l=
atency</a></li>
         =20
      </ul>
     =20

   =20
   =20


<nav class=3D"paginav">
   =20
    <a class=3D"prev" href=3D"https://3tilley.github.io/posts/illberts-otel=
-part-1-instrumentation/">
        <span class=3D"title">=C2=AB Prev</span>
        <br>
        <span>Illbert's OTel in Rust - Part 1 - Instrumentation</span>
    </a>
   =20
   =20
</nav>


   =20
   =20
  </footer>

</article>

    </main>
   =20
    <footer class=3D"footer">
   =20
    <span>=C2=A9 2024 <a href=3D"https://3tilley.github.io/"></a></span>
   =20
    <span>
        Powered by
        <a href=3D"https://www.getzola.org/" rel=3D"noopener noreferrer" ta=
rget=3D"_blank">Zola</a> &amp;
        <a href=3D"https://github.com/cydave/zola-theme-papermod" rel=3D"no=
opener" target=3D"_blank">PaperMod</a>
    </span>
</footer>


<a href=3D"https://3tilley.github.io/posts/simple-ipc-ping-pong/#top" aria-=
label=3D"go to top" title=3D"Go to Top (Alt + G)" class=3D"top-link" id=3D"=
top-link" accesskey=3D"g">
    <svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 12 6" fill=3D"=
currentColor">
        <path d=3D"M12 6H0l6-6z"></path>
    </svg>
</a>















   =20


<div id=3D"veepn-breach-alert"><template shadowmode=3D"open"></template></d=
iv></body></html>
------MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2d4db325-c8a1-46f2-bb77-732a4c389569@mhtml.blink

@charset "utf-8";

@font-face { font-family: FigtreeVF; src: url("chrome-extension://majdfhpai=
honcoakbjgbdhglocklcgno/fonts/FigtreeVF.woff2") format("woff2-variations");=
 font-weight: 100 1000; font-display: swap; }
------MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://3tilley.github.io/css/includes/scroll-bar.css

@charset "utf-8";
=0A
------MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://3tilley.github.io/css/styles.css

@charset "utf-8";

:root { --gap: 24px; --content-gap: 20px; --nav-width: 1024px; --main-width=
: 720px; --header-height: 60px; --footer-height: 60px; --radius: 8px; --the=
me: rgb(255, 255, 255); --entry: rgb(255, 255, 255); --primary: rgb(30, 30,=
 30); --secondary: rgb(108, 108, 108); --tertiary: rgb(214, 214, 214); --co=
ntent: rgb(31, 31, 31); --hljs-bg: rgb(28, 29, 33); --code-bg: rgb(245, 245=
, 245); --border: rgb(238, 238, 238); }

.dark { --theme: rgb(29, 30, 32); --entry: rgb(46, 46, 51); --primary: rgb(=
218, 218, 219); --secondary: rgb(155, 156, 157); --tertiary: rgb(65, 66, 68=
); --content: rgb(196, 196, 197); --hljs-bg: rgb(46, 46, 51); --code-bg: rg=
b(55, 56, 62); --border: rgb(51, 51, 51); }

.list { background: var(--code-bg); }

.dark.list { background: var(--theme); }

*, ::after, ::before { box-sizing: border-box; }

html { -webkit-tap-highlight-color: transparent; overflow-y: scroll; }

a, button, body, h1, h2, h3, h4, h5, h6 { color: var(--primary); }

body { font-family: -apple-system, BlinkMacSystemFont, "segoe ui", Roboto, =
Oxygen, Ubuntu, Cantarell, "open sans", "helvetica neue", sans-serif; font-=
size: 18px; line-height: 1.6; word-break: break-word; background: var(--the=
me); }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, sect=
ion, table { display: block; }

h1, h2, h3, h4, h5, h6 { line-height: 1.2; }

h1, h2, h3, h4, h5, h6, p { margin-top: 0px; margin-bottom: 0px; }

ul { padding: 0px; }

a { text-decoration: none; }

body, figure, ul { margin: 0px; }

table { width: 100%; border-collapse: collapse; border-spacing: 0px; overfl=
ow-x: auto; word-break: keep-all; }

button, input, textarea { padding: 0px; font: inherit; background: 0px 0px;=
 border: 0px; }

input, textarea { outline: 0px; }

button, input[type=3D"button"], input[type=3D"submit"] { cursor: pointer; }

input:-webkit-autofill, textarea:-webkit-autofill { box-shadow: 0 0 0 50px =
var(--theme) inset; }

img { display: block; max-width: 100%; }

.not-found { position: absolute; left: 0px; right: 0px; display: flex; alig=
n-items: center; justify-content: center; height: 80%; font-size: 160px; fo=
nt-weight: 700; }

.archive-posts { width: 100%; font-size: 16px; }

.archive-year { margin-top: 40px; }

.archive-year:not(:last-of-type) { border-bottom: 2px solid var(--border); =
}

.archive-month { display: flex; align-items: flex-start; padding: 10px 0px;=
 }

.archive-month-header { margin: 25px 0px; width: 200px; }

.archive-month:not(:last-of-type) { border-bottom: 1px solid var(--border);=
 }

.archive-entry { position: relative; padding: 5px; margin: 10px 0px; }

.archive-entry-title { margin: 5px 0px; font-weight: 400; }

.archive-count, .archive-meta { color: var(--secondary); font-size: 14px; }

.footer, .top-link { font-size: 12px; color: var(--secondary); }

.footer { max-width: calc(var(--main-width) + var(--gap) * 2); margin: auto=
; padding: calc((var(--footer-height) - var(--gap)) / 2) var(--gap); text-a=
lign: center; line-height: 24px; }

.footer span { margin-inline: 1px; }

.footer span:last-child { white-space: nowrap; }

.footer a { color: inherit; border-bottom: 1px solid var(--secondary); }

.footer a:hover { border-bottom: 1px solid var(--primary); }

.top-link { visibility: hidden; position: fixed; bottom: 60px; right: 30px;=
 z-index: 99; background: var(--tertiary); width: 42px; height: 42px; paddi=
ng: 12px; border-radius: 64px; transition: visibility 0.5s, opacity 0.8s li=
near; }

.top-link, .top-link svg { filter: drop-shadow(0 0 0 var(--theme)); }

.footer a:hover, .top-link:hover { color: var(--primary); }

.top-link:focus, #theme-toggle:focus { outline: 0px; }

.nav { display: flex; flex-wrap: wrap; justify-content: space-between; max-=
width: calc(var(--nav-width) + var(--gap) * 2); margin-inline: auto; line-h=
eight: var(--header-height); }

.nav a { display: block; }

.logo, #menu { display: flex; margin: auto var(--gap); }

.logo { flex-wrap: inherit; }

.logo a { font-size: 24px; font-weight: 700; }

.logo a img, .logo a svg { display: inline; vertical-align: middle; pointer=
-events: none; transform: translate(0px, -10%); border-radius: 6px; margin-=
inline-end: 8px; }

button#theme-toggle { font-size: 26px; margin: auto 4px; }

body.dark #moon { vertical-align: middle; display: none; }

body:not(.dark) #sun { display: none; }

#menu { list-style: none; word-break: keep-all; overflow-x: auto; white-spa=
ce: nowrap; }

#menu li + li { margin-inline-start: var(--gap); }

#menu a { font-size: 16px; }

#menu .active { font-weight: 500; border-bottom: 2px solid; }

.lang-switch li, .lang-switch ul, .logo-switches { display: inline-flex; ma=
rgin: auto 4px; }

.lang-switch { display: flex; flex-wrap: inherit; }

.lang-switch a { margin: auto 3px; font-size: 16px; font-weight: 500; }

.logo-switches { flex-wrap: inherit; }

.main { position: relative; min-height: calc(100vh - var(--header-height) -=
 var(--footer-height)); max-width: calc(var(--main-width) + var(--gap) * 2)=
; margin: auto; padding: var(--gap); }

.page-header h1 { font-size: 40px; }

.pagination { display: flex; }

.pagination a { color: var(--theme); font-size: 13px; line-height: 36px; ba=
ckground: var(--primary); border-radius: calc(18px); padding: 0px 16px; }

.pagination .next { margin-inline-start: auto; }

.social-icons { padding: 12px 0px; }

.social-icons a:not(:last-of-type) { margin-inline-end: 12px; }

.social-icons a svg { height: 26px; width: 26px; }

code { direction: ltr; }

div.highlight, pre { position: relative; }

.copy-code { display: none; position: absolute; top: 4px; right: 4px; color=
: rgba(255, 255, 255, 0.8); background: rgba(78, 78, 78, 0.8); border-radiu=
s: var(--radius); padding: 0px 5px; font-size: 14px; user-select: none; }

div.highlight:hover .copy-code, pre:hover .copy-code { display: block; }

.first-entry { position: relative; display: flex; flex-direction: column; j=
ustify-content: center; min-height: 320px; margin: var(--gap) 0 calc(var(--=
gap) * 2); }

.first-entry .entry-header { overflow: hidden; display: -webkit-box; -webki=
t-box-orient: vertical; -webkit-line-clamp: 3; }

.first-entry .entry-header h1 { font-size: 34px; line-height: 1.3; }

.first-entry .entry-content { margin: 14px 0px; font-size: 16px; -webkit-li=
ne-clamp: 3; }

.first-entry .entry-footer { font-size: 14px; }

.home-info .entry-content { -webkit-line-clamp: unset; }

.post-entry { position: relative; margin-bottom: var(--gap); padding: var(-=
-gap); background: var(--entry); border-radius: var(--radius); transition: =
transform 0.1s; border: 1px solid var(--border); }

.post-entry:active { transform: scale(0.96); }

.tag-entry .entry-cover { display: none; }

.entry-header h2 { font-size: 24px; line-height: 1.3; }

.entry-content { margin: 8px 0px; color: var(--secondary); font-size: 14px;=
 line-height: 1.6; overflow: hidden; display: -webkit-box; -webkit-box-orie=
nt: vertical; -webkit-line-clamp: 2; }

.entry-footer { color: var(--secondary); font-size: 13px; }

.entry-link { position: absolute; inset: 0px; }

.entry-cover, .entry-isdraft { font-size: 14px; color: var(--secondary); }

.entry-cover { margin-bottom: var(--gap); text-align: center; }

.entry-cover img { border-radius: var(--radius); pointer-events: none; widt=
h: 100%; height: auto; }

.entry-cover a { color: var(--secondary); box-shadow: 0 1px 0 var(--primary=
); }

.page-header, .post-header { margin: 24px auto var(--content-gap); }

.post-title { margin-bottom: 2px; font-size: 40px; }

.post-description { margin-top: 10px; margin-bottom: 5px; }

.post-meta, .breadcrumbs { color: var(--secondary); font-size: 14px; displa=
y: flex; flex-wrap: wrap; }

.post-meta .i18n_list li { display: inline-flex; list-style: none; margin: =
auto 3px; box-shadow: 0 1px 0 var(--secondary); }

.breadcrumbs a { font-size: 16px; }

.post-content { color: var(--content); }

.post-content h3, .post-content h4, .post-content h5, .post-content h6 { ma=
rgin: 24px 0px 16px; }

.post-content h1 { margin: 40px auto 32px; font-size: 40px; }

.post-content h2 { margin: 32px auto 24px; font-size: 32px; }

.post-content h3 { font-size: 24px; }

.post-content h4 { font-size: 16px; }

.post-content h5 { font-size: 14px; }

.post-content h6 { font-size: 12px; }

.post-content a, .toc a:hover { box-shadow: 0px 1px; box-decoration-break: =
clone; -webkit-box-decoration-break: clone; }

.post-content a code { margin: auto 0px; border-radius: 0px; box-shadow: 0 =
-1px 0 var(--primary) inset; }

.post-content del { text-decoration: line-through; }

.post-content dl, .post-content ol, .post-content p, .post-content figure, =
.post-content ul { margin-bottom: var(--content-gap); }

.post-content ol, .post-content ul { padding-inline-start: 20px; }

.post-content li { margin-top: 5px; }

.post-content li p { margin-bottom: 0px; }

.post-content dl { display: flex; flex-wrap: wrap; margin: 0px; }

.post-content dt { width: 25%; font-weight: 700; }

.post-content dd { width: 75%; margin-inline-start: 0px; padding-inline-sta=
rt: 10px; }

.post-content dd ~ dd, .post-content dt ~ dt { margin-top: 10px; }

.post-content table { margin-bottom: 32px; }

.post-content table th, .post-content table td { min-width: 80px; padding: =
12px 8px; line-height: 1.5; border-bottom: 1px solid var(--border); }

.post-content table th { font-size: 14px; text-align: start; }

.post-content table td code:only-child { margin: auto 0px; }

.post-content .highlight table { border-radius: var(--radius); }

.post-content .highlight:not(table) { margin: 10px auto; border-radius: var=
(--radius); direction: ltr; background: var(--hljs-bg) !important; }

.post-content li > .highlight { margin-inline-end: 0px; }

.post-content ul pre { margin-inline-start: calc(var(--gap) * -2); }

.post-content .highlight pre { margin: 0px; }

.post-content .highlighttable { table-layout: fixed; }

.post-content .highlighttable td:first-child { width: 40px; }

.post-content .highlighttable td .linenodiv { padding-inline-end: 0px !impo=
rtant; }

.post-content .highlighttable td .highlight, .post-content .highlighttable =
td .linenodiv pre { margin-bottom: 0px; }

.post-content code { margin: auto 4px; padding: 4px 6px; font-size: 0.78em;=
 line-height: 1.5; background: var(--code-bg); border-radius: 2px; }

.post-content pre code { display: block; margin: auto 0px; padding: 10px; c=
olor: rgb(213, 213, 214); border-radius: var(--radius); overflow-x: auto; w=
ord-break: break-all; background: var(--hljs-bg) !important; }

.post-content blockquote { margin: 20px 0px; padding: 0px 14px; border-inli=
ne-start: 3px solid var(--primary); }

.post-content hr { margin: 30px 0px; height: 2px; background: var(--tertiar=
y); border: 0px; }

.post-content iframe { max-width: 100%; }

.post-content img { border-radius: 4px; margin: 1rem 0px; }

.post-content img[src*=3D"#center"] { margin: 1rem auto; }

.post-content figure.align-center { text-align: center; }

.post-content figure > figcaption { color: var(--primary); font-size: 16px;=
 font-weight: 700; margin: 8px 0px 16px; }

.post-content figure > figcaption > p { color: var(--secondary); font-size:=
 14px; font-weight: 400; }

.toc { margin: 0px 2px 40px; border: 1px solid var(--border); background: v=
ar(--code-bg); border-radius: var(--radius); padding: 0.4em; }

.dark .toc { background: var(--entry); }

.toc details summary { cursor: zoom-in; margin-inline-start: 20px; }

.toc details[open] summary { cursor: zoom-out; }

.toc .details { display: inline; font-weight: 500; }

.toc .inner { margin: 0px 20px; padding: 10px 20px; }

.toc li ul { margin-inline-start: var(--gap); }

.toc summary:focus { outline: 0px; }

.post-footer { margin-top: 56px; }

.post-tags li { display: inline-block; margin-inline-end: 3px; margin-botto=
m: 5px; }

.post-tags a, .share-buttons, .paginav { border-radius: var(--radius); back=
ground: var(--code-bg); border: 1px solid var(--border); }

.post-tags a { display: block; padding-inline: 14px; color: var(--secondary=
); font-size: 14px; line-height: 34px; background: var(--code-bg); }

.post-tags a:hover, .paginav a:hover { background: var(--border); }

.share-buttons { margin: 14px 0px; padding-inline-start: var(--radius); dis=
play: flex; justify-content: center; overflow-x: auto; }

.share-buttons a { margin-top: 10px; }

.share-buttons a:not(:last-of-type) { margin-inline-end: 12px; }

h1:hover .anchor, h2:hover .anchor, h3:hover .anchor, h4:hover .anchor, h5:=
hover .anchor, h6:hover .anchor { display: inline-flex; color: var(--second=
ary); margin-inline-start: 8px; font-weight: 500; user-select: none; }

.paginav { margin: 10px 0px; display: flex; line-height: 30px; border-radiu=
s: var(--radius); }

.paginav a { padding-inline: 14px; border-radius: var(--radius); }

.paginav .title { letter-spacing: 1px; text-transform: uppercase; font-size=
: small; color: var(--secondary); }

.paginav .prev, .paginav .next { width: 50%; }

.paginav span:hover:not(.title) { box-shadow: 0px 1px; }

.paginav .next { margin-inline-start: auto; text-align: right; }

[dir=3D"rtl"] .paginav .next { text-align: left; }

h1 > a > svg { display: inline; }

img.in-text { display: inline; margin: auto; }

.buttons, .main .profile { display: flex; justify-content: center; }

.main .profile { align-items: center; min-height: calc(
    100vh - var(--header-height) - var(--footer-height) - (var(--gap) * 2)
  ); text-align: center; }

.profile .profile_inner h1 { padding: 12px 0px; }

.profile img { display: inline-table; border-radius: 50%; }

.buttons { flex-wrap: wrap; max-width: 400px; margin: 0px auto; }

.button { background: var(--tertiary); border-radius: var(--radius); margin=
: 8px; padding: 6px; transition: transform 0.1s; }

.button-inner { padding: 0px 8px; }

.button:active { transform: scale(0.96); }

#searchbox input { padding: 4px 10px; width: 100%; color: var(--primary); f=
ont-weight: 700; border: 2px solid var(--tertiary); border-radius: var(--ra=
dius); }

#searchbox input:focus { border-color: var(--secondary); }

#searchResults li { list-style: none; border-radius: var(--radius); padding=
: 10px; margin: 10px 0px; position: relative; font-weight: 500; }

#searchResults { margin: 10px 0px; width: 100%; }

#searchResults li:active { transition: transform 0.1s; transform: scale(0.9=
8); }

#searchResults a { position: absolute; width: 100%; height: 100%; top: 0px;=
 left: 0px; outline: none; }

#searchResults .focus { transform: scale(0.98); border: 2px solid var(--ter=
tiary); }

.terms-tags li { display: inline-block; margin: 10px; font-weight: 500; }

.terms-tags a { display: block; padding: 3px 10px; background: var(--tertia=
ry); border-radius: 6px; transition: transform 0.1s; }

.terms-tags a:active { background: var(--tertiary); transform: scale(0.96);=
 }

.chroma { background-color: unset !important; }

::-webkit-scrollbar-track { background: 0px 0px; }

.list:not(.dark)::-webkit-scrollbar-track { background: var(--code-bg); }

::-webkit-scrollbar-thumb { background: var(--tertiary); border: 5px solid =
var(--theme); border-radius: var(--radius); }

.list:not(.dark)::-webkit-scrollbar-thumb { border: 5px solid var(--code-bg=
); }

::-webkit-scrollbar-thumb:hover { background: var(--secondary); }

.post-content .highlighttable td .highlight pre code::-webkit-scrollbar { d=
isplay: none; }

.post-content :not(table) ::-webkit-scrollbar-thumb { border: 2px solid var=
(--hljs-bg); background: rgb(113, 113, 117); }

.post-content :not(table) ::-webkit-scrollbar-thumb:hover { background: rgb=
(163, 163, 165); }

.gist table::-webkit-scrollbar-thumb { border: 2px solid rgb(255, 255, 255)=
; background: rgb(173, 173, 173); }

.gist table::-webkit-scrollbar-thumb:hover { background: rgb(112, 112, 112)=
; }

.post-content table::-webkit-scrollbar-thumb { border-width: 2px; }

@media screen and (min-width: 768px) {
  ::-webkit-scrollbar { width: 19px; height: 11px; }
}

@media screen and (max-width: 768px) {
  :root { --gap: 14px; }
  .profile img { transform: scale(0.85); }
  .first-entry { min-height: 260px; }
  .archive-month { flex-direction: column; }
  .archive-year { margin-top: 20px; }
  .footer { padding: calc((var(--footer-height) - var(--gap) - 10px) / 2) v=
ar(--gap); }
}

@media screen and (max-width: 900px) {
  .list .top-link { transform: translateY(-5rem); }
}

@media (prefers-reduced-motion) {
  .terms-tags a:active, .button:active, .post-entry:active, .top-link, #sea=
rchResults .focus, #searchResults li:active { transform: none; }
}

.bg { color: rgb(248, 248, 242); background-color: rgb(40, 42, 54); }

.chroma { color: rgb(248, 248, 242); background-color: rgb(40, 42, 54); }

.chroma .x { }

.chroma .err { }

.chroma .cl { }

.chroma .lntd { vertical-align: top; padding: 0px; margin: 0px; border: 0px=
; }

.chroma .lntable { border-spacing: 0px; padding: 0px; margin: 0px; border: =
0px; }

.chroma .hl { background-color: rgb(71, 71, 51); }

.chroma .lnt { white-space: pre; user-select: none; margin-right: 0.4em; pa=
dding: 0px 0.4em; color: rgb(127, 127, 127); }

.chroma .ln { white-space: pre; user-select: none; margin-right: 0.4em; pad=
ding: 0px 0.4em; color: rgb(127, 127, 127); }

.chroma .line { display: flex; }

.chroma .k { color: rgb(255, 121, 198); }

.chroma .kc { color: rgb(255, 121, 198); }

.chroma .kd { color: rgb(139, 233, 253); font-style: italic; }

.chroma .kn { color: rgb(255, 121, 198); }

.chroma .kp { color: rgb(255, 121, 198); }

.chroma .kr { color: rgb(255, 121, 198); }

.chroma .kt { color: rgb(139, 233, 253); }

.chroma .n { }

.chroma .na { color: rgb(80, 250, 123); }

.chroma .nb { color: rgb(139, 233, 253); font-style: italic; }

.chroma .bp { }

.chroma .nc { color: rgb(80, 250, 123); }

.chroma .no { }

.chroma .nd { }

.chroma .ni { }

.chroma .ne { }

.chroma .nf { color: rgb(80, 250, 123); }

.chroma .fm { }

.chroma .nl { color: rgb(139, 233, 253); font-style: italic; }

.chroma .nn { }

.chroma .nx { }

.chroma .py { }

.chroma .nt { color: rgb(255, 121, 198); }

.chroma .nv { color: rgb(139, 233, 253); font-style: italic; }

.chroma .vc { color: rgb(139, 233, 253); font-style: italic; }

.chroma .vg { color: rgb(139, 233, 253); font-style: italic; }

.chroma .vi { color: rgb(139, 233, 253); font-style: italic; }

.chroma .vm { }

.chroma .l { }

.chroma .ld { }

.chroma .s { color: rgb(241, 250, 140); }

.chroma .sa { color: rgb(241, 250, 140); }

.chroma .sb { color: rgb(241, 250, 140); }

.chroma .sc { color: rgb(241, 250, 140); }

.chroma .dl { color: rgb(241, 250, 140); }

.chroma .sd { color: rgb(241, 250, 140); }

.chroma .s2 { color: rgb(241, 250, 140); }

.chroma .se { color: rgb(241, 250, 140); }

.chroma .sh { color: rgb(241, 250, 140); }

.chroma .si { color: rgb(241, 250, 140); }

.chroma .sx { color: rgb(241, 250, 140); }

.chroma .sr { color: rgb(241, 250, 140); }

.chroma .s1 { color: rgb(241, 250, 140); }

.chroma .ss { color: rgb(241, 250, 140); }

.chroma .m { color: rgb(189, 147, 249); }

.chroma .mb { color: rgb(189, 147, 249); }

.chroma .mf { color: rgb(189, 147, 249); }

.chroma .mh { color: rgb(189, 147, 249); }

.chroma .mi { color: rgb(189, 147, 249); }

.chroma .il { color: rgb(189, 147, 249); }

.chroma .mo { color: rgb(189, 147, 249); }

.chroma .o { color: rgb(255, 121, 198); }

.chroma .ow { color: rgb(255, 121, 198); }

.chroma .p { }

.chroma .c { color: rgb(98, 114, 164); }

.chroma .ch { color: rgb(98, 114, 164); }

.chroma .cm { color: rgb(98, 114, 164); }

.chroma .c1 { color: rgb(98, 114, 164); }

.chroma .cs { color: rgb(98, 114, 164); }

.chroma .cp { color: rgb(255, 121, 198); }

.chroma .cpf { color: rgb(255, 121, 198); }

.chroma .g { }

.chroma .gd { color: rgb(255, 85, 85); }

.chroma .ge { text-decoration: underline; }

.chroma .gr { }

.chroma .gh { font-weight: 700; }

.chroma .gi { color: rgb(80, 250, 123); font-weight: 700; }

.chroma .go { color: rgb(68, 71, 90); }

.chroma .gp { }

.chroma .gs { }

.chroma .gu { font-weight: 700; }

.chroma .gt { }

.chroma .gl { text-decoration: underline; }

.chroma .w { }
------MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://3tilley.github.io/css/override.css

@charset "utf-8";

.post-content pre, .post-content pre code { border-radius: var(--radius); }

.post-content pre code > table { display: table; margin: 10px auto; border-=
radius: var(--radius); border-spacing: 0px; border-collapse: collapse; tabl=
e-layout: fixed; width: 100%; }

.post-content pre code > table td { vertical-align: top; padding: 0px; marg=
in: 0px; border: 0px; }

.post-content pre code > table td:first-child { white-space: pre; user-sele=
ct: none; margin: 0px; padding: 0px 1em 0px 0px; color: rgb(127, 127, 127);=
 text-align: right; display: table-cell; max-width: 10%; }

.post-content pre code > table td:nth-child(2) { width: 92%; }
------MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://3tilley.github.io/posts/ipc-results-graph.png

iVBORw0KGgoAAAANSUhEUgAACUsAAAScCAYAAAC4d0zrAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90
bGliIHZlcnNpb24zLjYuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/P9b71AAAACXBIWXMAAB7C
AAAewgFu0HU+AAEAAElEQVR4nOzdd1QU19sH8C8sHaSoCIoK9t4QxV5ij70bE02MLbEk9pao2HuK
JlFEjcYSY4kFazQ2jBURFFCsqKiISJFedvf9gx/zMtvYhYVF+H7O4Rxm9s7MnS1T7n3muUZyuVwO
IiIiIiIiIiIiIiIiIiIiIiKiYs7Y0BUgIiIiIiIiIiIiIiIiIiIiIiIqDAyWIiIiIiIiIiIiIiIi
IiIiIiKiEoHBUkREREREREREREREREREREREVCIwWIqIiIiIiIiIiIiIiIiIiIiIiEoEBksRERER
EREREREREREREREREVGJwGApIiIiIiIiIiIiIiIiIiIiIiIqERgsRURERERERERERERERERERERE
JQKDpYiIiIiIiIiIiIiIiIiIiIiIqERgsBQREREREREREREREREREREREZUIDJYiIiIiIiIiIiIi
IiIiIiIiIqISgcFSRERERERERERERERERERERERUIjBYioiIiIiIiIiIiIiIiIiIiIiISgQGSxER
ERERERERERERERERERERUYnAYCkiIiIiIiIiIiIiIiIiIiIiIioRGCxFRERERERERERERERERERE
REQlAoOliIiIiIiIiIiIiIiIiIiIiIioRGCwFBERERERERERERERERERERERlQgMliIiIiIiIiIi
IiIiIiIiIiIiohKBwVJERERERERERERERERERERERFQimBi6AkRERGQ4vXv3xuvXr4Xpo0ePokKF
CgasEVHhy8jIQFhYGJ4/f46YmBikpqbCzMwMtra2cHFxQa1atWBra2voalIRxmOp/snlcly6dAnn
zp1DSEgI3r17h6SkJMhkMqHMpk2b4OHhYcBakq+vLxYtWiRM9+rVC15eXlovn9/P+f379zhy5Ahu
3ryJR48e4f3790hNTRVeL1++PHx9fXXfMSKiD9i4ceMQEBAgTPN8ScWVt7c3fHx8hOmxY8di/Pjx
BqwRUd69evUKffr0EaZ5HZuluJ/T/P398dVXXwnT7u7u2Lx5swFrREREVLIwWIqIiKgIUGwUKWgL
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
RERERERERCUCg6WIiIiIiIiIiIiIiIiIiIiIiKhEYLAUERERERERERERERERERERERGVCAyWIiIi
IiIiIiIiIiIiIiIiIiKiEsFILpfLDV0JIiIiIiIiIiIiIiIiIiIiIiKigsbMUkRERERERERERERE
REREREREVCIwWIqIiIiIiIiIiIiIiIiIiIiIiEoEBksREREREREREREREREREREREVGJYGLoChAR
EREREREREREREREpWr9+Pf744w9hetOmTfDw8FAqJ5PJEB4ejpCQEISEhCA0NBQPHz5ERkaGxuV0
5eXlhWPHjum0zMKFC9G7d2+1rwcFBeHAgQO4ffs2YmJiUKpUKdSoUQO9evVC9+7d81tlIiIiIlKB
wVJERERERERERERERERUpISFhWH37t1alT1x4gS8vLwKtkJ55OrqqvY1b29vbN26FTKZTJj37t07
vHv3DteuXcOpU6ewatUqmJubF0ZViYiIiEoMBksRERERERERERERERFRkSGTybBs2TJIpVKULl0a
MTExGsvL5XLhfxMTE1SvXh2ZmZl49OiRXus1YcIEfPbZZxrLJCQkYPz48ZDJZKhcuTIaNmyostzB
gwfh4+MDAKhYsSJGjRqF6tWr4+3bt9i7dy/8/f1x+fJlLF68GMuWLdPrfhARERGVdAyWKkZ69OiB
qKgolCtXDidPnjR0dYiIiIiIiIiIiIiIiHS2d+9ehIaGws3NDR07dsTvv/+usXyVKlUwY8YM1KtX
DzVr1oS5uTm8vb31HixVrlw5lCtXTmOZAwcOCJmiPv74Y5Vl4uPjsWHDBgCAs7Mztm/fDnt7e+H1
tm3bYsaMGfDz88Pp06fRv39/vQwjSERERERZjA1dAdKfqKgoREZGIioqytBVISqRgoKCEBQUZOhq
EBERFTqeA4mIqCTi+Y+IiEqqgj4HRkZGYtOmTQCAuXPnwsQk9+f+69evj2HDhqFBgwYGH7Lu+PHj
AAAjIyP07NlTZZnDhw8jMTERADB58mRRoBQASCQSzJkzBxKJBACwc+fOgqswERFpjfeBRMUHg6WI
iIiIiIiIiIiIiIioSFi1ahWSk5PRq1cvNG3a1NDV0cnz589x9+5dAIC7uzvKly+vstzFixcBANbW
1vjoo49UlnFyckLz5s0BADdv3kRSUlIB1JiIiIioZGKwFBERERERERERERERERncmTNn4OfnBzs7
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
O3fKMAz/7lOl/z1w4IDuuOMOffrpp1ZFBgAAAAAAAAAAAAAAQB307dtXq1at0vHjx7V+/foyDU7S
/3aKat++vVq2bKk+ffroo48+OunOUpGRkeratWutMn311Vd66KGH5PP5/J/LysrS119/reXLl+uv
f/1rhY1aUkmD0x//+Mdy+dLS0pSWlqbPPvtM06ZNO2mGzZs365577il33OD+/fu1bNkyLVu2TMOG
DdPjjz/u351LkkJDQ9WnTx+tWLFCKSkpFc5deqyhVPLzVVxcrJCQkArHtGzZskyjVFFRkR588EF9
8cUXZcYXFBQoNzdXGRkZWrNmjb7//nu9/fbbJ13nqciyZqnSX6BmzZqpf//+5a5nZWVpwYIFMgxD
oaGhmjJlikaOHKmMjAw9/PDDSk9P14YNG/T5559X+hsSAAAAAAAAAAAAAAAAp44Tj8pbvXp1pc1S
iYmJkkp2l5Kk7du368iRI2revLl/7LFjx7R161b/+NDQ0Brn2bZtm5YuXapWrVrp2muv1ZlnninT
NPXDDz/o//2//6f8/Hw98cQT6t+/v1q0aFHu/oceesifuUePHpowYYLat2+vQ4cO6aOPPtIXX3yh
J598ssoM+/fv1x133KEjR47IMAxdeumluvDCCxUVFaUdO3Zozpw52rJli7766itNnz5dTz31VJn7
k5KStGLFCm3atEm5ubmKiIjwXyttSit15MgRbd26VQkJCWXmKO3j+fWvx4IFC/yNUn369NEVV1yh
du3ayeVy6fDhw9q6dat++OEH5eTknOyn+pRlWbPUL7/8IsMwdOaZZ5brVpNKdp4qKCiQYRi66aab
dPfdd0uSunXrplatWmnUqFGSpCVLltAsBQAAAAAAAAAAAAAA0AD07t1boaGhKioqKnOEXqnSxqPS
pqoOHTrI7XbL6/UqNTW1zFF0a9euVVFRUZnxNbV582Z1795dM2fOVNOmTf2f79Wrl04//XQ99NBD
OnbsmD7++ONyJ6d99913+uabbyRJQ4YM0YwZMxQW9r/Wm6FDh+r111/XrFmzqswwY8YMHTlyRJL0
4IMP6oorrvBf6969u0aMGKG7775bycnJWrp0qS699FINGTLEP6a0wan053Tw4MH+a+vXr1d+fr6a
Nm2qrl27atWqVUpJSSnTLHXo0CH/8YFJSUllspU2SvXs2VOvvfZamfVJ0oABA3Tdddfp8OHDVa7x
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
mmuuUefOnetpZQDqm9vtDthct9xyS5nG0VIFBQXatWuXdu3apcWLF2vUqFGaNm2aGjVqVOlcS5Ys
0ZNPPqn8/Pwynz9y5IjWrl2rtWvXau7cuXriiSc0cODAgK1Bkg4cOKBXXnkloHMCAE49brdb2rHD
7hgAAFiK+gcAcCpqIADAqQL5XiAAe1nWLJWcnCxJatKkiYYMGVLu+rFjx/TWW2/JMAxJ0oQJEzRi
xAhlZGTo+eefV1ZWlr7//nt99913Gjp0aL3lnDx5sr788ssKrxUWFsrj8cjj8eibb77RCy+8oEmT
Jmny5MkKCQmpct6jR4/q/vvv16JFi8p8Pi8vT16vV5s2bdKbb76pe++9V3fddVfA1gOgYTpw4IAk
KSYmRsOHD1efPn0UFxen4uJirV27VnPmzNH+/fu1ZMkSFRYW6oknnqhwnjVr1ujRRx9VcXGxQkJC
NGrUKJ133nmKiYmRx+PRRx99pOXLl+vw4cO699579e6776pdu3YBW8czzzyjY8eOKTo6WllZWTW6
9+GHH9aZZ55Z6fX62gkLAAAAAAAAAAAAABC8LGuW2rZtmwzDULdu3RQeHl7u+tKlS5WXlyfDMDR+
/Hg988wz/msdO3bUhAkTJEmLFi2q12apE0VHR6tLly5q27atIiMjlZeXp507d2rNmjUqLCxUfn6+
ZsyYofT0dL300kuVzlNQUKCbbrpJK1as8H+uW7du6tmzp/Lz87Vy5UplZmaqoKBATz/9tAoLC3XP
PfdYsUQAAZSamipJSkxMrPNcHTp00J133qkLLrhAoaGhZa716tVLo0aN0sSJE7Vr1y599tlnuvLK
K3XWWWeVm+ett95ScXGxJOlPf/qTrrrqKv+1Hj166De/+Y1eeOEFzZkzR/n5+ZozZ47+/Oc/1zm/
JH399df66quv1KJFC91www168cUXa3R/mzZt2G0PABqI1NRU6dZblThrlt1RAACwDPUPAOBU1EAA
gFMF8r1AAPayrFnK4/FIqvwcz++++87/+ve//32Za+eee67i4+O1a9cu/zeg+jJ48GCNGDFCQ4cO
1RlnnFHhmAMHDmj69OlauHChJGnBggUaMWKELr300grHv/jii/5GKZfLpeeff16jR4/2Xz9+/Lie
eeYZzZw5U1LJcYQDBw7UoEGDArgyAA3JyRqL3G637rnnHn9j5Zdffllhs9TatWslSVFRUWUapU50
yy23aM6cOZKkdevW1SH1/xw7dkzPPvusJOmPf/xjuaNVAQAAAAAAAAAAAACwQ9VnxwVQbm6uJKlZ
s2YVXv/pp58kSXFxcerRo0e56927d5dpmtqzZ0/9hZR022236frrr6+0UUoqORbr1VdfLXOc4Dvv
vFPh2IMHD+r//u///B9Pnz69TKOUJIWHh2vatGm6/PLLJUmmaeqpp56qyzIAOEC/fv38ryv73lhQ
UCBJatu2baXzNG3a1H/Gcun4unr11VeVmZmppKSkShtJAQAAAAAAAAAAAACwmmXNUqXHSB0/frzc
tUOHDumXX36RYRgaMGBAhfe3bNlSUsluJaeC0uMCS61fv77CcfPnz/c3inXs2FHXXXddpXNOmzZN
ISElvyQpKSmVzgkAUtnvp6XfO36tdDe/jIyMSufJycmR1+stM74u1q1bp/fee0+NGjXS1KlT6zwf
AAAAAAAAAAAAAACBYlmzVOmuJbt37y53rfSIOqnsTiknys/PlyQ1atQo8OFqqbSBS6q8ievTTz/1
vx43bpwMw6h0vrZt25bZreqTTz4JQEoAwWrVqlX+15XthnfllVdKkg4fPqwFCxZUOObNN98sN762
CgsL9cQTT6i4uFjXX3+9OnToUOu5/vGPf+jSSy/VoEGDNGzYME2YMEEzZsxQenp6nTICAAAAAAAA
AAAAAJzLsmapLl26yDRNrVq1SkeOHClzbfHixf7Xle0s5fF4JJVtULLbli1b/K/btWtX7rrP5yvT
zDBo0KCTzjl48GD/6xObyADgRMXFxXrrrbf8H48YMaLCcZdffrlGjRolSXrmmWf0+OOP69tvv9XG
jRu1bNky3XfffXr77bclSRMnTqz0e3B1/etf/9K2bdvUtm1b3XTTTXWaa+3atfJ4PCooKNDRo0e1
ZcsW/ec//9FVV12lWbNmyTTNOs0PAAAAAAAAAAAAAHCeMKsedP755+u7776Tz+fT/fffrxdeeEFN
mjTRokWL9Omnn8owDJ1++unq3r17hfevX79ehmHUaZeSQPJ4PJo1a5b/49JmhBNt375dxcXFkkqO
7evZs+dJ5+3Vq5f/9datWwOQFIBVEhISLHvWv//9b23YsEGSNGzYsEq/d4aGhurRRx/VOeeco9mz
Z2vhwoVauHBhmTH9+vXT73//+zo3Su3evdu/S9Wf//xnNW7cuFbztGrVSsOGDVOfPn3Utm1bhYWF
yePxaPny5VqyZIkKCwv1+uuvq7CwUHfeeWedMgMAAiMhIUGaN8/uGAAAWIr6BwBwKmogAMCprHwv
EED9sqxZaty4cXrllVd05MgRLVmyREuXLlWTJk10+PBhmaYpwzD0u9/9rsJ7165dK6/XK8Mw1Lt3
b6sil5OXl6fdu3dr2bJlmjlzpg4ePCipZNesSZMmlRu/fft2/+tWrVrJ5XKd9Blt27b1v/Z6vTp0
6NAptZsWgMpV52s8EFJSUvTKK69IkqKjozV16tQqx//yyy9asmSJtm3bVuH1devW6cMPP9QZZ5yh
1q1b1zrXk08+qfz8fA0fPrzMLnk10aNHD3300UcKCytbnrp166bzzz9fY8aM0aRJk5STk6O33npL
I0aMUNeuXWudGQAQGC6XS8rOtjsGAACWov4BAJyKGggAcCqr3gsEUP8sa5aKjo7W888/r1tvvVWF
hYXKz89Xfn6+//pZZ51V6ZFNH374of/12WefXe9ZS61cuVJjxoypcswFF1ygV199VU2bNi13LfuE
Pyy0atWqWs+MiYkpN0dNm6WKi4u1d+/eKse0adOmRnMCODmfzyepfv9Hafv27frTn/6koqIiNW7c
WE8//bSio6MrHb969Wrdc889ysnJ0Wmnnabbb79dAwYMUFRUlA4dOqRvv/1Wr732mj7//HOtXr1a
r776qjp16lTjXIsXL9bPP/+syMhI3XvvvbVeX5MmTaq83rNnT91///16+OGHZZqm5s2bp2nTptX6
eQCAwPD5fFKLFnLxl+UAAAeh/gEAnIoaCABwKiveCwRgDcuapSTpwgsv1IcffqiXX35ZK1euVE5O
jtq0aaNLL71UkydPLreTiCTl5uZq7ty5kqTw8HANGTLEysiVcrvdevLJJzV69OhKx+Tm5vpfV/cb
5q/HnThHde3fv1/9+/evcszHH39c7nOJiYmSSna0Sk9PrzBb6daCHo9HmZmZ5ca43W7Fx8dLktLT
0+X1esuNiY2NVVxcnCQpLS3NX1ROFB8fL7fbLUlKTU2tcA0JCQlyuVzy+XxKS0urcAxrYk1WrunQ
oUOSpJYtW9bLmrZu3aqnn35aR44cUUhIiG655ZYyjY+/XlNBQYGmTp2qnJwctWzZUrNnz1ZGRob2
7NmjPXv2SJK6du2qe++9V48//rgOHDighx9+WPfff3+F665sTUePHtWMGTMkSbfffrtiYmLKrWnX
rl3l5qvtr1NcXJwiIiKUm5urVatW8XuPNbEm1sSaToE1HTp0SJo+XS03bixZU3Ky4lJSStY0bpx8
LVqUX9PSpXLv2FGypltvrXhN8+bJlZ0tX4sWShs3ruI1/fdobG/HjkofMaL8mrKzlfDf4yE8SUnK
7Nev/Jq2b1f8F1+UrGn4cHkraBwO+jU10N975dYUBF9PrIk1saaGs6YNGzbo8An1r8yaqE8NY03/
/W9D+70XjF9PrIk1saaGtSav1yuNGyf39u32fy8PxvpkxZpSUxvk771g/HpiTayJNTWsNR06dEhR
UVFKSkoKmjVJwffrxJqCd02l8wWCpc1SUslC3nzzzWqPDwsL02effeZ/fbJdRwIpNjZWN954oyTJ
NE3l5ORox44dWrdunbxer+644w698847evrppyvcieXE3xDh4eHVembjxo0rnQOAc2VlZWnGjBny
/vdI0t///vfq27dvlfesX7/ev8Pd+PHj1apVK2VkZJQb17ZtW1144YVavHix0tLStHv3bp1++unV
zvbtt98qJydHERERioqK0meffSav16vDhw/7x/zyyy9lcoWHh+vgwYNq3769mjdvXu1nSVJoaKja
tWunLVu2aP/+/TW6FwAAAAAAAAAAAADgbIZpmqbdIRoaj8ejv/3tb5r33859t9ut+fPn68wzzywz
bubMmXr88cclSX379tVHH3100rnz8vLUuXNn/8effPKJevfuXa1cSUlJ8ng8at26tZYsWVLlWI7h
AwKvtCO2tLs1ULxer/7whz9ox3//VdL999+vcZX8q6MTvfXWW3r11VclSS+//LIGDx5c6dgFCxbo
6aefliQ9+eSTGjlyZLXzzZo1S6+//nq1x5/otddeU78K/uXTydxwww3auHGjXC6Xvvvuu1o9GwAQ
OKmpqdLMmf5//YoGiD8WAkCNUf+CAPUPAGqFGhgEqIEAUCv19V4gAOtZvrNUMIiLi9MLL7ygZs2a
6c033/TvMvXll18qNDTUPy4iIsL/uro7RP163IlzVFdISAjNUECQyMnJ0aRJk/yNUpMmTapWo5Sk
Mt+PioqKqhxbWFhY4X2nosLCQv+xfjExMTanAQAAAAAAAAAAAAA0JKdEs9T+/fuVlZWlnJwcNW3a
VNHR0WrdurXdsU5q6tSpmjdvno4ePaqtW7dq2bJlGnHC+dEtTjiz+uDBg9Wa88CBA2U+blHBudcA
nMHn8+mPf/yjNm/eLEmaOHGi/2jQ6jixaXL16tU655xzKh27atUq/+u2bdvWKOett96qW2+9tcox
ixcv1qOPPipJeuSRR3TZZZfV6BknWrp0qXJyciRJZ511Vq3nAQAAAAAAAAAAAAA4j23NUitXrtS/
/vUv/fDDD9q/f3+5661bt9bgwYN1/fXX6+yzz7Yh4ck1adJE/fr101dffSVJSk5OLtMs1alTJ//r
gwcPyufzyeVyVTlnRkaG/7Xb7VbLli0DnBpAQ1BQUKD77rvPv53nNddcozvuuKNGc5x99tlyuVzy
+Xx67733dMkll5Q55rPUihUr9PXXX0sq+d7btWvXcmP+8Ic/+BuqFi1aVC+71x05ckRbtmyp8li+
9evX65lnnpEkGYahsWPHBjwHAAAAAAAAAAAAACB4Wd4slZWVpfvuu09Lly6VJJmVnIucmZmphQsX
auHChRo5cqSeffZZRUdHWxm1WqKiovyvs7Ozy1zr1KmTQkJCVFxcLNM0tWHDBiUlJVU537p16/yv
u3TpEtiwAOpVIM8nfuCBB/Tjjz9Kkvr376/Ro0dr27ZtlY5v1KiR4uPjy3yuWbNmuvHGG/Xaa6/p
2LFjmjhxosaPH68BAwaoWbNmysrK0jfffKMPPvhAxcXFkkqO+QsJCQnYOmoiJydHt912m7p06aLz
zz9f3bp1U6tWrRQaGiqPx6Ply5fr448/VkFBgSTpuuuuU/fu3W3JCgAoKzExUZo1y+4YAABYivoH
AHAqaiAAwKkC+V4gAHtZ2iyVlZWlMWPGaMeOHeWapBo3bqyIiAjl5uYqPz9f0v8aqT7//HNt27ZN
H3zwwSnXMJWZmel/7Xa7y1xzuVw666yzlJycLEn64YcfTtosVdocIUlDhgwJXFAADUrpjnWS9PPP
P+vqq6+ucvxpp52mxYsXl/v8TTfdpMOHD2vu3LnKzc3V7NmzNXv27HLjwsLCdOedd+qSSy6pe/g6
2rp1q7Zu3Vrp9dDQUN1000265ZZbLEwFAAAAAAAAAAAAAAgGljZLTZo0Sdu3b5dhGJKkYcOGacKE
Cerfv79atWrlH3fo0CH9/PPP+s9//qMvv/xSkrRjxw7dddddmjNnjpWRq5SVleU/lkpShcdbXXTR
Rf5mqXnz5mnSpEmVzpeRkaHvvvuuzL0AGg6v1yupfOOknQzD0L333qtLLrlECxcu1Jo1a+TxeOTz
+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
JJNzmJz367py9cyc+9z3924gHxy+nAMAdkUGAgDsKhgMhu4uBSCymd595HA4dP/998vj8ei5557T
4MGD1b59ezVp0kT16tVTkyZN1L59ew0ePFjPPfecPB6Pfve73530DlQAcCbwer3ypqdbXQYAAKYj
AwEAdkT+AQDsigwEANiV1+uV1+u1ugwAYRBt1cKNGjXS7bffrttvv92qEgAAAAAAAAAAAAAAAADY
CM+1AwAAAAAAAAAAAAAAAGALNEsBAAAAAAAAAAAAAAAAsAWapQAAAAAAAAAAAAAAAADYAs1SAAAA
AAAAAAAAAAAAAGzBYRiGEa7J2rZt+38TOxzasWNHpedq4pfz4v+kpKTI7/fL7XbL4/FYXQ5gTw6H
1RWgJsIXiQBgP2RgZCMDAaB6yL/IRv4BQPWRgZGNDAQAADYXHc7JDMOQw+FQZf1XJzsHAAAAAAAA
AAAAAAAAALUtrM1Skk7aDBUpjVI7d+7UN998o2+//VYbNmzQnj17VFhYqEaNGumss87Seeedpxtu
uEH9+/ev8txr167V9OnTtWrVKv3000+SpLPOOkv9+/fXzTffrN69e4d5NwDMEggEpI4d5dq61epS
AAAwFRkIALAj8g8AYFdkIADArgKBgCTJ5XJZWgeAmgtrs9SuXbuqde5MsW7dOj322GPKzMys9Hwg
EFAgENCGDRs0depU9e/fX3/729/UunXrU85dVFSkv/zlL3r33XcrNI1t2rRJmzZt0kcffaS7775b
48aNU/369cOyJwDm8fl80qBBck2ebHUpAACYigwEANgR+QcAsCsyEABgVz6fTxLNUkBdEPY7S0Wy
LVu2VGiU6tixo7p27ar4+Hjt379fa9asCd0RatWqVbruuuv02WefKTEx8aRzP/LII5o5c2bodWJi
os477zxJUkZGhnw+nwzD0Ntvv62DBw9qwoQJYd4dAAAAAAAAAAAAAAAAYG80S1Wiffv2uuWWW3Tj
jTfqrLPOKneurKxMM2bM0Lhx43T48GH5/X6NGjVKc+bMkcPhqHS+adOmhRqloqKi9PTTT+vuu+9W
VFRUaM533nlH//M//6OysjJNmzZNF1xwgYYNG1a7GwUAAAAAAAAAAAAAAABsJMqshXbv3q3du3er
oKCgWtfv378/NEdtadWqlV5++WV98803euCBByo0SklHm52GDx+u1157LfReRkaGvv7660rnPHLk
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
sKHJlQEAAAAAAAAAAAAAAAB1n2nNUp9++mnoeNy4cbr33ntPeY3D4dDdd98twzA0fvx4SdLMmTMj
tlnqZAKBgCZOnKj58+frvffeU6dOnao9V1lZmfbs2XPSMWeffXa15wcAAAAAAAAAAAAAAAAikWnN
UqtWrZIkJSQknFaj1PHuvvtuTZo0STk5OVq5cmVtlFerGjVqpGuuuUaXXnqpevToobPOOkvR0dHa
u3evMjIyNGXKFC1fvlyStGXLFt12222aN2+emjdvXq31cnNz1bdv35OOWbBgQYX3jt0uMBAIyOfz
VTjvdDqVlJQk6ehdsnJyciqMcblcSkxMlCT5fD4FAoEKYxISEuR2uyUdvVVhZc91TUxMlMvlkiRl
ZWVVuoekpCQ5nU4Fg8HQLQ/ZE3uyck95eXlS9+7KGjkydAvqQMeO8g0aVHFP+flKmjHj6J5SUpST
mlpxT1u2KHHp0qN7SktToJImyoQ1a+T2eI7uKT1dwfj4intaskSurVuP7mnkyMr3NGOGnPn5CsbH
y5ueXukYW+zpF9/zSPm1V25PdeT3E3tiT+wpsvZ0fAZK5FNE7ilCf+1V2FMd+P3EntgTe4qcPZWU
lKjguPwrtyfyKTL29N//jbRfe3Xx9xN7Yk/sKbL2dMwZ8bO8LuaTGXvKyorIX3t18fcTe2JP7Cmy
9pSXl6emTZtKUp3Zk1T3vk/sqe7u6fg/i9aUac1Sfr9fDodD/fr1q/K1x67717/+Vek360zWqlUr
ZWRkVPpovbPPPltnn322Bg8erClTpuixxx6TYRjasWOHnnvuOb300ksWVAwAAAAAAAAAAAAAAADU
TQ7DMAwzFurUqZOKioo0YsQIvfDCC1W+fuzYsfr4448VExOjLVu21EKFJzdhwgS9/PLLkqT+/ftr
5syZYV/j+eef12uvvSZJqlevnjwej1q2bHna16ekpMjv96tVq1aaP3/+ScfyGD4g/LKysqQ33gj9
yx9EIHMiEQDqHDKwDiADAaDKyL86gPwDgGohA+sAMhAAquXY3XGO3ekGQOQy7c5S8fHxysnJ0bZt
26p1/fbt20Pz1FW///3v9dZbbykYDKq0tFTffPONbrrppirPExUVRTMUYIHk5GSJDwgAADZEBgIA
7Ij8AwDYFRkIALArmqSAuiPKrIWSkpJkGIZWr16tHTt2VOnaHTt26Pvvv5fD4Qg9P7Euatiwofr0
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
ubn64osvtGzZMgUCAT300EP64IMP1KVLl2rVDADAmSAuLi50fPDgwZOOPf781q1baZYCAAAAAACw
MZqlAAAAUOfce++96t69u7p3767mzZtrz549uu6666o0h8/n00cffSRJ6t69u9588005nU5J0rnn
nqtLLrlE9913n7Kzs/Xhhx/quuuuU9u2batc6xdffBFqlOrXr59effVV1a9fP3Q+NTVVF1xwgR58
8EH99NNPmjx5sh599NEK86Smpmr+/PknXGfQoEH66quv9PDDD6u4uFhvvfWWXnzxxSrXCwDAmeL4
uy1mZGToiiuuqHTcvn375PP5Qq/9fn+t1wYAAAAAAIAzV/WfFQIAAACcoUaOHKmLLrpIzZs3r/Yc
//znP1VaWipJeuSRR0KNUsc4nU498sgjkqTS0lJ9/PHH1Vpn3rx5oeNHH320XKPUMf369Qs9WnDW
rFnlHjt0TL169U651qWXXqrExERJUmZmZrXqBQDgTNG7d281adJEkjR37lzt2LGj0nFvvPFGKNMl
6dChQ6bUBwAAAAAAgDOT5c1SGzdu1JdffqlZs2bpk08+sbocAKi2xMREJS5ZYnUZAIAwMAxDX3/9
tSSpffv26tmzZ6XjevbsGWo++vrrr2UYRpXX2rBhgySpbdu2ateu3QnH9e/fX5JUUlKib775psrr
HNOwYUNJUlFRUbXn+CUyEABgBafTqbvuukvS0Qao++67T/Pnz1cgEFBxcbE2bdqkp556SrNmzSrX
jBwMBsOyPvkHALArMhAAYFeJiYmhz4MBRDZLHsO3a9cuvf766/rXv/6l/fv3lzs3bNiwcq9//vln
PfXUUzIMQ8nJybr//vvNLBUATpvL5ZK2brW6DABAGOzevVs///yzJOm888476djzzjtPPp9Pubm5
2rNnj1q3bl2ltQKBgCSpWbNmJx13/PmMjAxde+21VVpHkrZv3y6v1yvpaBNYuJCBAACr3Hrrrdq+
fbtmz56tvXv36k9/+lOFMa1bt9bVV1+td955R9L/NQ7XFPkHALArMhAAYFcul8vqEgCEiel3lpo9
e7auuOIKffTRRyooKJBhGKGvyrRs2VJ79+7V/Pnz9corr6iwsNDkigEAAGA327ZtCx2fqqno+PPH
X3e64uLiJEkHDx486bjjz1dlnWAwqB07dmjKlCkaOXJk6DFEI0aMqHKtAACcaRwOh8aNG6fnn39e
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
UlLCMmdJSUnouHXr1icc16ZNm0qvOeabb75RWVmZJOnaa6894TyDBw+WdPRxgt98802V662JrKws
ZY0caeqaAACcCUaOJAMBAPZD/gEA7IoMBADYVVZWlrKysqwuA0AYhPXOUg899FC1zgGw3pIlS7R8
+XI1bdpUf/zjH8M2r8vlUtOmTVVQUKDdu3efcNyuXbtCx5U973ft2rWh4/POO++E8xzf5JWVlaUb
b7yxihUDAAAAAAAAAAAAAIC6KuzNUq+88ookqXfv3hXOATgzHThwQC+99JIk6fe//33Yn7d74403
6r333tPGjRu1cuVKDRgwoMKYt99+W5JUr149XX/99RXOb9u2TZLUqFGjkz5ar0WLFmrYsKEKCwtD
1wAAAAAAAAAAAAAAAEhhbpaSpAkTJsjhcOjOO+/UZZddFu7pAdSCiRMnKi8vT8nJyRoyZEjY57/r
rru0ceNGrVq1Sg8//LDS09PVt29fuVwu7d69WzNnzlRGRobq1aunsWPHqn379hXmyM3NlSS1atXq
lOslJCRo69atysnJCfdWAAAAAAAAAAAAAABABAt7sxSAyJKZmanZs2erXr16evzxx+VwOMK+Rmxs
rF555RXNnz9f7733nqZMmaIpU6aUG3PZZZfpzjvv1LnnnlvpHIWFhZKkuLi401pPkg4fPlzDygEA
AAAAAAAAAAAAQF1CsxRgY8XFxXr22WdlGIZuueUWde7cudbWWr9+vRYuXKjdu3dXev77779XfHy8
EhMT1ahRowrni4qKJEn169c/5VoNGjSQJB05cqQGFQMAAAAAAAAAAAAAgLqGZinAxt59911t375d
brdb9913X62ts3TpUj399NMqKirSOeeco5EjR6pPnz5q2LCh/H6/lixZorffflufffaZMjMz9frr
r6tly5bl5mjQoIGCwaCKi4tPud6xxqqYmJha2c+JJCUlSTNmmLomAABnghkzkvSqyEAAgL2QfwAA
uyIDAQB2lZSUZHUJAMIkyuoCAFhj+/btev/99yVJjzzySOjRdeGWl5enZ555RkVFRerYsaPeffdd
XXrppWratKmio6PVpk0b/b//9//0yiuvyOFwaNu2bXrhhRcqzNOwYUNJ0qFDh0655rHH79XWnk7E
6XTKmZ9v6poAAJwJ8vPJQACA/ZB/AAC7IgMBAHbldDrldDqtLgNAGHBnKcCmpk6dquLiYrVu3VrB
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
lzfffJMDBw6QkZFBfHw8ixcvplevXqSkpJgrneVVWUUUlhIRuUFatDjK0RYt8roYIiIiuU5toIiI
3I7U/omIyO1KbaCISMFQ0II2V2Jswefl5cXDDz+cZ+U4evQoR48ezbXv8/LyMh9nZGRc9XjjmKyf
y03+/v6MHTuWwMBAAJYuXUqXLl1o0KABLVq0YOTIkZw9e5YBAwZQqFAhAHx9ffOkrCIKS4mI3CCV
KsUTX6lSXhdDREQk16kNFBGR25HaPxERuV2pDRQRKRgKWtDmcnbt2sWxY8eAzG3e/P3986ws8fHx
5taGuSFrkCglJeWqxxvH5GUA6c477+S7776jU6dOBAUFZXvvrrvuYty4cTz//PPmCmaFCxfOi2KK
YM/rAoiIiIiIiIiIiIiIiIiIiMiNUxCDNjlZvHix+fjRRx/Nw5LkPi8vLwICAkhISCAmJuaKx54/
f978bxgcHJwbxbusYsWK8eqrr/Lqq68SGxtLUlISQUFBZtAtOjraXMGsYsWKeVlUuY1pZSkRERER
EREREREREREREZFbiBG0AQpU0CarjIwMVqxYAUBQUBANGjTI4xLlPiNMdPz4cRwOx2WPO3LkiPm4
QoUKN7tY16xYsWKEhoZmWxFs79695uO77747L4olorCUiIiIiIiIiIiIiIiIiIjIraagB202bNhA
QkICAK1bt8Zms+VxiXJfrVq1gMyVv/bt23fZ47Zt22Y+vueee252sf6VVatWmY8ffvjhPCyJ3M4U
lhIREREREREREREREREREbnFFPSgze28BZ+hcePG5uMFCxbkeIzL5TL/XRUqVIi6devmStn+iUOH
DrF8+XIA7rvvPkJDQ/O4RHK7UlhKROQGCQsLJjgsLK+LISIikuvUBoqIyO1I7Z+IiNyu1AaKiBQc
BTloEx8fz2+//QZA1apVqVq1ah6XKHOLwtzeprB69erce++9AMyfP5+dO3decsw333zD4cOHAXj6
6aex2+3Z3g8LC6Nu3brUrVuXt99++6aW90pbPp4+fZqXX34Zp9OJp6cnr7766k0ti8iV2K9+iIiI
XIutW0tSkq15XQwREZFcpzZQRERuR2r/RETkdqU2UESk4DCCNn/99Rfz58+nbdu21KxZM9sx1xK0
6du3LwBt27a96WEbw6+//mpuHfjII4/kyndeTcmSJfPke19++WVefPFF0tLSGDhwID169KBu3bqk
paXx66+/MnfuXADKlStHt27d/vH3LFy4MNvz/fv3m4//+OMPTp06ZT4vW7asuXJZVu+99x7nzp2j
WbNm3HXXXfj7+xMfH8/mzZv5+eefSUpKwmq18vrrr1O+fPl/XFaRf0thKRERERERERERERERERER
kVtQQQraZGWsdmWz2WjTps0/LtetoFq1arz33nu8+eabJCUlMXHixEuOKVeuHOPHj8fPz+8ff887
77xz2fdmzpyZ7Xnbtm1z/G/odrsJDw8nPDw8x/MEBATwn//8h5YtW/7jcorcCApLiYjcIJ06RRBB
J+6YPTuviyIiIpKr1AaKiMjtSO2fiIjcrtQGiogULAUpaGM4cuQIe/bsAaB+/foEBQX943LdSBER
EQDccccduf7djRo14ocffuD7779n48aNxMTE4OHhQdmyZWnevDmdO3fG29s718t1seeff57Q0FD+
+usvoqOjSUhIoFChQpQpU4bGjRvzxBNPUKRIkbwupojCUiIiN0rRoqmkUjSviyEiIpLr1AaKiMjt
SO2fiIjcrtQGiogUPAUlaGMwVpUCePTRR/OwJNmlpqbm6feXKlWKYcOGMWzYsOv6XN26dQkLC7vq
cddyzNXUqlXrqquGieQHCkuJiIiIiIiIiIiIiIiIiIjcwgpC0MYwYMAABgwYcMPOJyJyMWteF0BE
RERERERERERERERERERERCQ3KCwlIiIiIiIiIiIiIiIiIiIiIiK3BYWlRERERERERERERERERERE
RETktmDP6wKIiNwqVqwI5X1W5HUxREREcp3aQBERuR2p/RMRkduV2kAREbldhYaG5nURROQGsbjd
bndeF0JujDp16nD69GlKlizJ1q1b87o48g9ZLHldAvk33Og/YIGmJlEkz6j9K/jUBhZwagNF8oza
wIJN7V8Bp/ZPJE+pDSzY1AYWcGoDRURE5DanbfhEREREREREREREREREREREROS2oLCUiMgN0qfP
Dnb06ZPXxRAREcl1agNFROR2pPZPRERuV2oDRUTkdrVjxw527NiR18UQkRtAYSkRERERERERERER
EREREREREbktKCwlIiIiIiIiIiIiIiIiIiIiIiK3BXteF+B2k56ezoIFC5g/fz4RERHExsYSEBBA
2bJleeSRR+jUqROBgYF5XUwRERERERERERERERERERERkVuOwlK5KDIykv79+7N79+5sr8fExBAT
E8PWrVuZPHkyH3/8Mc2bN8+jUoqIiIiIiIiIiIiIiIiIiIiI3JosbrfbndeFuB2cPHmSdu3acfr0
aQAsFgv169cnNDSUs2fPsmHDBlJTUwHw8PDgm2++oWHDhtf1HXXq1OH06dOULFmSrVu33vA6SO6w
WPK6BPJPWK0nKVmyHgBbTp8mxOXK4xLJP6ImUSTPqP0ruNQG3iLUBorkGbWBBZPav1uE2j+RPKU2
sGBSG3iLUBsoInLdTp48Sb16/78N3LKFkJCQPC6RiPwbWlkqlwwcONAMSpUpU4bp06dz9913m+/H
xcXRr18/Nm7cSEZGBn369OH3338nICAgr4osIiIiIiIiIiIiIiIiIiIiInJLseZ1AW4Hq1at4s8/
/wTA09OTGTNmZAtKAQQGBvLVV18RGhoKQHx8PJMmTcr1soqIiIiIiIiIiIiIiIiIiIiI3KoUlsoF
M2bMMB937NiRO++8M8fjfH19GT58uPn8m2++weFw3OziiYiIiIiIiIiIiIiIiIiIiIjcFhSWusmS
kpL47bffzOedOnW64vGPPPIIfn5+QObqUps2bbqp5RMRERERERERERERERERERERuV0oLHWThYWF
kZaWBmSuHFWrVq0rHu/t7U2dOnXM51mDViIiIiIiIiIiIiIiIiIiIiIi8s8pLHWTHThwwHxcrVo1
7Hb7VT9To0YN83FkZORNKZeIiIiIiIiIiIiIiIiIiIiIyO3m6skd+VcOHjxoPi5Tpsw1fSYkJMR8
rLCUiIiIiIiIiIiIiIiIiEjBZ7HkdQnkn7JaoWTJ//+kbFlwufK0PPIPud15XQLJJxSWusnOnTtn
Pi5evPg1faZEiRLm4/j4+Ov+TpfLxcmTJ694TNZAloiIiIiIiIiIiIiIiIiIiIjI7UBhqZssKSnJ
fOzt7X1Nn8l6XNbPX01sbCwAMTEx1KtX74rHBgUFXfKah4cHAG63G4fDccn7FovF3EbQ5XLhdDov
OcZqtWKz2QBwOp24ckjU2mw2rNbMHSAdDgfuHNKbdrsdy/+PVmdkZORYB6O813JMQapTcHBmMtnH
J+djkpI8/v93uvH2vrROLpeFlBT7/z+fC0/PS+vkcFhJS8usk5eXE7v90jqlp9vIyMisk4+PA6v1
0jqlptpxOjPr5OeXc3lTUjxwuW6HOrmxWHwAaFW+PJ7///+7bpsNRw7/37e4XNhTUjLr5+GB09Pz
kmOsDge2tDQAnF5euHLYxtOWno71//89OXx8cFsv3V3VnpqK5f//bWf4+eVYJ4+UFIxKZfj45HzM
7VCnmjWz1ykf/kYYbqXfPdVJdQKoWDE//JZnd2u0T7lRJ2e2NtCC2qcCWad77snXvxFw6/3uqU6q
k6Fixb+PUftUkOrkwmKx4O3tbbZ/Wal9KiB1qlMns075+DciW3lvkd891Ul1MuqUtQ3MLKPap4JR
p8z/AbQuUwby+rf8VmyfcqNONWvm+9+IS+p0C/zuqU6qk8ViITg4P/yW34rtU27UKXMuMDU1lUeL
F8ea17/l3ILtU27UKctcYH78jYBb73fvRtbJYrFQokQJli5dmuOx18PizqnUcsN06tSJ3377DYCh
Q4fyyiuvXPUzGzdupHPnzkDmH9mxY8eu6bvKli2b4x+qiIiIiIiIiIiIiIiIiIiIiEhBVrJkSbZu
3fqvz6OVpW4yLy8v8/HlknAXS09PNx9f62pUxnelpaVhtVoJDAy84rHWHBKYIiIiIiIiIiIiIiIi
IiIiIiL5UYkSJW7IeRSWusn8siz7lpqaek2fyXqc32WWjctJZGTktRdMRERERERERERERERERERE
ROQ2o+WFbrKiRYuaj8+cOXNNn4mJiTEfFylS5EYXSURERERERERERERERERERETktqSw1E1WqVIl
8/GJEyeu6TMnT540H1euXPmGl0lERERERERERERERERERERE5HaksNRNVqVKFfPxvn37cDgcV/3M
rl27zMcKS4mIiIiIiIiIiIiIiIiIiIiI3BgKS91kdevWxcvLC4Dk5GR27NhxxePT0tLYtm2b+fzB
Bx+8qeUTEREREREREREREREREREREbldKCx1k/n5+WULPM2ePfuKxy9dupQLFy4AUKRIEerXr39T
yyciIiIiIiIiIiIiIiIiIiIicrtQWCoXPPfcc+bjn376iYiIiByPS0lJ4cMPPzSfd+vWDbvdftPL
JyIiIiIiIiIiIiIiIiIiIiJyO1BYKhe0aNGC+++/H8jcZu+5555jz5492Y6Ji4vjhRde4MiRI0Dm
qlL9+/fP7aKKiIiIiIiIiIiIiIiIiIiIiNyyLG63253XhbgdnDx5krZt2xIdHQ2AxWKhfv36lC9f
nrNnz7JhwwZSUlIAsNvtfPPNNzz00EN5WWQRERERERERERERERERERERkVuKwlK5KDIykv79+7N7
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
aBChoaG4XC5cLpe5Dd+jjz7KqFGjeOSRR/D39ychIYGlS5cyf/588w5i42LDOHe7du3o27cvo0aN
okePHmZQ6nomikVERG4GIzDVu3dvvLy8zMDUhAkTOHXqlDmBnJWHhwdVq1Y1n0+YMIGFCxcCf08g
rF69mmnTphEdHU2xYsWoV69etnNooF9ERPKTiwNT/fr1o3nz5gDmlnxG0MmYFDceQ2Yo2M/PD4Aj
R44wYsQIjh49agalFixYwCeffMKuXbuwWCzUq1cPDw8P87tFRKRgmDhxIosWLSI6OppZs2bx/fff
A3+3DcZveuPGjenevTsWi4X4+HgWL17MyJEjOXXqVLa+kMPhwGKxEBcXx8SJEzl69CglS5bkgQce
AP5ebVf9JxERkfzLGDs9deoU27ZtA6B06dL069ePkJCQS8ZWnU4noaGhfP755zRs2BCbzYbb7eaj
jz5i7dq12VYuNvqeQ4YM4bnnngMyt98dOHBgblVPbjEW98V/kSIicku6nruuunbtyvr16/Hx8WHh
woVUq1btktU0sj7fu3cvkyZNYunSpaSmphIaGsrMmTOpXLnyZb9Xd4GJiEh+dfz4cb7//numTp1K
WloaxYoVo3Xr1gwZMiTbClPGP5OTk3n66afZtm0bNpsNT09PunTpQqFChTh//jzz58/nwoULpKen
07VrV3PrWRERkfwsa3v3559/MnnyZFatWgVAtWrVeO655+jevTvwd//O+Oe8efMYOnQoDocDgEKF
CnHHHXcAmdvS2mw2nE4nTz75JJ9++mm27xMRkfzP7Xazdu1apk+fzpo1awC4++67ef755+nSpQtA
thUFd+7cyZQpU1i4cCFutxu73U7ZsmUZPXo0ZcuWpWLFirjdbqKiopgwYQLr1q0jKiqKxo0bM378
eIoVK5ZndRUREZHr98knnzB27FgAPvzwQ7p06XLV+cJTp07x/PPPs3v3bgDKlCnD999/T4UKFS45
FmD+/Pk8/vjjgHaukX9GfzEiIre4kydPcvbsWWrUqHHVgJLb7ebIkSOEh4cDcOedd1K+fPlsgxuG
rIPYd955J8899xx79uwhIiKCo0eP8u677/L5559f8jmDglIiIpJflS1b1hzgnzp1KrGxsSxbtgzg
ksCUy+XC19eX//73v7z++uvs2LGDlJQUpk+fbk4EG1q1amUGpRQaFhGR/O5qW/LNnDkTyHlLvtat
W/P2228zcuRInE4niYmJ7Ny5k/T0dCBzAr1ly5ZmUCqnPqeIiORfFouFxo0b4+npaQandu/ebW49
3qVLF2w2mzlxWbNmTXr27Im/vz/ff/89DoeDw4cP06tXL/z9/alWrRpJSUlERkaSkJAAQEBAACNG
jFBQSkREpAAy2nMAT09P4PLzgkZ/slSpUkycOJEnn3ySc+fOkZCQQHh4OBUqVDD7m1ar1ew/GkEp
p9OpoJT8IxqdFxG5hUVFRdGyZUvatGlDWFhYtmUqc2KxWEhPT+f8+fMA5l3A1zKZW7du3WxLXR45
coS4uLh/WQMREZG8YQSm+vTpY27Jt2zZMsaPH59tSz6jjaxRowbjxo2jQYMG5mtGUKpMmTJ07dqV
L7/8EshsXxWUEhGRgsC4SSanLfmMwFROW/J5e3vz/PPPM2PGDKpUqUJAQIAZlKpbty79+/dn+vTp
QGa7qKCUiEjBY7VaadCgAf369aNJkyYAZmDK2JLPbreb44u1a9emb9++vPHGG+aEZnJyMmfPnmXD
hg3s3LmThIQE7HY7xYoVY+bMmdSoUeOS7XpEREQk/4uPjzcfG/29K7XpRgiqcuXKdOnSBbvdTmJi
IgsXLjTfv/h8l3sucq0UsRMRuUU5nU6ee+4584KkY8eOzJ49m3r16l1xNYuAgAACAgI4e/YscXFx
pKam4u3tfcXvMu42btWqFXXq1GHr1q3s37+fXbt20axZsxtdNRERkX/FaAezbveT02vXs8KU1Wql
SpUq/PTTTyxcuJDDhw+TkJBA2bJlqV69OnXr1gW0JLSIiBQsF2+vl9MKU7NmzQL+XmHKuMvX7XbT
tGlTatasSVxcHCdPnsTHx4c77riDgIAAQHcAi4gUdEZgypDTClNGYMput1OxYkX69OlDvXr1+Oab
b9i+fTsHDx7E7XaTkZFBpUqVuP/++3nuuee4++67tSKviIhIAWOMlRYuXNh8bfXq1bRq1eqqc41G
6Omee+4xbzbVogxyM2k0QkTkFmWz2fjss8/o0qULZ86cISMjg06dOl0xMOV2u3G73fj4+ACZW/jN
mTOHHj16XDGZbUwq+/r6EhwcbL6enJx8E2omIiLyz2Rdrhng6NGjOBwOAgICsNlsBAYGmm2aMdF7
PYEp4zPt2rW77PdrQlhERPILo11MS0sjKSmJtWvXkpGRQXJyMnfccQfVqlUjMDAQIFsI6uLA1N69
e7NtyWez2bKFkIOCgggKCqJKlSrZvt/tdusOYBGRW8C1Bqayhmlr165N9erVcbvd7N+/n6SkJDw9
PalWrRo2mw0vL69sK/mKiIhIwWCMrbZq1Yoff/yRpKQk/vrrL+Li4ihduvQVt2A3xlhr1apFoUKF
SExMJCYmhoyMDDw8PHKzGnKb0Ei9iMgtyul0Uq1aNX766SeeeOIJ4uPjrxqYslgslCpVivbt2zNh
wgRcLhe///47jz32GCVKlMi22sbFjDvEfH19zTuPfX19c6u6IiIiV2S0eSdPnmTFihUsX76c3bt3
k5ycjL+/PyEhIbRt25bWrVtTvnx5bDab2bZda2Dq4o7+xe2mBvpFRCS/MAaojx49yhdffMGff/7J
nj17zPcLFSpEQEAAgwYNol69elStWhWbzXbZwJSxJR/8vcLU1VYDuVzfUkRE8t71rIhrhJqMwJTF
YmHNmjXs3r2br776CrfbTdeuXbOFaSFziz6r1UqNGjUuOZ9xHhERESmYQkJCKFu2LPv27ePw4cOM
GDGCr7/+Olu/8mLGWOqFCxfM64FixYpht9u12qTcFPqLEhG5RRkXHJUrV2bevHkUKVIEwAxMbdmy
xRzAvljdunUpW7YsAMuXL2fKlClA5iBFTnsKu91ucwAlOTnZPGfRokVvRtVERESui9PpxGq1EhkZ
Sc+ePRkzZgzr1q3j7NmzJCcnExMTw/bt2xk9ejSvvfYaM2fONNs2h8MB/L0lX58+ffDy8jIDU+PH
j+fUqVM5tpEa3BcRkfzI5XJhs9nYv38/3bt3Z9asWezZsyfbwHNiYiInTpxg1KhRvP/++6xfvx74
u59psVi4//776devH82bNwcwA1Nff/01wGX7myIikr9l3SJ1xowZbN261Xwvp3FBo99jBKb69u1L
kyZNANizZw8zZszgu+++M48x2obLTXiqHyUiIpK/Ze3nXa7PV6FCBZ577jnz+Zo1axgxYoR5w6kx
5mrIuqLkxo0buXDhAgDNmjXDYrEoKCU3hVaWEhG5hV0cmLrWFaaaNWtGkyZNzEHuadOm4evry/Dh
w80BCyPhnfWzy5cv59dffwWgdevW1KpVK3crLCIicpGsE8KdO3fmzJkzWK1WAgMDadWqFV5eXhw6
dIgTJ05w6NAhNmzYwJEjRzhz5gwvv/wydrvdbPOuZ0s+ERGR/Mjov0VGRtKxY0fOnj2Ln58fZcqU
oU+fPvj5+eHh4cGCBQvYuXMnhw4dYs2aNURHR3Pu3Dkef/xx8w5gIzBluNwKU2obRUQKFuN3vlev
XixdupT27dvj6elJjRo1zJtEcvpdz7rClNPpJDU1lU2bNrFnzx6mT58OQNeuXa9p9UERERHJf4z2
O2sbbjw2rg+yrhDZvXt39u7dy6xZswCYO3cuLpeLMWPGmMFst9udLSj122+/mSHrqlWrct9992U7
v8iNpLCUiMgtLmtg6pdffqF9+/ZXDEwZ/3zvvfc4evSoeQfxuHHjOH/+PL169SIkJMQcODEuYH7/
/Xe+/vprLBYLPj4+NGjQQBcuIiKS56xWK8eOHaN3796cOXOG4OBgHnroIQYNGkSlSpWAzI7+jh07
mDJlCosXL+bkyZOMGzcOm83GSy+9lK09yykwtXz5cqxWK/3796dMmTJ5Uk8REZFrYbVaiYqKYujQ
oZw9e5bg4GDatGlDv379KF26tHlcs2bNmDNnDu+99x5xcXHs2LGDGTNm0LJlS3x8fIC/B6tzCkx9
8803JCcn06dPH/ULRUQKoOXLl7Nx40YAfvnlF9xuN7169aJmzZqXDUwZr1utVh588EGOHj3K3r17
SUhIYN++fQpMiYiIFGDG1nknT55k/fr1bNmyhbS0NAIDA3n88cepUqUKhQsXNhdZMK4TXnjhBRIS
Epg/fz5JSUl89913HDt2jLfffpuSJUtSpEgR89hVq1Yxa9Ysjhw5AsBDDz1khqXUr5SbQWEpEZHb
gBFsqlq1Kr/++iutW7fm3Llzlw1MORwO7HY7EydOpHfv3vzxxx8ATJ8+nQMHDnDvvffSqVMnPDw8
sFqtrFq1im+//Zb9+/fjcDho164dL774IqC0t4iI5K2kpCQ+++wzDh8+TOHChWnTpg0DBgygVKlS
OJ1Oc7u94sWL4+PjQ+HChTl//jxBQUE89dRTOZ4za2Dq888/JyYmhlmzZlGlShV69OiRm9UTERG5
ZsaA9c8//8zBgwex2+00bdqUgQMHUrJkSXN7PavVypkzZ9i1a5d5l29QUBDjxo0zg1JAtslyIzBl
tVpZsWIFu3fvpnbt2nlVVRER+ZeaNGnCwIEDmT17NgcPHmTu3LkA1xyYstlsdOnShZ9++olt27YB
mdu1zpgxA6vVytNPP62glIiISAGRdeX+/v37c+LECXObPIBZs2bx+OOP89hjj9G8eXOsVqsZrqpc
uTK9evXCarWa1xMbN27k+eefJzQ0lKZNm5KQkEBCQgK//PILqampOBwO2rRpwzvvvGN+v64b5Gaw
uHPaZFpERG4JxgXEhQsXiIuL4/fff6d06dKEhYUxfvx4bDYbaWlpeHh4XBKYMgY8EhMT6devH2vX
rs127qCgICwWC35+fhw9etR8vU2bNnz++efA30lzERGRvHL69Gm6devGvn37qF69Op9//jlly5Y1
J4wtFgsnTpxg2rRpLF68mOjoaIKDg/n5558pX778Fduy48eP88MPPzB+/Hjq1atndvhFRERy2/Xc
pNK+fXs2b95McHAwv/zyC6GhodnaxaioKKZMmcKSJUuIjo6mRIkSzJ07l9DQ0BzbxazbLWzevJn/
/e9/eHh48PPPP1932UREJO8ZY4MZGRlMnTqVH3/8kcOHDwPw5JNPmoEpuPxvfEZGBh4eHkyZMoXR
o0cTFBTE2bNnsVgslCtXjoEDB5o3oIiIiEj+ZbT1Bw8epFOnTkRHRwPZb55xu914eHhQunRp+vfv
T9euXQHMhRkADh8+zMyZM/niiy+ybdd3MZvNRtu2bZk4cSKgeUa5uRSWEhG5RRkXEIcPH2bMmDHs
2rXLXLoy64WIh4eHOYBxucAUwKhRo1i3bh0RERE5fl9oaCiNGjXivffeA7JfBImIiNxo19rOGIPz
Hh4eTJ8+naZNm/6rCeGLHTlyhC1bttCxY0dAHXgREcldKSkpl2yLdyW///67uZrH66+/Tu/evXE4
HNhstmtuF7N+T9bBceOfERERVKtWDVC/UESkoLqewNSVfPnll4wcOZI+ffpw4sQJFi9eDMCyZcuo
Xr36Ta2DiIiI3Bhnz55lyJAhrF27lqCgIKpUqULnzp2xWq2sXbuWXbt2ERkZidVqxdfXl//85z/m
6vsX9wlnz57Nzz//THh4OAkJCdm+p0mTJjz44IP069cvx8+K3Gj66xIRuQVlXRKzW7dunDx5EovF
QqlSpWjTpg0Oh4OkpCTWr19vXoxcbUu+t956ix07dvDnn3+ydOlSoqOjcTqd+Pn50bp1axo0aMBD
Dz0EZE4U6wJGRERutBMnTvDZZ5/x/vvvY7fbr6nDHBMTA4Cfnx+lS5c2X7/WCWGjPUxISCAgIADI
Phldvnx5ypcvD6gDLyIiuSsqKorWrVszYsQInnnmmctuiZRVYmIiLpcLl8tFYGAgkLl13vUGpaKi
okhJSaFy5cqX3GxjBKVcLpfaRRGRAspqteJyufDw8KBPnz4AZmDq4i354NLArtE3SklJAaBChQo0
bdqU5ORk+vbtS/Xq1bXyoIiISD5ntNVHjhxh7969+Pv788QTT9CvXz9KliwJQOvWrdm9ezdjxoxh
06ZNJCUlMXr0aAB69OiB3W7H6XSa/c5OnTrRrFkzYmNjCQsLIy4ujuDgYEqUKEGtWrUoWrQooHlG
yR36CxMRuQVZrVaOHDlCjx49OHnyJMHBwTRv3pzBgwdTpkwZ87jt27fz559/Mm7cOBITE3MMTNnt
dnPw+5577uGee+6hW7du5v7A6enpFC5c2DynEdQSERG5kU6cOMGTTz7JqVOnOH/+PJMmTbpiYMro
hEdFRQEQHBxMhQoVAMzXr2VFKavVSmpqKp07d6ZFixYMHz78sgP66sCLiEhuOXPmjDnp/J///Adv
b286dOhw2cCU8Vp8fDyQ2WaVKFECuL52MevKw0uWLGHFihVmOOri7zT6jCIiUjBdT2Dq4lUG7XY7
Z8+eZfbs2UDmzSsPPPAANWvWpHDhwuZYo4iIiORfRh/v119/JTo6mtq1a9O7d29Klixprtzv5+fH
fffdx/jx43n55ZfZuHEj6enp2QJTxg2pxjmDgoIoVqyY2Ze8mNvt1jyj5ApdjYqI3GLcbjdpaWl8
/vnnREVFYbFYaNCgAS+99BJlypTB4XCYW/DVqlWLPn36MGPGDHO1DCMwtWXLFnNQ5OLBCy8vL7y9
vfH29sbPzy/bexroEBGRm2HBggWcOnUKu93OggULzMF6IzB1MWM7ISMkfODAAcLCwgCueULY6MSH
h4dz5swZxo0bxy+//JIb1RUREbkiPz8/sw8HMGTIEH7++Wcg+7brBmOQu2LFinh7e+NwOFi9ejWQ
GUi+nnbx5MmTJCYm4na7+b//+z9z1RAREbn1XByY6ty5s3kTyty5c5k2bRqbNm0CMtua9PR0LBYL
586d47PPPuPYsWOEhoZy7733YrVazRsuNX4oIiJScMTGxgIwdOhQSpcubc4bZr1hpnTp0owfP56G
DRvidrvNwNRXX30FYK5GDJfeaHMxrTwpuUVXpCIitxiLxYLVamXr1q04HA58fHwYNGgQpUqVMu/s
ynqh4Xa7uf/++/n555+vGJjKKmuiW+luERHJDf3792fIkCFmMGrx4sVXDUwBFC9eHABPT08OHz5M
VFQUkydPvuqEsNvtNgfwFy9eTHR0NAC+vr43tZ4iIiJX43Q68fX1Zc2aNdx1113m61cLTAHmVgmQ
GQbevn07n3/+udnWXUu7OGfOHNavXw/AE088gY+Pz02rq4iI5L0rBabmzZvHJ598wrRp04DMvtmZ
M2cYO3YsS5YsweFwULVq1WwBXxEREcmfcupDZn3d2CLvcqHn4ODgqwamLp5vFMlLFvfl/upFRKTA
2r59O23btsVms1GvXj3mzJlzxeWtjUHwjRs30rNnTy5cuACAh4dHti35dNeXiIjkhayTte+//z6f
ffaZ+d6jjz7K1KlTAXLcki86Opr27dtz9OhRihYtykMPPcTmzZs5ffr0FSeEjWDx3LlzGTRoEADd
u3fnvffeu+n1FRERuRqjzbtw4QJPPvkke/fuNd8bP348HTp0ALK3acbjkSNHMmPGDJxOJxUrViQp
KemqQSnjHEuXLmXw4MGkpKTQunVrxowZQ2BgYI5b/4mIyK3FGBvMyMjgyy+/ZM6cOezbt898v2LF
ivj4+HDq1Cni4+NxuVwEBgby3XffUb169TwsuYiIiFyN0c4nJCRw4cIFdu/eTVBQEKVLl+bHH3/k
ww8/ZN26dVSqVOmq/b/o6GiGDBnCxo0bsVgseHp68sYbb9CjR49s3yWS1/RXKCJyC0pLSzMfe3t7
A1de3toYBL/vvvvo2bMndrsdLy+vq64wJSIikhtsNhtOpxOAESNGMHDgQPO9K60w5Xa78fHxoX79
+nh4eHDu3DkWL17M6dOnCQ4O5ueffyY0NBSHw5HjhPCGDRv44osvAKhQoQKNGzfOlfqKiIhcjdHm
+fv7M3fuXO68807zvcutMGW0bw888ABFihQB4PDhw2ZQatGiRVdsF//44w++/PJL0tLSCAwMpEmT
JgQGBmY7t4iI3LqyrjDVs2dPevfuTaNGjYDMduDQoUMcOHCAuLg4AAICAvjyyy+pXr36ZVeqEBER
kbzndDqxWq1ERkYyePBgOnXqxAsvvMBTTz1F8+bN2bBhAwCLFi3C5XJdtf93LStM6dpA8gOFpURE
CjjjgiLrhUVQUBA+Pj44nU7Cw8M5ceLENZ3L09OTBg0a4OnpSVpamhmYevrppwkLC9MFjIiI5Jl/
EpiyWCwULlyY559/Hk9PT/N9m83GBx98QIUKFXA6neZnnE7nJRPCxkodrVq1onXr1rlWXxERkav5
J4EpyGzTOnfuDPwdhqpZsyYhISHmilXp6enmZyEzQDxt2jT++usvXC4XjzzyCN26dTPPISIitwcj
MGW323nqqacYPXo0AwcOJCQkBA8PD9LT0ylbtiyPP/44P/74o7lavUK1IiIi+ZPL5cJms7F//346
dOjAqlWrOHr0KBaLhYyMDBISEti8eTMAYWFhJCQkmJ+7kosDUw6Hg/fee8/cMUDXBpIfaBs+EZF8
LOtdvFm3Qcj6PDExkUKFCmU7Pi4ujhYtWhATE0NgYCCffPIJzZs3v+Qcl9O1a1fWr1+Pl5dXtlWq
1qxZQ5UqVW5wLUVERK5d1rbsvffeY+LEieZ7OW3JZ7SNq1ev5tlnnzWPDQ4OZtSoUdSuXZtSpUpl
+4758+czY8YMdu7cSVpaWrbzaploERHJb9LT0/H09CQxMZFOnTqxa9cu872Lt+Rzu91mO/bKK6/w
/fffm8c2adKE7t278+CDD+Lv7w9Aamoqc+bM4auvvuLw4cOkp6fTsmVLpk+fDlzaTxURkdvDxdvv
REVFcf78eeLj46lSpQp+fn74+Phom1YREZEC4MSJEzz77LPs378fX19fAgICqF+/PgcOHODs2bOc
OnXKPLZnz568/fbbwLX1B6Ojoxk6dKi5OtXDDz9srjAlktcUlhIRyaeMydiDBw9SqVIl4O8LD+Of
u3fvpl27dnz44YfmALjxuf/7v//jm2++wel0Ur9+febMmZPtHDlxu904nU66devGnj17eOONN3j3
3XeJjY3Ndg4REZG8kNNA+wcffMCnn35q3uF8pcDU3LlzGTRokPnZwoULc+edd/LQQw9RsmRJTp06
xeHDh/nll1/MVThat25tbsWnCWEREclPsgZ409PTcblcnD17lqeeeooTJ06YKz5dLjCVlpbGm2++
yXfffWees2jRohQtWpTq1atz7tw5EhMT2b59u/l+27ZtmTJlCqB2UUREdDOJiIhIQZa1z/jxxx9T
rFgxWrVqRf/+/SlbtiwJCQns3r2biRMnsm7dOvNzAwcOZMSIEcC19QtjYmLo1q0b3t7eLFiwwPxu
BaolryksJSKSj23evJmOHTvSokULvvzySwBze7x9+/bRqVMn4uLiCAoK4ocffsi27cLSpUvp1auX
+fzpp5/mo48+AnK+eMl6YdKtWzfWrl3LunXrsFgsfPDBB5dMPIuIiOQmYxA+NjaWPXv2sHLlSlJT
UylVqhQzZ87k/PnzOJ1OnE5njoEpw+rVqxk4cCCpqamkp6ebIStPT09zyyGAEiVK0KJFC8aMGZPj
eURERPKS0aeLiopi4cKFrFu3jn379lGuXDnOnDnDsWPHsq0UnDUwdfHE9vvvv8+cOXM4c+aMueVt
1m1tAapVq0bjxo158803AbWLIiIiIiIiBVXW+UCHw0GnTp3YvHkz7dq1480338y2RbtxTL9+/Vi6
dKl5jusNTMXHx1OkSBHzfOpPSn6gsJSISD4VFRXF/fffD4CHhwdt27blk08+wW63Ex4eTqdOnTh/
/jzlypWjefPmDBw4kODg4GznyLo9kZ+fH127dmXkyJFA9ouXrIPlixcvpk+fPgD88ssv3Hfffeb5
dAEjIiJ5wWizIiMjef3114mMjCQmJuaS46xWq7lixpVWmAoPD+e7775j48aNHDp06JLzPPXUUzz0
0EPmpLJWzhARkfzE6L/t37+fAQMGcOjQIfOmGm9vb3x9fbNtk2C4ODAFmP3A1atXs337dr799lsy
MjJISkrC29ubgIAA2rdvT/369WnYsCGgdlFERERERKSgMvpzJ0+epGjRoiQkJNCsWTNzVf6qVatm
C1NlnT/s27cvixYtMs81YMAAXnvttWznvRqtSin5icJSIiL5lMvl4r///S+ff/65+VqXLl3o0aMH
HTt2JCEhgZCQENq1a0efPn0oUaKEeQFjXGycOnWK//3vf8ybNw8Ab29vHn30UT7++OMcL1o2bdrE
uHHj+O2332jcuDFTpkzB399fy2GKiEieyToh3KVLF6Kjo/Hz86Ns2bL07t0bT09P7HY78+fP58CB
A0RGRpqfvVJgKjU1FZfLxZo1a4iLiyMxMZGKFStSsmRJatWqdcn3i4iI5AdGOxYZGUnnzp2Jjo4m
KCiIGjVq8NJLL1GqVCnsdjt79uxh6dKlrF69Oltw6nJb8hnOnj1LcnIyZ86coXjx4nh7e1O8eHHz
fbWLIiIiIiIiBZPRn9yzZw8tW7bkiSeeYNiwYbRr144qVarwyy+/AFzS58u6kMKNCEyJ5BcKS4mI
5GMul4sxY8bw2Wefma8Z2wSVLl2aRx55hH79+mULSl1sx44dTJgwgV9//dV8rU6dOjzzzDPUrl2b
cuXK4XA4WLhwId9//z27du0iLS2NV155hSFDhuRKPUVERK4kKiqK5557jn379lGsWDEee+wx+vbt
S0hIiHmMy+Vi586dzJw5k59++sl8/XJb8mmyV0RECqrY2Fj69+/P77//TuHChenQoQP9+vXL1i4C
JCYmEhERwSuvvMKBAwfM1y8OTF3pxhjjfd1AIyJy67pw4QI+Pj6a3BQREbkNREdH07RpU86fPw9A
q1at2LVrF1WrVuWbb765bN9PgSm5FSksJSKSz6WnpzN16lQ++OADACwWC97e3nTv3p2XX34ZPz+/
Kw5cu91udu/ezbRp08xUOICvry9Op5OSJUtisVg4cuSIOQjetm1bpkyZYn5eg+IiIpIXjEDT559/
ztixY7lw4QKNGzfmo48+olSpUmbn++JO+OjRo812DC4fmMpK7Z2IiBQUmzdvpn///pw+fZo77riD
WbNmUbp06csGm86ePUvnzp3Zt2+f+dr1BKZEROTWtXPnTn755ReaNm1K/fr18fLyyusiiYiIyE02
YsQIfvrpJ9LS0szXQkNDWbRoEUWLFr3s5xSYkluNbqUWEcnHXC4Xnp6eNG3aFB8fH6xWK263m5SU
FI4fP46fnx+QeeFxORaLherVq/POO+8wbNgwvL29sdvtJCcnk5GRQVRUFEeOHAEyV616/PHHzQlm
p9OpQXMREckzxspP69at48KFC1gsFgYPHkypUqVwu91mp9v4p3EfyBtvvEGfPn3M8yxevJjevXsD
YLfbcTgcl3yX2jsRESkoli9fzunTpwF44YUXKF26NC6Xy2zLsrZpTqeToKAgvvvuOypXrmy+PmTI
EH7++WfzeN1LKSJy+wkPD+fLL7/kiy++4LnnnmPnzp15XSQRERG5iYy5xPfff5/nnnsOyOwP2u12
4uLiWL58+RXnG7OOq06ZMoW2bdua702cOJH3338fQEEpKTAUlhIRycesViunTp2iQ4cOpKSkUKhQ
IfO9pUuXMmjQINxuN3a7/YoXMABFixZl2LBhTJ8+nZdeeokKFSpQvHhxbDYbPj4+tG/fnjfeeIOJ
EycCmQlxXdCIiEheS0pK4siRI3h4eODj40NwcPBlV8CwWCy4XC4AXnvtNZ588kkgsz1dsmTJVQNT
IiIiBUFSUpL52MPDA7h86Ndms+FyuShRogSjR48mODjYfE+BKRGR21d4eDhTp05lxYoVAJQvX56a
NWvmcalERETkZjJW6Ad466236N27N263G6fTSWJiIkuWLCE2NvaK57hcYMpqtfLZZ5/x448/3txK
iNxACkuJiORzFy5coGnTpgQHB9OhQwdefPFF8725c+eagamsFzk5MSaPGzVqxJAhQ1i+fDkrV65k
/fr1rF+/ngkTJtCjRw8gM12e0xZFIiIiuS09PZ2EhAQyMjLw9fUlKCjoihO6xmpUdrudTp06ERIS
gtVqxWazKTAlIiK3HGPbhCutkGi0jXfddRe1a9cGwNvbG8gMTBnbtSswJSJyezCCUitXruT8+fPc
e++9LFu2DC8vr6vejCkiIiIF2+UCUwCrVq3igw8+ICUl5YrnuDgw9dhjj+FyuWjSpAmdO3e+uRUQ
uYEUlhIRyeeqVKnC8OHDGTVqFAMHDuSdd95h0KBB5vvz5s27psCUMUAOmcEpHx8fihYtSunSpSlV
qlS2Y7WilIiI5AdutxsfHx9KlSqFxWIhNjaWpUuXAte2bd4DDzxAhQoVcDgcWCwWLBYLS5YsoW/f
vgAKBouISIEUEBBgPv7tt9+4cOHCNYWcAgMDzbt+U1NTzdcHDx7MN998A2hbWhGRW114eDjTpk1j
5cqVJCYmUqtWLX766Se8vb21yryIiMgtJKc+ovFaToEpYw5x9uzZvPHGG9cVmJo0aRL/+c9/zH6l
blCVgkJhKRGRfCTrxYuxEhRA5cqVadWqFSVKlABg+PDhDB482Hz/aoGpiy+KrFar7hgWEZF8z2Kx
4O3tzX333We2Wzt27DDfv1JbZgz0N2vWDIAKFSrgdruxWq0sWrSI8ePH39zCi4iI3CSPPvooQUFB
APz5558cP34ci8VyxdVAjDazQoUKeHp68sADD1C5cmXz/Xnz5t3UMouISN47fPgwEydO5NdffzWD
UnPmzDGDUrqZREREpOAz+n5Zb4Qx5huzvma1WrMFpnr27GkGpn788cfrDkwZizzomkIKEoWlRETy
CZfLZa6aMX/+fHr16sXixYvN97NeXNhstmsOTLndbvMCaOvWrWzbtg3QHcMiIpL/GR35++67z1xF
Y+bMmSxcuBC48nZBRufe2J5o6NChvPrqq+aS0EOGDLnZxRcREblu13JTS7FixQgNDQXgzJkzvPTS
S5w/f/6KKw1nvRknPT2d4OBgFi1aRMmSJalTpw5z5sy5MRUQEZF8Kz4+nvPnz5OUlMQ999yjoJSI
iMgtxphnjIuLY8uWLbz11lv079+fF198kYEDB7JgwQIiIiKAzHFVm81mhp3+TWDqSs9F8jP9tYqI
5ANOpxObzcaRI0f43//+R3h4OMePH2fTpk0EBgbSoEGDSz5jtVoZPnw4ABMmTAD+vhv4008/xWaz
kZaWhpeXFwDbt29n8uTJLFu2jLFjx2rfYBERyfeMzvnDDz/M9OnTCQsLAzI77wEBATRq1MgMTGUN
ARsrSAHExcUBcPz4cQYPHkyJEiV4+umnAd3pJCIi+YvL5cJqtRIfH8+ePXsICwuja9euFCtWLNtx
pUqVYuDAgbzwwgtA5pZKw4cP56OPPqJw4cJm/9Jg3FADsHnzZiBzdRF/f3/WrVuHn58foHZRRORW
d++99/LYY49RunRpRo0apaCUiIjILcToBx46dIhRo0YRERHB8ePHsx2zatUqbDYbI0eOpHXr1hQq
VAi73U5GRgYeHh689dZbAHzxxRe4XC5+/PFHAEaPHo2Pj0+u10nkZtPKUiIiecy4gNm/fz/PPvss
S5cu5fjx4wQEBNChQwcyMjIu+1kjMHXxClMDBw4EMINSYWFhfPHFF/z2228AzJ079ybWSERE5Npc
afUMYwUMp9OJj48PH330EWXLlgUyA1BvvfUW69atA/5eLdHtdpt3UAGsWbOG7777DoDixYsDKCgl
IiL5ktPpxGq1cuzYMUaNGsWIESMYM2YM//d//2cGf7Nq2bIlw4YNM5+vXr2aYcOGmStMZT2v0S7+
9ttvzJw5E4AHH3wQwAxKOZ1OtYsiInks6yqAF7uWlQevxPh8586def/99xWUEhERuYW4XC5sNhsR
ERF06tSJlStXcvz4cby8vKhUqRKhoaEEBASQmJhIfHw8L730Ep999hmHDx8GwMPD419vySdSEOlK
WEQkD2W9gOnQoQPx8fEEBARw11138c4773DXXXdd9Rw5rTA1f/58YmJiGDFiBPv372fBggVs2bKF
1NRUWrZsyfTp029qvURERK7EWDnDeBwWFkZaWhqpqanccccdFC9e3LxbydhSqHz58vznP/9h9OjR
nD59mkOHDtG/f3/++9//8thjj2G327FYLJdMCKenp1OtWjVq166drQyaFBARkfzCuIHmwIED9O/f
nwMHDuBwOPDy8iItLY0jR44QGBh4yec6d+5MbGwss2bNIjU1lWXLlnHkyBHee+89ypcvT/Hixc3g
1KpVq5g1axZRUVEUKVKEe++9N9u5sgasREQkdxkr5VqtVjIyMvjjjz9ITk4mPT2du+++m9KlS+Pt
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
apRSUlI0d+5cWSwWXblyRZL0/fffq02bNvLx8cn0XPdt+e644w5JqXPPI0eOXPN9CUoBAAAAwM3F
WN+MiIjQwoULtXHjRu3YsUOS5OvrK09PTz3xxBO699571aZNG3l7e8tutys4OFijRo3Sm2++qb17
90qSxowZo7CwMDVu3FgtW7aUh4eHPDw89MMPP2jOnDn6888/JUkNGjQw719mx6233przHxzAv2Zx
GdFKAMhl586d0wMPPKD4+HgVLVpUUVFR5rGGDRtqwYIFslgsWVbAcL+hvGfPHu3fv1/z5s1TTEyM
IiMjzVKXd999t7p06SIp45KYAADcaC6XS+Hh4WrcuLEcDofq1aun77///h9dw70ctHFN9y32Bg0a
ZAamJOmZZ57R6NGjJREcBgDkLe7zNGP8slgsslgsqlChgsaPH6/69etnGSo2jh09elStWrVSQkKC
brvtNi1fvjzToBVBKQAAAAC4uRjrmmFhYXrhhRcUHh6uK1eupHmY1PjX29tbPXv21Jtvvmme73Q6
tW/fPr311lvatWuX+bqvr69KlCghX19feXt7a/fu3eaOOR06dNBnn30miZ1rgJsVYSkAeUZUVJQm
TpyoH374QU888YS8vLz08ccfm8cbNmyohQsXSso64JT+RnFKSoosFovi4uLkcrkUFBRkHuPGMAAg
t2Q0ib548aKaNWumixcvqmTJklq+fLnKlCnzj66bnJyssLAw1axZ03yf7AamCBADAHJL+nExs/HL
YrHI5XLp4Ycf1pQpU2SxWDKd1xlzw507d6pjx45KTk5W/fr19e2332Y53p0+fVozZ87U0qVLCUoB
AAAAQB5mzPsOHTqkJ554QpGRkfL29laRIkUUEhIif39/nTx5UocPHzYrTUmpa6JDhw5NUxkqOjpa
b775pn799VfFxMSYrxvzUEny9PRU69at9fnnn0viPiNwM+NOCIA8o2jRoho4cKCaNGmiGjVqqESJ
EvLz89PIkSMlSVu2bFGnTp20cOFCeXh4ZHpDN31FDZvNJqvVqiJFisjpdKZpyxcYAMD1lj7Ea0yg
ExMT5evrm+bmsMViMbebdblcOnPmjMqUKZOtSbfxPhs3btTbb7+tUaNGqWXLlrJYLFluyTdr1ixJ
MrfkAwDgRjLGL2Mb9iNHjuiOO+645vi1YsUKvfnmm/rggw8yHCNdLpc5/m7fvt3cnv3ee+/NcrxL
SUnRjBkzNHfuXMXFxRGUAgAAAIA8zGq16uTJk+rTp48iIyMVHBys5s2bq3///qpUqZKkv+edL7zw
gpYtWyabzaZZs2bJy8tLw4YNkySz2MLUqVP1ww8/6Pfff9cPP/yg2NhYORwO2e12tW7dWnXr1lWf
Pn0k8eApcLOzXrsJAOQ8I4Htcrlkt9uVmJgoKTUw1bhxY5UoUUKS1KdPH7377rvmeUZgSpIZmMro
ugaLxZLmBrX7zwAAXA9GMDciIkKSzNLM0t9Bqf3796tNmzbauHGjGZRyOp0qWrSomjZtKovFogsX
LmjKlCmSUsO96QO/7txvCO/YsUOnT59Wnz59dP78eXNsNG44S9K4cePUtWtXSalj5axZs8zqjQAA
3CjGgvXp06f12WefqWPHjmrZsqXWrFljtsls/JKkuXPnavDgwUpKSjJfs9vtcjqd5vi6efNmLViw
QJJUokQJ1apVS9LVc0eDp6en2rdvr7i4OFmtVoJSAAAAAJCHJSYmavbs2Tpx4oQKFSqkFi1a6NVX
X1WlSpXMh3KsVquioqJUokQJFS5cWHa7XcWLF1f37t3N6xhViyWpffv2Gj58uFauXKkNGzZo7dq1
2rBhg6ZNm2YGpRwOB0Ep4CZHagDADWcsXF+4cEELFy5Uz549NWvWLMXGxkr6O9Bk3BTu3bt3tgJT
7pU5/vjjD23cuPGGfSYAAKS/Q0vbt2/XI488olGjRklKHduSkpJks9l04MABdezYUYcPH9bYsWMV
Hh5utpGkevXqmTdwf/75Z02YMME8nlFgyn38++GHHzR58mRJUrdu3VSyZMk0WxpldMPZ5XIpJCTE
HFsBALgRjAXrw4cPq2/fvpo6dap27dolKXWMOnnypNk2q8DUvHnz1L9/f61bt04JCQny8PAwx9R1
69Zp2rRp5ljbpEkTtWnTRpKu2grX4HQ6Vbt2bS1dulRr164lKAUAAAAAeVhiYqJ+/fVXJSUlqWzZ
surXr59KlSplPpxjs9kUERGhjz76yKwUVbJkSS1dulRVq1ZNU5QhfdXikiVLqmzZsqpcubIqV65s
vm7sagPg5kbcEcANZVTUOHbsmEaMGKG//vpLp0+f1h9//KHSpUurZcuW8vHxkfT3TWGr1arevXtL
kkaMGCHp6i35kpOT5eXlJUkKDQ3VlClTtHr1ar3++usaMGBA7nxYAECBY7FYdPToUYWEhEiSli5d
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
21v33nuvypYtq0uXLmnLli26dOmSHA6HvvjiC50+fVrTpk3LtOJSRESEJMnDw0O33HKLKleurMDA
QFmtVl28eFGhoaE6e/asXC6XvvjiCyUnJ2vMmDFZfp6lS5fqpZdeUkpKivlalSpVVLNmTfn7+ysu
Lk5hYWE6ePCgnE6nEhMTs7yew+FQr1699Ouvv8rLy0t169ZVpUqVlJSUpG3btpmfYf369Ro+fLj+
97//ZXk9AAAAAACAG4XKUgAAAAAAAEgjISFBd999t2JjYyVJs2bN0kMPPWQenzhxoj744ANJUs2a
NfXTTz9lei33ylKenp5KSUlRUFCQJk+erAcffDBN29WrV2vgwIHm+zZp0iTTClTulaW8vLxkt9s1
dOhQ9erVS1ar1WwXFhamvn376uDBg5KkkiVLav369SpSpMhV13SvLOXh4SG73a4ePXro7bfflp+f
n9kuJSVFNptNVqtVO3bs0OOPPy6HwyFJatasmT7++GOVKFHCbJ+UlKRx48bp888/N19799131adP
nww/25gxY1SzZk01adLEDKm5c7lc+vnnn/X666/r4sWLkqQlS5aoQYMGGV5v7969euSRR8wAVM2a
NTVmzBjVqVPnqrbnz5/X4sWL5XQ61b9//zTH3CtLeXt7KykpSc2aNdPYsWNVunRps53dbteYMWM0
ZcoUSakVsLZu3ary5ctn2D8AAAAAAIAbyXrtJgAAAAAAAChIfvzxRzOwVKxYsasqMYWEhJhVkfbu
3av9+/dn67opKSmyWq368ssvrwpKSakVrKZNm2b+vmHDBv3666/XvG5ycrLefPNN9enTJ01QSpKq
V6+ub775RkWLFpWUGgaaPn36Na9pt9vVrVs3jR49Ok1QSkoNfRnv87///c8MStWrV08zZsxIE5SS
UoNFQ4cO1XPPPWe+Nn78eMXFxWX43m+99Zbat2+fYVBKSg0ftWzZUl999ZX52syZMzP9LEOHDjWD
UnfddZcWL16cYVBKSg2T9e3b96qgVHpJSUm655579OWXX6YJSkmpQbOhQ4eqdu3aklLDXcuWLcvy
egAAAAAAADcKYSkAAAAAAACk4b4F36OPPioPD480x8uVK2dWi0rf/loee+wx1a9fP9PjjRs3Vtu2
bc3f582bd81rVqhQIdMqTVJqAOiVV14xf//mm290rWLrPj4+GjJkSJZtDh06pN9++838ffTo0fLy
8sq0/ZtvvmmGtmJjY7VkyZIsr38tderU0S233CJJmYbKdu7cqR07dkhKDVlNmDDhqvDXvzV8+PCr
/n/DYLFY1KlTJ/P30NDQHHlPAAAAAACA/yrj1QwAAAAAAAAUSGfOnNGmTZvM3x9//PEM23Xs2FFb
t26VlLoF3JAhQ2Sz2a55/Y4dO16zzRNPPKGVK1dKkrZs2XLN9hkFutILCQnRe++9J4fDobNnz+rI
kSOqVq1apu0bN26c4VZ97jZv3mz+XKNGDdWsWTPL9oUKFdKjjz5qVoHasmWLnnrqqSzPOXLkiHbv
3q3jx48rNjZWycnJaYJeRgWw6OhoRUREqGzZsmnO37Bhg/lzo0aNVL169SzfL7sqVqyoO++8M8s2
7v99nDx5MkfeFwAAAAAA4L8iLAUAAAAAAADT4sWL5XQ6JUnVqlXTXXfdlWG7hx9+WEOGDFFiYqLO
nz+vDRs2qHnz5lle22KxZLr9m7u6deuaP1+4cEHnzp1TcHBwttpnpkiRIqpatarCwsIkpW4fmFVY
qlatWte85l9//WX+XK9evWu2N9oZYak9e/Zk2m7NmjUaN26c9u7dm63rSqmBqfRhqZ07d5o/N2zY
MNvXupbbbrvtmm2CgoLMn41QFwAAAAAAQG5jGz4AAAAAAACY3LfUy6yqlCT5+/urZcuWGZ6XmcDA
QBUuXPia7YoVKyYfHx/z94sXL2bZPn1AKDvtrnVNY7u8rLhfo1y5ctnqQ/ny5c2fo6OjM2zz0Ucf
6ZlnnvlHQSlJiouLu+q1CxcumD9XrFjxH10vK/7+/tds4+npaf5st9tz7L0BAAAAAAD+C8JSAAAA
AAAAkCSFhobq0KFDklKrQIWEhGTZ3j1M9fPPPysmJibL9r6+vtnui3vbK1eu5Mh13dtlFCxy5x7W
yox7vwoVKpStPri3y6gPGzdu1Mcff2z+XrduXY0dO1Y//fST9uzZo6NHjyoiIsL8z3333We2NSqC
uXN/j+z2MTssFkuOXQsAAAAAAOBGYhs+AAAAAAAASEpbHcrlcumee+7J9rmJiYlatmyZnnrqqUzb
JCQkZPt67m39/Pyy3Ta77bJT4epa3PsVHx+frXPc22XUh88//9z8uUuXLvrwww+zDCZdK/Tl/h7Z
7SMAAAAAAEB+RmUpAAAAAAAAKDk5Wd9///1/usa1tuKLiYm5ZpUoSYqKilJiYqL5+7W2xIuIiMhW
/06fPp3ta2ZHsWLF/nEfTp48af4cFBSU5pjD4dBvv/0mSbJarXrrrbeuWcHpWu9bokQJ8+fw8PBs
9REAAAAAACA/o7IUAAAAAAAAtGbNGl26dEmS5OHhoTvvvDNb57lcLoWGhkqS/vjjDx05ckRVq1bN
tO3OnTv1wAMPZHnN33//3fy5RIkSKlWqVJbtd+7cqYceeijLNjExMTp8+LD5e3Y/X1Zq1Khh/uze
56z88ccfmfYhKipKycnJkqTixYurePHiWV4rLCxMUVFRWbapU6eO1q9fL0navHmzBgwYkK1+AgAA
AAAA5FeEpQAAAAAAAJCmKlTTpk311VdfZfvc5s2b68CBA5KkRYsW6Y033si07XfffXfNsNSiRYvM
nxs2bHjN91+6dKlee+012Wy2TNssWbJEDodDkhQcHJxpoOufaNSokfnz3r17tW/fPt1xxx2Ztk9I
SNDSpUvN3++///40x63Wv4vAu1fWyszs2bOv2aZp06b66KOPJEm//vqrDh06pFtuueWa5wEAAAAA
AORXbMMHAAAAAABQwF28eNGsPiRJISEh/+h89/bfffedXC5Xpm0XL16snTt3Znp88+bNWrlypfl7
165dr/n+x48f1/Tp0zM9fuHCBY0fP978vUuXLtfc3i47qlWrpnvvvdf8fejQoUpJScm0/QcffKDI
yEhJkr+/vx577LE0x4OCghQQECBJunz5srZu3ZrptXbs2JGtsNTdd9+t+vXrS0qt7PXSSy9laytE
AAAAAACA/IqwFAAAAAAAQAG3ZMkSM+RTuHBhtWjR4h+d/+ijj5rho4iICG3evDnDdp6ennI4HHrm
mWe0cePGq46vWbNGzz//vBm2aty48TWrUEmSl5eXRo8erS+++EJOpzPNsUOHDqlr165mSKlEiRLq
1avXP/p8WXnzzTfNilbbtm1Tr169zPcyJCcna8yYMWkCXa+88or8/PzStLNarWrWrFmaNrt27brq
PZctW6annnpKDodDhQoVumYfR44cKW9vb0nSn3/+qZCQkEwDa+fPn9eUKVP0+eefX/O6AAAAAAAA
NyO24QMAAAAAACjg3Lfga9OmjXx9ff/R+WXLltU999yj3377zbye+xZ1huDgYLVu3VpffPGFunbt
qjvuuEM1atSQy+XSnj17dPDgwTRtx40bl633HzJkiIYNG6Zhw4ZpypQpatCggfz8/HT06FFt377d
DFB5eHjoo48+UlBQ0D/6fFmpX7++3n77bY0cOVKS9PPPP6tBgwZq2LChypQpo0uXLmnLli2Kjo42
z2nTpo169+6d4fVeeukl/fjjj0pMTNTJkyfVvn171a1bV1WqVFFKSor++OMPhYeHS5KefPJJHT16
NMsKVJJ055136sMPP9Qrr7wiu92uvXv3qn379qpatapq1qwpf39/xcbGKiwsTAcPHpTT6dRzzz2X
Q/8NAQAAAAAA5C2EpQAAAAAAAAqw/fv3a+/evebv/3QLPvfzjLDUypUr9f77719VOUlK3aruypUr
mj9/vvbt26d9+/Zd1aZq1aqaOXOmypUrl633btWqlby8vDRs2DCdOXNGS5cuvapNYGCgPvroIzVv
3vwffrJr69u3rwIDAzV8+HDFxsYqKSkpzbaGBpvNph49emjYsGGZbgNYvXp1ffbZZ3rhhReUkJAg
l8ul33//Xb///nuadk8++aRGjhypJ598Mlt9DAkJUcmSJTVo0CAzbHXkyBEdOXIkw/YZ/d8OAAAA
AAAgPyAsBQAAAAAAUIC5V5UKDg7OsCJUdjz88MN65513lJSUpPj4eC1fvlydO3e+qp2np6c+/PBD
tWvXTvPnz9eff/6p8+fPy9fXV7fccos6dOigJ5980tw2Lruefvpp3XPPPfr666+1adMmnTlzRpJU
vnx5PfTQQ+rZs6eCg4P/1WfLjq5du6pVq1aaO3eu1q9fr6NHj+rSpUvy8/NTmTJl9MADD6hLly6q
Xr36Na/VqlUrrVu3TtOmTdMvv/yi06dPy2azKTg4WPXr11enTp107733/uM+NmrUSBs3btTSpUu1
Zs0a7d69W5GRkUpOTpa/v78qVaqkunXrqk2bNrrnnnv+zX8NAAAAAAAAeZ7F5XK5crsTAAAAAAAA
yJ9OnjxpBnvKlSunbdu25ch177nnHp06dUqS9Ntvv6l8+fI5cl0AAAAAAADkb9bc7gAAAAAAAAAA
AAAAAAAA3AiEpQAAAAAAAAAAAAAAAAAUCISlAAAAAAAAAAAAAAAAABQIhKUAAAAAAAAAAAAAAAAA
FAiEpQAAAAAAAAAAAAAAAAAUCISlAAAAAAAAAAAAAAAAABQIFpfL5crtTgAAAAAAAAAAAAAAAADA
9UZlKQAAAAAAAAAAAAAAAAAFAmEpAAAAAAAAAAAAAAAAAAUCYSkAAAAAAAAAAAAAAAAABQJhKQAA
AAAAAAAAAAAAAAAFAmEpAAAAAAAAAAAAAAAAAAUCYSkAAAAAAAAAAAAAAAAABQJhKQAAAAAAAAAA
AAAAAAAFAmEpAAAAAAAAAAAAAAAAAAUCYSkAAAAAAAAAAAAAAAAABQJhKQAAAAAAAAAAAAAAAAAF
AmEpAAAAAAAAAAAAAAAAAAUCYSkAAAAAAAAAAAAAAAAABQJhKQAAAAAAAAAAAAAAAAAFAmEpAAAA
AAAAAAAAAAAAAAUCYSkAAAAAAAAAAAAAAAAABQJhKQAAAAAAAAAAAAAAAAAFAmEpAAAAAAAAAAAA
AAAAAAUCYSkAAAAAAAAAAAAAAAAABQJhKQAAAAAAAAAAAAAAAAAFwv8B9ePp+FrfKIIAAAAASUVO
RK5CYII=

------MultipartBoundary--1cXsM1BbHmTYIgsb1eKBADqHZKBn1QCLetLyc7B1dR------
