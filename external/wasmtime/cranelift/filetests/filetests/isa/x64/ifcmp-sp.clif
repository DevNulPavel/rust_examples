test compile precise-output
target x86_64

function %f(i64) -> i32 {
block0(v0: i64):
    v1 = ifcmp_sp v0
    brif ugt v1, block1
    jump block2

block1:
    v2 = iconst.i32 0
    return v2

block2:
    v3 = iconst.i32 1
    return v3
}

; VCode_ShowWithRRU {{
;   Entry block: 0
; Block 0:
;   (original IR block: block0)
;   (successor: Block 1)
;   (successor: Block 2)
;   (instruction range: 0 .. 4)
;   Inst 0:   pushq   %rbp
;   Inst 1:   movq    %rsp, %rbp
;   Inst 2:   cmpq    %rsp, %rdi
;   Inst 3:   jnbe    label1; j label2
; Block 1:
;   (original IR block: block1)
;   (instruction range: 4 .. 8)
;   Inst 4:   xorl    %eax, %eax
;   Inst 5:   movq    %rbp, %rsp
;   Inst 6:   popq    %rbp
;   Inst 7:   ret
; Block 2:
;   (original IR block: block2)
;   (instruction range: 8 .. 12)
;   Inst 8:   movl    $1, %eax
;   Inst 9:   movq    %rbp, %rsp
;   Inst 10:   popq    %rbp
;   Inst 11:   ret
; }}

