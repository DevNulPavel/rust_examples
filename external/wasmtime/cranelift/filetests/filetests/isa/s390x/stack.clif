test compile
target s390x

; FIXME: Should allocate register save area.

function %stack_addr_small() -> i64 {
ss0 = explicit_slot 8

block0:
  v0 = stack_addr.i64 ss0
  return v0
}

; check:  aghi %r15, -8
; nextln: la %r2, 0(%r15)
; nextln: aghi %r15, 8
; nextln: br %r14

function %stack_addr_big() -> i64 {
ss0 = explicit_slot 100000
ss1 = explicit_slot 8

block0:
  v0 = stack_addr.i64 ss0
  return v0
}

; check:  agfi %r15, -100008
; nextln: la %r2, 0(%r15)
; nextln: agfi %r15, 100008
; nextln: br %r14

; FIXME: don't use stack_addr legalization for stack_load and stack_store

function %stack_load_small() -> i64 {
ss0 = explicit_slot 8

block0:
  v0 = stack_load.i64 ss0
  return v0
}

; check:  aghi %r15, -8
; nextln: la %r2, 0(%r15)
; nextln: lg %r2, 0(%r2)
; nextln: aghi %r15, 8
; nextln: br %r14

function %stack_load_big() -> i64 {
ss0 = explicit_slot 100000
ss1 = explicit_slot 8

block0:
  v0 = stack_load.i64 ss0
  return v0
}

; check:  agfi %r15, -100008
; nextln: la %r2, 0(%r15)
; nextln: lg %r2, 0(%r2)
; nextln: agfi %r15, 100008
; nextln: br %r14


function %stack_store_small(i64) {
ss0 = explicit_slot 8

block0(v0: i64):
  stack_store.i64 v0, ss0
  return
}

; check:  aghi %r15, -8
; nextln: la %r3, 0(%r15)
; nextln: stg %r2, 0(%r3)
; nextln: aghi %r15, 8
; nextln: br %r14

function %stack_store_big(i64) {
ss0 = explicit_slot 100000
ss1 = explicit_slot 8

block0(v0: i64):
  stack_store.i64 v0, ss0
  return
}

; check:  agfi %r15, -100008
; nextln: la %r3, 0(%r15)
; nextln: stg %r2, 0(%r3)
; nextln: agfi %r15, 100008
; nextln: br %r14

