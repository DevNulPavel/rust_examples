test compile
target s390x

function %f0(r64, r64) -> r64 {
block0(v0: r64, v1: r64):
  return v1
}

; check:  lgr %r2, %r3
; nextln: br %r14

function %f1(r64) -> b1 {
block0(v0: r64):
  v1 = is_null v0
  return v1
}

; check:  cghi %r2, 0
; nextln: lhi %r2, 0
; nextln: lochie %r2, 1
; nextln: br %r14

function %f2(r64) -> b1 {
block0(v0: r64):
  v1 = is_invalid v0
  return v1
}

; check:  cghi %r2, -1
; nextln: lhi %r2, 0
; nextln: lochie %r2, 1
; nextln: br %r14

function %f3() -> r64 {
block0:
  v0 = null.r64
  return v0
}

; check:  lghi %r2, 0
; nextln: br %r14

function %f4(r64, r64) -> r64, r64, r64 {
    fn0 = %f(r64) -> b1
    ss0 = explicit_slot 8

block0(v0: r64, v1: r64):
    v2 = call fn0(v0)
    stack_store.r64 v0, ss0
    brz v2, block1(v1, v0)
    jump block2(v0, v1)

block1(v3: r64, v4: r64):
    jump block3(v3, v4)

block2(v5: r64, v6: r64):
    jump block3(v5, v6)

block3(v7: r64, v8: r64):
    v9 = stack_load.r64 ss0
    return v7, v8, v9
}

; check: Block 0:
; check:  stmg %r12, %r15, 96(%r15)
; nextln: aghi %r15, -192
; nextln: virtual_sp_offset_adjust 160
; nextln: lgr %r13, %r2
; nextln: lgr %r12, %r3
; nextln: lgr %r2, %r13
; nextln: bras %r1, 12 ; data %f + 0 ; lg %r3, 0(%r1)
; nextln: stg %r2, 168(%r15)
; nextln: stg %r13, 176(%r15)
; nextln: stg %r12, 184(%r15)
; nextln: (safepoint: slots [S0, S1, S2]
; nextln: basr %r14, %r3
; nextln: lg %r13, 176(%r15)
; nextln: lg %r12, 184(%r15)
; nextln: la %r3, 160(%r15)
; nextln: stg %r13, 0(%r3)
; nextln: llcr %r2, %r2
; nextln: chi %r2, 0
; nextln: jgnlh label1 ; jg label3
; check: Block 1:
; check:  jg label2
; check: Block 2:
; check:  lgr %r2, %r12
; nextln: jg label5
; check: Block 3:
; check:  jg label4
; check: Block 4:
; check:  lgr %r2, %r13
; nextln: lgr %r13, %r12
; nextln: jg label5
; check: Block 5:
; check:  la %r3, 160(%r15)
; nextln: lg %r3, 0(%r3)
; nextln: lgr %r4, %r3
; nextln: lgr %r3, %r13
; nextln: lmg %r12, %r15, 288(%r15)
; nextln: br %r14
