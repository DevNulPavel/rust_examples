# CNAME record successes

[[cmd]]
name = "Running with ‘cname.example’ prints the correct CNAME record"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} CNAME cname.example"
stdout = { file = "outputs/cname.example.ansitxt" }
stderr = { empty = true }
status = 0
tags = [ "cname", "madns" ]


# CNAME record successes (JSON)

[[cmd]]
name = "Running with ‘cname.example --json’ prints the correct CNAME record structure"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} CNAME cname.example --json | jq"
stdout = { file = "outputs/cname.example.json" }
stderr = { empty = true }
status = 0
tags = [ "cname", "madns", "json" ]


# CNAME record invalid packets

[[cmd]]
name = "Running with ‘empty.cname.invalid’ displays a protocol error"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} CNAME empty.cname.invalid"
stdout = { empty = true }
stderr = { string = "Error [protocol]: Malformed packet: insufficient data" }
status = 1
tags = [ "cname", "madns" ]

[[cmd]]
name = "Running with ‘incomplete.cname.invalid’ displays a protocol error"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} CNAME incomplete.cname.invalid"
stdout = { empty = true }
stderr = { string = "Error [protocol]: Malformed packet: insufficient data" }
status = 1
tags = [ "cname", "madns" ]
