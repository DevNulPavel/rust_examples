# TLSA record successes

[[cmd]]
name = "Running with ‘tlsa.example’ prints the correct TLSA record"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} TLSA tlsa.example"
stdout = { file = "outputs/tlsa.example.ansitxt" }
stderr = { empty = true }
status = 0
tags = [ "tlsa", "madns" ]


# TLSA record successes (JSON)

[[cmd]]
name = "Running with ‘tlsa.example --json’ prints the correct TLSA record structure"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} TLSA tlsa.example --json | jq"
stdout = { file = "outputs/tlsa.example.json" }
stderr = { empty = true }
status = 0
tags = [ "tlsa", "madns", "json" ]


# TLSA record invalid packets

[[cmd]]
name = "Running with ‘empty.tlsa.invalid’ displays a protocol error"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} TLSA empty.tlsa.invalid"
stdout = { empty = true }
stderr = { string = "Error [protocol]: Malformed packet: insufficient data" }
status = 1
tags = [ "tlsa", "madns" ]

[[cmd]]
name = "Running with ‘incomplete.tlsa.invalid’ displays a protocol error"
shell = "dog --colour=always ${MADNS_ARGS:-@madns.binarystar.systems:5301 --tcp} TLSA incomplete.tlsa.invalid"
stdout = { empty = true }
stderr = { string = "Error [protocol]: Malformed packet: insufficient data" }
status = 1
tags = [ "tlsa", "madns" ]
