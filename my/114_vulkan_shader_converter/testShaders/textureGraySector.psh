varying vec2 v_texcoord;

uniform sampler2D u_texture;
uniform vec4 u_color;
uniform float u_angle;
uniform float u_alpha;
uniform float u_mixCoeff;

#define M_PI 3.1415926535897932384626433832795

void main(void)
{
    vec4 color = texture2D(u_texture, v_texcoord);   
    vec2 delta = v_texcoord - vec2(0.5);
    
    float ang = - atan( -delta.x, delta.y );
    ang = ang - M_PI * 2.0 * floor(ang / (M_PI * 2.0) );

    float alpha=color.a*u_alpha;

    float gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));

    vec3 grayC = mix(color.rgb, vec3(gray, gray, gray), u_mixCoeff)* alpha;
    
    if(ang>u_angle)gl_FragColor = vec4(grayC, alpha);
    else gl_FragColor = color;
}