varying PRECISION_HIGH vec2 v_texcoord;
uniform sampler2D u_texture;
uniform PRECISION_HIGH float u_progress;
uniform PRECISION_HIGH float u_inverse;
#define PI 3.141592653589793

void main(void) {
     const vec2 down = vec2(0.0, -1.0);
     const vec2 texCoordCenter = vec2(0.5, 0.5);

     vec2 toPixelDirection = normalize(v_texcoord - texCoordCenter);
     float dotValue = dot(down, toPixelDirection);

     // [0.0 - 1.0]
     PRECISION_HIGH float acosValue = acos(dotValue);
     PRECISION_LOW float angleSign = sign(toPixelDirection.x);

     float angle = 1.0 - (acosValue / PI * angleSign + 1.0) / 2.0;
     if (u_inverse > 0.0){
          angle = (acosValue / PI * angleSign + 1.0) / 2.0;
     }
     // no if
     PRECISION_LOW float resultMul = 1.0 - step(u_progress, angle);
     gl_FragColor = texture2D(u_texture, v_texcoord) * resultMul;

    // if
    //if(angle < u_progress){
    //    gl_FragColor = texture2D(u_texture, v_texcoord);
    //}else{
    //    discard;
    //}
}

