# A records

[[cmd]]
name = "Look up an existing A record formatted as JSON"
shell = "dog a-example.lookup.dog @1.1.1.1 --json"
stdout = { string = '10.20.30.40' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "a" ]

[[cmd]]
name = "Look up a missing A record formatted as JSON"
shell = "dog non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "a" ]


# AAAA records

[[cmd]]
name = "Look up an existing AAAA record formatted as JSON"
shell = "dog AAAA aaaa-example.lookup.dog @1.1.1.1 --json"
stdout = { string = '::1' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "aaaa" ]

[[cmd]]
name = "Look up a missing AAAA record formatted as JSON"
shell = "dog AAAA non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "aaaa" ]


# CAA records

[[cmd]]
name = "Look up an existing CAA record formatted as JSON"
shell = "dog CAA caa-example.lookup.dog @1.1.1.1 --json"
stdout = { string = '"some.certificate.authority"' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "caa" ]

[[cmd]]
name = "Look up a missing CAA record formatted as JSON"
shell = "dog CAA non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "caa" ]


# CNAME records

[[cmd]]
name = "Look up an existing CNAME record formatted as JSON"
shell = "dog CNAME cname-example.lookup.dog @1.1.1.1 --json"
stdout = { string = '"dns.lookup.dog."' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "cname" ]

[[cmd]]
name = "Look up a missing CNAME record formatted as JSON"
shell = "dog CNAME non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "cname" ]


# HINFO records

[[cmd]]
name = "Look up an existing HINFO record formatted as JSON"
shell = "dog HINFO hinfo-example.lookup.dog @1.1.1.1 --json"
stdout = { string = '"some-kinda-os"' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "hinfo" ]

[[cmd]]
name = "Look up a missing HINFO record formatted as JSON"
shell = "dog HINFO non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "hinfo" ]


# MX records

[[cmd]]
name = "Look up an existing MX record formatted as JSON"
shell = "dog MX mx-example.lookup.dog @1.1.1.1 --json"
stdout = { string = 'some.mail.server.' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "mx" ]

[[cmd]]
name = "Look up a missing MX record formatted as JSON"
shell = "dog MX non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "mx" ]


# NS records

[[cmd]]
name = "Look up an existing NS record formatted as JSON"
shell = "dog NS lookup.dog @1.1.1.1 --json"
stdout = { string = 'ns1' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "ns" ]

[[cmd]]
name = "Look up a missing NS record formatted as JSON"
shell = "dog NS non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "ns" ]


# SOA records

[[cmd]]
name = "Look up an existing SOA record formatted as JSON"
shell = "dog SOA lookup.dog @1.1.1.1 --json"
stdout = { string = 'ns1' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "soa" ]

[[cmd]]
name = "Look up a missing SOA record formatted as JSON"
shell = "dog MX non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "soa" ]


# SRV records

[[cmd]]
name = "Look up an existing SRV record formatted as JSON"
shell = "dog SRV srv-example.lookup.dog @1.1.1.1 --json"
stdout = { string = 'dns.lookup.dog.' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "srv" ]

[[cmd]]
name = "Look up a missing SRV record formatted as JSON"
shell = "dog SRV non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "srv" ]


# TXT records

[[cmd]]
name = "Look up an existing TXT record formatted as JSON"
shell = "dog TXT txt-example.lookup.dog @1.1.1.1 --json"
stdout = { string = '"Cache Invalidation and Naming Things"' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "txt" ]

[[cmd]]
name = "Look up a missing TXT record formatted as JSON"
shell = "dog TXT non.existent @1.1.1.1 --json"
stdout = { string = '[]' }
stderr = { empty = true }
status = 0
tags = [ "live", "cloudflare", "json", "txt" ]
